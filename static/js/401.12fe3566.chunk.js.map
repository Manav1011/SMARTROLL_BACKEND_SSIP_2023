{"version":3,"file":"static/js/401.12fe3566.chunk.js","mappings":"sPA6DA,QA1DA,SAAsBA,GAAyB,IAAxB,KAAEC,EAAI,aAACC,GAAcF,EAC5C,MAAOG,EAAeC,IAAqBC,EAAAA,EAAAA,UAAS,MAClD,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAU,CAACC,UAAU,8DAA6DC,SAAA,EACjFH,EAAAA,EAAAA,MAAA,OAAKE,UAAU,0CAAyCC,SAAA,EACtDH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,0BAAyBC,SAAER,EAAKU,SACjDL,EAAAA,EAAAA,MAAA,SAAOE,UAAU,0DAAyDC,SAAA,EACxEH,EAAAA,EAAAA,MAAA,OACEM,MAAM,6BACNC,MAAO,GACPC,OAAQ,GACRC,KAAK,eACLP,UAAU,sBACVQ,QAAQ,YAAWP,SAAA,EAEnBC,EAAAA,EAAAA,KAAA,QAAMO,EAAE,gHACRP,EAAAA,EAAAA,KAAA,QAAMO,EAAE,yGACJ,oBAIVP,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mBAEhBE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SACnBR,EAAKiB,QAAQC,KAAI,CAACC,EAAQC,KACzBf,EAAAA,EAAAA,MAAA,OAAiBE,UAAU,OAAMC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SACEY,KAAK,QACLC,KAAI,UAAAC,OAAYvB,EAAKwB,MACrBC,MAAON,EAAOK,KACdE,GAAE,UAAAH,OAAYvB,EAAKwB,KAAI,KAAAD,OAAIH,GAC3Bb,UAAU,OACVoB,SAAWC,IAAOzB,EAAkByB,EAAEC,OAAOJ,MAAM,KAErDhB,EAAAA,EAAAA,KAAA,SACEqB,QAAO,UAAAP,OAAYvB,EAAKwB,KAAI,KAAAD,OAAIH,GAChCb,UAAU,sCAAqCC,SAE9CW,EAAOA,UAEVd,EAAAA,EAAAA,MAAA,QAAME,UAAU,kCAAiCC,SAAA,CAAC,IAAEW,EAAOY,cAAc,eAfjEX,QAmBdX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,2BAA0BC,UACzCC,EAAAA,EAAAA,KAAA,UACEF,UAAU,oPACVc,KAAK,SACLW,QAASA,KAAO/B,EAAaD,EAAKwB,KAAKtB,EAAe,EAAEM,UAExDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,OAAMC,SAAC,wBAK/B,ECgBA,QArEA,WACI,MAAOyB,EAAcC,IAAWC,EAAAA,EAAAA,KAC1BC,EAAgBC,EAAAA,EAAMC,UACrBC,EAAQC,IAAcpC,EAAAA,EAAAA,UAAS,IAChCqC,EAAU,CACZ,eAAgB,mBAChB,8BAA8B,IAElCC,EAAAA,EAAAA,YAAU,KACNR,EACID,EACAG,EACA,yDACA,MACAK,EACA,KACA,MACAE,MAAMC,IACN,GAAIA,EAAIC,MACNC,MAAMF,EAAIG,aAAaC,aAClB,CAAC,IAADC,EAAAC,EACL,IAAIC,EAAa,OAAHP,QAAG,IAAHA,GAAa,QAAVK,EAAHL,EAAKQ,gBAAQ,IAAAH,GAAM,QAANC,EAAbD,EAAeI,YAAI,IAAAH,OAAhB,EAAHA,EAAqBG,KACnCb,EAAWW,GACXG,QAAQC,IAAIJ,EACd,IACA,GACL,IAEH,MAAMlD,EAAeuD,MAAOC,EAAYC,KACpCxB,EACID,EACAG,EACA,6CACA,OACAK,EACA,CAACgB,YAAYA,EAAYE,mBAAmBD,GAC5C,MACAf,MAAMC,IACFA,EAAIC,MACNC,MAAMF,EAAIG,aAAaC,SAErBF,MAAM,qCACV,GACA,EAEV,OACEzC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACKC,EAAAA,EAAAA,KAACmD,EAAAA,GAAM,CACFrD,UAAU,iFACVsD,MAAM,UACNC,SAAS,EAAKtD,SACf,oBAGDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wCAAuCC,SACrD+B,EAAQwB,OAAS,EACdxB,EAAQrB,KAAI,CAAClB,EAAMoB,KACnBX,EAAAA,EAAAA,KAACuD,EAAa,CAAChE,KAAMA,EAAkBC,aAAcA,GAArBmB,MAGlCX,EAAAA,EAAAA,KAAA,OAAKF,UAAU,8CAA6CC,UAC1DC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,8BAMtB,C","sources":["views/student_controller/surveys/DisplaySurvey.js","views/student_controller/surveys/SubmitSurvey.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { CToastBody } from '@coreui/react'\n\nfunction DisplaySurvey({ item,SubmitSurvey }) {\nconst [selectedOption,setSelectedOption] = useState(null)\n  return (\n    <CToastBody className=\"flex-row px-3 flex-wrap justify-content-center bg-slate-200\">\n      <div className=\"w-100 fw-bold text-center text-sm-start\">\n        <div>\n          <small className=\"mx-2 my-2 text-xl block\">{item.title}</small>\n          <small className=\"mx-2 my-2 text-xs flex items-center gap-2 text-gray-700\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width={16}\n              height={16}\n              fill=\"currentColor\"\n              className=\"bi bi-check2-circle\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 1 0 0 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 1 1 0-11 0\" />\n              <path d=\"M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0z\" />\n            </svg>\n            Select One\n          </small>\n        </div>\n        <hr className=\"w-100 my-2\" />\n      </div>\n      <div className=\"w-100\">\n        {item.options.map((option, index) => (\n          <div key={index} className=\"my-2\">\n            <input\n              type=\"radio\"\n              name={`survey-${item.slug}`}\n              value={option.slug}\n              id={`option-${item.slug}-${index}`}\n              className=\"mr-2\"\n              onChange={(e) => {setSelectedOption(e.target.value)}}\n            />\n            <label\n              htmlFor={`option-${item.slug}-${index}`}\n              className=\"text-blue-700 font-bold text-sm p-2\"\n            >\n              {option.option}\n            </label>\n            <span className=\"ml-2 text-gray-500/60 font-bold\">({option.student_count} votes)</span>\n          </div>\n        ))}\n      </div>      \n      <div className=\"flex-initial py-3 w-full\">\n      <button\n        className=\"w-full justify-center flex items-center px-5 py-2.5 font-medium tracking-wide text-white capitalize bg-slate-800 rounded-md focus:outline-none focus:bg-gray-900 transition duration-300 transform active:scale-95 ease-in-out hover:bg-green-500\"\n        type=\"submit\" \n        onClick={() => {SubmitSurvey(item.slug,selectedOption)}}       \n      >        \n        <span className=\"pl-2\">Submit Survey</span>\n      </button>\n    </div>\n    </CToastBody>\n  )\n}\n\nexport default DisplaySurvey\n","import React,{useEffect, useState} from 'react'\nimport { CAlert } from '@coreui/react'\nimport useAPI from 'src/global_function/useApi'\nimport axios from 'axios'\nimport DisplaySurvey from './DisplaySurvey'\n\nfunction SubmitSurvey() {\n    const [StoredTokens, CallAPI] = useAPI()\n    const axiosInstance = axios.create()\n    const [Surveys,setSurveys] = useState([])\n    const headers = {\n        'Content-Type': 'application/json',\n        'ngrok-skip-browser-warning': true,\n    }\n    useEffect(() => {\n        CallAPI(\n            StoredTokens,\n            axiosInstance,\n            '/manage/additional_features/get_surveys_of_the_student',\n            'get',\n            headers,\n            null,\n            null,\n          ).then((res) => {\n            if (res.error) {\n              alert(res.errorMessage.message)\n            } else {\n              let surveys = res?.response?.data?.data\n              setSurveys(surveys)\n              console.log(surveys);\n            }\n          })\n    }, [])\n\n    const SubmitSurvey = async (survey_slug,option_slug) => {\n        CallAPI(\n            StoredTokens,\n            axiosInstance,\n            '/manage/additional_features/submit_survey/',\n            'post',\n            headers,\n            {survey_slug:survey_slug,marked_option_slug:option_slug},\n            null,\n          ).then((res) => {\n            if (res.error) {\n              alert(res.errorMessage.message)\n            } else {\n                alert(\"Your response has been submitted!!\")\n            }\n          })\n    }\n  return (\n    <div>\n         <CAlert\n              className=\"m-0 rounded-0 w-100 p-2 d-flex justify-content-between align-items-center mb-2\"\n              color=\"primary\"\n              visible={true}\n            >\n              Active Surveys\n            </CAlert>\n            <div className='flex flex-col gap-4 overflow-y-scroll'>\n            {Surveys.length > 0 ? (\n                Surveys.map((item, index) => (\n                <DisplaySurvey item={item} key={index} SubmitSurvey={SubmitSurvey}/>\n              ))\n            ) : (\n              <div className=\"alert alert-warning w-full my-2 text-center\">\n                <span>No Inactive Surveys</span>\n              </div>\n            )}\n            </div>\n    </div>\n  )\n}\n\nexport default SubmitSurvey"],"names":["_ref","item","SubmitSurvey","selectedOption","setSelectedOption","useState","_jsxs","CToastBody","className","children","_jsx","title","xmlns","width","height","fill","viewBox","d","options","map","option","index","type","name","concat","slug","value","id","onChange","e","target","htmlFor","student_count","onClick","StoredTokens","CallAPI","useAPI","axiosInstance","axios","create","Surveys","setSurveys","headers","useEffect","then","res","error","alert","errorMessage","message","_res$response","_res$response$data","surveys","response","data","console","log","async","survey_slug","option_slug","marked_option_slug","CAlert","color","visible","length","DisplaySurvey"],"sourceRoot":""}