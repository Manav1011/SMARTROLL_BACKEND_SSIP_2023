{"version":3,"file":"static/js/408.bedbb78a.chunk.js","mappings":"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","sources":["_nav.js","base_url.js","components/AppSidebarNav.js","global_function/GlobalFunctions.js","global_function/useApi.js","views/teacher/LectureHistory.js","views/teacher/AdditionalFeatures.js","routes.js","components/AppContent.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebar.js","layout/DefaultLayout.js","views/subject/Subject.js","views/teacher/Session_history.js"],"sourcesContent":["import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilDrop,\n  cilPencil,\n  cilAccountLogout,\n  cilCalendar,\n  cilNotes,\n  cilPeople,\n  cilLibraryBuilding,\n  cilSchool,\n  cilClock,\n  cilCloudUpload,\n  cilFolderOpen,\n  //cilSpeedometer,\n} from '@coreui/icons'\nimport { CNavItem, CNavTitle } from '@coreui/react'\n\n\nconst _nav = {\n  superadmin_role:[\n    {\n      component: CNavTitle,\n      name: 'ADMNISTRATION',\n    },\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/superadmin',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },{\n      component: CNavItem,\n      name: 'Manage Events',\n      to: '/superadmin/events',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },{\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    }\n  ],\n  admin_role:[    \n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Subject',\n      to: '/subject',\n      icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Teachers',\n      to: '/manage-teachers',\n      icon: <CIcon icon={cilSchool} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Add Student',\n      to: '/addstudent',\n      icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Timetable',\n      to: '/timetable',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Attendance History',\n      to: '/attendance-history',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Ongoing Events',\n      to: '/ongoing-events',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',\n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n  ],\n  teacher_role: [\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/teacher/dashboard',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'LectureHistory',\n      to: '/teacher/lectures/history',\n      icon: <CIcon icon={cilClock} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Additional Features',\n      to: '/teacher/lectures/additional-features',\n      icon: <CIcon icon={cilClock} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Upload Materials',\n      to: '/teacher/upload-materials',\n      icon: <CIcon icon={cilCloudUpload} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Ongoing Events',\n      to: '/ongoing-events',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Upload Results',\n      to: '/upload-results',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',\n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n  ],\n  student_role: [\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/studentdashboard',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Surveys',\n      to: '/surveys',\n      icon: <CIcon icon={cilClock} customClassName=\"nav-icon\" />,\n    }, \n    {\n      component: CNavItem,\n      name: 'Ongoing Events',\n      to: '/ongoing-events',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Exam Results',\n      to: '/exam-results',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'View Materials',\n      to: '/view-materials',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },{\n      component: CNavItem,\n      name: 'Additional Features',\n      to: '/student/additional-features',\n      icon: <CIcon icon={cilClock} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',\n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n  ],\n}\n\nexport default _nav\n","// export const base_url= `https://smartroll.ldce.mnv-dev.live`;\n// export const websocket = `wss://smartroll.ldce.mnv-dev.live`;\n// export const base_url = `https://638f-2409-40c1-100d-4c4d-b97e-a61a-2791-46c7.ngrok-free.app`\n// export const websocket = `ws://638f-2409-40c1-100d-4c4d-b97e-a61a-2791-46c7.ngrok-free.app`\n\nexport const base_url = `https://7884-2405-201-2024-b0a8-83e8-2c82-2058-3df3.ngrok-free.app`\nexport const websocket = `ws://localhost:8000`\n// const token = localStorage.getItem('accessToken')\n// const header = {\n//     \"Content-Type\":\"application/json\",\n//     \"Authorization\": `Bearer ${token}`,\n//     'ngrok-skip-browser-warning':true\n//   }\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import axios from 'axios'\nimport {base_url} from 'src/base_url'\n\nimport Swal from 'sweetalert';\n\n// Used for handling expired tokens\nconst APIMiddleware = async (reqInstance, endpoint, method, headers, body = null, params = null) => {\n    // Get the access and refresh tokens\n    const access = localStorage.getItem('accessToken');\n    const refresh = localStorage.getItem('refreshToken');\n    headers['Authorization'] = `Bearer ${access}`;\n\n    let response_obj;\n    window.setProgress(100)\n    if (method === 'get') {\n        try {\n            const response = await reqInstance.get(`${base_url}${endpoint}`, { headers, params });\n            response_obj = { 'error': false, 'response': response };\n        } catch (error) {\n            if (error.response && error.response.status === 401) {                \n                const result = await expireToken(refresh);\n                localStorage.setItem('accessToken', result.access);\n                localStorage.setItem('refreshToken', result.refresh);                                \n                response_obj = await APIMiddleware(reqInstance, endpoint, method, headers, body, params);                \n            } else {\n                response_obj = { 'error': true, 'error': error };\n            }\n        }\n    } else if (method === 'post') {\n        try {\n            const response = await reqInstance.post(`${base_url}${endpoint}`, body, { headers });\n            response_obj = { 'error': false, 'response': response };\n        } catch (error) {\n            if (error.response && error.response.status === 401) {\n                const result = await expireToken(refresh);\n                localStorage.setItem('accessToken', result.access);\n                localStorage.setItem('refreshToken', result.refresh);\n                response_obj = await APIMiddleware(reqInstance, endpoint, method, headers, body, params);                \n            } else {\n                response_obj = { 'error': true, 'error': error };\n            }\n        }\n    }    \n    return response_obj;\n};\n\nconst expireToken = async (refreshToken) => {\n    const header = {\n        'ngrok-skip-browser-warning': true\n    };\n\n    return axios.post(`${base_url}/auth/api/token/refresh/`, { \"refresh\": refreshToken }, { headers: header })\n        .then((response) => response.data)\n        .catch((error) => { throw error; });\n};\n\nconst showAlert = (title,text) => {\n    \n    Swal({\n        title: title,\n        text: text,\n        icon: 'success',\n        button: 'OK',\n      });\n  \n  };\n\nexport {APIMiddleware , showAlert}","import axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { Store } from \"src/views/forms/validation/store\";\nimport {base_url} from \"src/base_url\";\n\n\nconst useAPI = () => {  \n  const navigate = useNavigate()\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken , refreshToken, loader_state } = state\n\n  const StoredTokens = {\n    accessToken,\n    refreshToken\n  }\n  const CallAPI = async (tokens=StoredTokens,reqInstance, endpoint, method, headers, body = null, params = null) => {    \n    ctxDispatch({ type: 'LOADER_STATE', payload: true});\n    headers['Authorization'] = `Bearer ${tokens.accessToken}`;    \n    try {\n      const response = await makeRequest(reqInstance, endpoint, method, headers, body, params);\n      ctxDispatch({ type: 'LOADER_STATE', payload: false});\n      return { error: false, response };\n    } catch (error) {            \n        if (error.response && error.response.status === 401) {\n          const result = await expireToken(tokens.refreshToken);          \n          if(result.access && result.refresh){\n            const token_data = {\n              \"accessToken\" : result.access,\n              \"refreshToken\": result.refresh\n            }\n            localStorage.setItem('accessToken',result.access)\n            localStorage.setItem('refreshToken',result.refresh)\n            ctxDispatch({ type: 'ACCESS_TOKEN', payload: result.access});\n            ctxDispatch({ type: 'REFRESH_TOKEN', payload: result.refresh });\n            return CallAPI(token_data, reqInstance, endpoint, method, headers, body, params);\n          }\n          if(result.action == 'tokenExpired' && result.status === 401){\n            localStorage.removeItem('accessToken')\n            localStorage.removeItem('refreshToken')\n            navigate('/auth/sign-in/')\n            ctxDispatch({ type: 'LOADER_STATE', payload: false});\n            return { error: true, result };\n          }\n        } else {\n          ctxDispatch({ type: 'LOADER_STATE', payload: false});\n          return { error: true, errorMessage: error.response.data || 'Unknown error' };\n        }      \n    }\n  }\n  return [StoredTokens,CallAPI]\n};\n\nconst makeRequest = async (reqInstance, endpoint, method, headers, body, params) => {\n  if (method === 'get') {\n    return await axios.get(`${base_url}${endpoint}`, { headers, params });\n  } else if (method === 'post') {\n    return await axios.post(`${base_url}${endpoint}`, body, { headers });\n  } else {\n    throw new Error('Invalid HTTP method');\n  }\n};\n\nconst expireToken = async (refreshToken) => {\n  const header = {\n    'ngrok-skip-browser-warning': true,\n  };  \n  try {\n    const response = await axios.post(`${base_url}/auth/api/token/refresh/, { refresh: ${refreshToken} }, { headers: header }`);\n    return response.data;\n  } catch (error) {\n    if(error.response.status === 401){       \n      return {'action':'tokenExpired','status':error.response.status};\n    }\n  }\n};\n\nexport default useAPI;","import React, { useEffect, useState } from 'react'\nimport { \n    CRow,\n    CCol,\n    CCardHeader,\n    CCard,\n    CCardBody,\n    CTable,\n    CTableHead,\n    CTableRow,\n    CTableHeaderCell,\n    CTableBody,\n    CTableDataCell,\n    CFormInput\n} from '@coreui/react'\nimport useAPI from 'src/global_function/useApi'\nimport axios from 'axios'\nimport '../../css/tailwind.css'\nimport Subject from '../subject/Subject'\nimport Session_history from './Session_history'\nimport moment from 'moment';\n\nconst LectureHistory = () => {\nconst [StoredTokens, CallAPI] = useAPI()\nconst [subjects,SetSubjects] = useState(null)\nconst [lecture,setLecture] = useState(null)\nconst [FilterLecture,setFilterLecture] = useState(null)\nconst [attendances, setAttendances] = useState(null)\nconst [visible , setVisible] = useState(false)\nconst [session_data, setSessionData] = useState(null)\n\nconst load_subjects_of_teacher = async () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/get_subjects_of_teacher',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      SetSubjects(response.data.data)  \n       \n    }\n    else{\n      alert(response_obj.errorMessage.message)\n    }\n  }\n  const load_lectures = async (subject_slug) => {\n    const headers = {\n        'Content-Type': 'application/json',\n        'ngrok-skip-browser-warning': true,\n      }\n      const axiosInstance = axios.create()\n      const response_obj = await CallAPI(\n        StoredTokens,\n        axiosInstance,\n        '/manage/get_lecture_sessions_for_teacher',\n        'get',\n        headers,\n        null,\n        {subject_slug:subject_slug},\n      )\n      if (response_obj.error === false) {\n        const response = response_obj.response        \n        setLecture(response.data.data)     \n      }\n      else{\n        alert(response_obj.errorMessage.message)\n      }\n  }\n\n  const search_lecture = (day)=>{\n    // console.log(day);\n    const filteredData = lecture.filter(item => item.session.some(session => session.day === day));\n    \n    if(filteredData.length > 0) {\n      setFilterLecture(filteredData)\n    }\n    else{\n      setFilterLecture(null)\n    }\n    \n  }\n\n\n  const get_session_data = async(session_id)=>{\n    const headers = {\n      'Content-Type':\"application/json\",\n      'ngrok-skip-browser-warning':true\n    }\n\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      `/manage/session/get_session_data_for_export/${session_id}`,\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      setAttendances(response.data.data.marked_attendances)\n      setSessionData(response.data.data)\n      setVisible(true)\n    }\n    else{\n      alert(response_obj.errorMessage.message)\n    }\n  }\n  useEffect(() => {\n    load_subjects_of_teacher()\n  },[])\n  return (\n    <>\n      {\n        subjects ? (<>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select A Subject</label>\n              <select className=\"form-select\" aria-label=\"Default select example\" required  onChange={(e) => {load_lectures(e.target.value)}}>\n                <option value=\"\">....</option>\n                {subjects && subjects.map((item,index) => (\n                    <option key={index} value={item.slug}>{item.subject_name}</option>\n                ))}               \n              </select>\n        </div>\n        \n        {\n          FilterLecture ? (\n<CRow>\n            <CCol xs>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <div className='d-flex flex-wrap justify-between'>\n                    <div>\n                      <strong>Subject Attendance History</strong>\n                    </div>\n                    <div>\n                      <div className='d-flex'>\n                        <div>\n                          <input type=\"date\" id=\"validationCustom01\"  required  onChange={(e)=>{search_lecture(e.target.value)}}/>\n                        </div>\n                        <div className='mx-2'>  \n                        </div>\n                      </div>\n                    \n                    \n                    </div>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n\n                  <CTable align=\"middle\" className=\"mb-0 border text-center\" hover responsive>\n                    <CTableHead color=\"light\">\n                      <CTableRow>\n                        <CTableHeaderCell>classroom</CTableHeaderCell>\n                        <CTableHeaderCell>Lecture Type</CTableHeaderCell>\n                        <CTableHeaderCell>Date</CTableHeaderCell>\n                        <CTableHeaderCell>Time</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      {FilterLecture.map((lecture, index) => (\n                        lecture.session.map((session,index)=>(\n                          <CTableRow v-for=\"item in tableItems\" key={index} onClick={(e) => get_session_data(session.session_id)}>\n                          <CTableDataCell style={{fontSize:'0.8rem'}}>\n                            <div>{lecture.classroom}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.8rem'}}>\n                            <div>{lecture.type.charAt(0).toUpperCase() + lecture.type.slice(1)}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.6rem'}}>\n                            <div>{session.day}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.5rem'}}>\n                            <span className='d-block'>{moment(lecture.start_time.slice(0, 5), 'HH:mm').format('h:mm A')} </span>\n                            <span className='d-block'>To</span> \n                            <span className='d-block'>{moment(lecture.end_time.slice(0, 5), 'HH:mm').format('h:mm A')}</span>\n                          </CTableDataCell>\n                        </CTableRow>\n                        ))\n                        \n                      ))}\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          ) : ( lecture ? (<CRow>\n            <CCol xs>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <div className='d-flex flex-wrap justify-between'>\n                    <div>\n                      <strong>Subject Attendance History</strong>\n                    </div>\n                    <div>\n                      <div className='d-flex'>\n                        <div>\n                          <input type=\"date\" id=\"validationCustom01\"  required  onChange={(e)=>{search_lecture(e.target.value)}}/>\n                        </div>\n                        <div className='mx-2'>\n                        \n                        </div>\n                      </div>\n                    \n                    \n                    </div>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                  <CTable align=\"middle\" className=\"mb-0 border text-center\" hover responsive>\n                    <CTableHead color=\"light\">\n                      <CTableRow>\n                        <CTableHeaderCell>Class</CTableHeaderCell>\n                        <CTableHeaderCell>Type</CTableHeaderCell>\n                        <CTableHeaderCell>Date</CTableHeaderCell>\n                        <CTableHeaderCell>Time</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      \n                    { lecture.length > 0  ? (\n                      lecture.map((lecture, index) => (\n                        lecture.session.map((session,index)=>(\n                          <CTableRow v-for=\"item in tableItems\" key={index} onClick={(e) => get_session_data(session.session_id)}>\n                          <CTableDataCell style={{fontSize:'0.8rem'}}>\n                            <div>{lecture.classroom}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.8rem'}}>\n                            <div>{lecture.type.charAt(0).toUpperCase() + lecture.type.slice(1)}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.6rem'}}>\n                            <div>{session.day}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.5rem'}}>\n                            <span className='d-block'>{moment(lecture.start_time.slice(0, 5), 'HH:mm').format('h:mm A')} </span>\n                            <span className='d-block'>To</span> \n                            <span className='d-block'>{moment(lecture.end_time.slice(0, 5), 'HH:mm').format('h:mm A')}</span>\n                          </CTableDataCell>\n                        </CTableRow>\n                        )) \n                        \n                        \n                      ))\n                    ) \n                    :(\n                      <CTableRow v-for=\"item in tableItems\">\n                        <CTableDataCell colSpan={4}>\n                          <div className='alert alert-primary w-100 my-2'>\n                            <span className=''>No Lecture Sessions Are There for This Subject</span>\n                          </div>\n                        \n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                    }\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>) : (null)\n          )\n        }\n\n        </>) : (null)\n      }\n       {\n        attendances && <Session_history visible={visible} setVisible={setVisible} attendances={attendances} session_data={session_data}></Session_history>\n       } \n       \n       {\n         !lecture &&<>\n            <div className='d-flex justify-content-center'>\n                <img style={{maxWidth:'70%',height:'auto'}} src='/svgs/lecturehistory.svg'></img>\n            </div>\n        </>\n       }\n        \n    </>\n  )\n}\n\nexport default LectureHistory","import React from 'react'\nimport axios from 'axios'\nimport useAPI from 'src/global_function/useApi'\nimport Swal from 'sweetalert'\nimport { useNavigate } from 'react-router-dom'\n\nfunction urlB64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4)\n  const base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/')\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\nfunction AdditionalFeatures() {\n  const navigation = useNavigate()\n  const [StoredTokens, CallAPI] = useAPI()\n\n  const SaveSubscription = async (subscription,type) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/save_web_push_subscription/',\n      'post',\n      headers,\n      { subscription: subscription,type:type },\n      null,\n    )\n    if (response_obj.error === false) {\n      if(type == 'lectures'){\n        Swal('Good job!', \"You'll be notified about your upcoming lecture sessions\", 'success')\n      }\n      if(type == 'alerts'){\n        Swal('Good job!', \"You'll be notified about the emergency alerts\", 'success')\n      }\n    } else {\n      Swal('Oops!', response_obj.errorMessage.message, 'error')\n    }\n  }\n\n  const subscribe_for_alerts = async (type) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/set_web_push_subscription',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      if (response.data.VAPID_PUBLIC_KEY) {\n        if ('Notification' in window && 'serviceWorker' in navigator && 'PushManager' in window) {\n          navigator.serviceWorker\n            .register('/static/workers/NotificationWorker.js')\n            .then((registration) => {\n              navigator.serviceWorker.getRegistrations().then((registered) => {\n                Notification.requestPermission().then((permission) => {\n                  if (permission === 'granted') {\n                    const applicationServerKey = urlB64ToUint8Array(response.data.VAPID_PUBLIC_KEY)\n                    registration.pushManager\n                      .subscribe({\n                        userVisibleOnly: true,\n                        applicationServerKey,\n                      })\n                      .then((subscription) => {\n                        console.log(subscription)\n                        SaveSubscription(subscription,type)\n                      })\n                      .catch((error) => {\n                        Swal('Oops!', error, 'error')\n                      })\n                  } else {\n                    Swal('Oops!', \"You've denined the notification permission\", 'error')\n                  }\n                })\n              })\n            })\n        } else {\n          Swal('Oops!', \"Your browser doesn't support push notificaitons!!\", 'error')\n        }\n      } else {\n        Swal('Oops!', response_obj.errorMessage.message, 'error')\n      }\n    }\n  }\n\n  return (\n    <div className=\"flex justify-center gap-4 flex-wrap\">\n      <div className=\"flex justify-center mt-4\">\n        <div className=\"max-w-sm bg-slate-200 p-6  border border-gray-200 rounded-lg shadow dark:border-gray-700\">\n          <svg\n            className=\"w-7 h-7 text-gray-500 dark:text-gray-400 mb-3\"\n            aria-hidden=\"true\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n          >\n            <path d=\"M18 5h-.7c.229-.467.349-.98.351-1.5a3.5 3.5 0 0 0-3.5-3.5c-1.717 0-3.215 1.2-4.331 2.481C8.4.842 6.949 0 5.5 0A3.5 3.5 0 0 0 2 3.5c.003.52.123 1.033.351 1.5H2a2 2 0 0 0-2 2v3a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V7a2 2 0 0 0-2-2ZM8.058 5H5.5a1.5 1.5 0 0 1 0-3c.9 0 2 .754 3.092 2.122-.219.337-.392.635-.534.878Zm6.1 0h-3.742c.933-1.368 2.371-3 3.739-3a1.5 1.5 0 0 1 0 3h.003ZM11 13H9v7h2v-7Zm-4 0H2v5a2 2 0 0 0 2 2h3v-7Zm6 0v7h3a2 2 0 0 0 2-2v-5h-5Z\" />\n          </svg>\n          <a href=\"#\">\n            <h5 className=\"mb-2 text-2xl font-semibold tracking-tight text-dark\">\n              Lecture Alerts !!\n            </h5>\n          </a>\n          <p className=\"mb-3 font-normal text-gray-500 dark:text-gray-400\">\n            You&aposll be notified 5 mins before your lecture session !!\n          </p>\n          <a\n            onClick={() => {subscribe_for_alerts('lectures')}}\n            className=\"btn inline-flex font-medium items-center text-blue-600 hover:underline\"\n          >\n            Opt-In\n            <svg\n              className=\"w-3 h-3 ms-2.5 rtl:rotate-[270deg]\"\n              aria-hidden=\"true\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 18 18\"\n            >\n              <path\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M15 11v4.833A1.166 1.166 0 0 1 13.833 17H2.167A1.167 1.167 0 0 1 1 15.833V4.167A1.166 1.166 0 0 1 2.167 3h4.618m4.447-2H17v5.768M9.111 8.889l7.778-7.778\"\n              />\n            </svg>\n          </a>\n        </div>\n      </div>\n      <div className=\"flex justify-center mt-4\">\n        <div className=\"max-w-sm bg-slate-200 p-6  border border-gray-200 rounded-lg shadow dark:border-gray-700\">\n          <svg\n            className=\"w-7 h-7 text-gray-500 dark:text-gray-400 mb-3\"\n            aria-hidden=\"true\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n          >\n            <path d=\"M18 5h-.7c.229-.467.349-.98.351-1.5a3.5 3.5 0 0 0-3.5-3.5c-1.717 0-3.215 1.2-4.331 2.481C8.4.842 6.949 0 5.5 0A3.5 3.5 0 0 0 2 3.5c.003.52.123 1.033.351 1.5H2a2 2 0 0 0-2 2v3a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V7a2 2 0 0 0-2-2ZM8.058 5H5.5a1.5 1.5 0 0 1 0-3c.9 0 2 .754 3.092 2.122-.219.337-.392.635-.534.878Zm6.1 0h-3.742c.933-1.368 2.371-3 3.739-3a1.5 1.5 0 0 1 0 3h.003ZM11 13H9v7h2v-7Zm-4 0H2v5a2 2 0 0 0 2 2h3v-7Zm6 0v7h3a2 2 0 0 0 2-2v-5h-5Z\" />\n          </svg>\n          <a href=\"#\">\n            <h5 className=\"mb-2 text-2xl font-semibold tracking-tight text-dark\">\n              Emergency Alerts!!\n            </h5>\n          </a>\n          <p className=\"mb-3 font-normal text-gray-500 dark:text-gray-400\">          \n            You'll be notified when there's a emergency situation in the college E.G. Fire, Rain, Smoke Detection!!\n          </p>\n          <a\n            onClick={() => {subscribe_for_alerts('alerts')}}\n            className=\"btn inline-flex font-medium items-center text-blue-600 hover:underline\"\n          >\n            Opt-In\n            <svg\n              className=\"w-3 h-3 ms-2.5 rtl:rotate-[270deg]\"\n              aria-hidden=\"true\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 18 18\"\n            >\n              <path\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M15 11v4.833A1.166 1.166 0 0 1 13.833 17H2.167A1.167 1.167 0 0 1 1 15.833V4.167A1.166 1.166 0 0 1 2.167 3h4.618m4.447-2H17v5.768M9.111 8.889l7.778-7.778\"\n              />\n            </svg>\n          </a>\n        </div>\n      </div>\n      <div className=\"flex justify-center mt-4\">\n        <div className=\"max-w-sm bg-slate-200 p-6  border border-gray-200 rounded-lg shadow dark:border-gray-700\">\n          <svg\n            className=\"w-7 h-7 text-gray-500 dark:text-gray-400 mb-3\"\n            aria-hidden=\"true\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n          >\n            <path d=\"M18 5h-.7c.229-.467.349-.98.351-1.5a3.5 3.5 0 0 0-3.5-3.5c-1.717 0-3.215 1.2-4.331 2.481C8.4.842 6.949 0 5.5 0A3.5 3.5 0 0 0 2 3.5c.003.52.123 1.033.351 1.5H2a2 2 0 0 0-2 2v3a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V7a2 2 0 0 0-2-2ZM8.058 5H5.5a1.5 1.5 0 0 1 0-3c.9 0 2 .754 3.092 2.122-.219.337-.392.635-.534.878Zm6.1 0h-3.742c.933-1.368 2.371-3 3.739-3a1.5 1.5 0 0 1 0 3h.003ZM11 13H9v7h2v-7Zm-4 0H2v5a2 2 0 0 0 2 2h3v-7Zm6 0v7h3a2 2 0 0 0 2-2v-5h-5Z\" />\n          </svg>\n          <a href=\"#\">\n            <h5 className=\"mb-2 text-2xl font-semibold tracking-tight text-dark\">Surveys</h5>\n          </a>\n          <p className=\"mb-3 font-normal text-gray-500 dark:text-gray-400\">\n            Effortlessly create,organize surveys with customizable questions, track responses and\n            analyze results to gain actionable insights\n          </p>\n          <a\n            onClick={() => navigation('/teacher/manage-survey')}\n            className=\"btn inline-flex font-medium items-center text-blue-600 hover:underline\"\n          >\n            Manage Surveys\n            <svg\n              className=\"w-3 h-3 ms-2.5 rtl:rotate-[270deg]\"\n              aria-hidden=\"true\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 18 18\"\n            >\n              <path\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                d=\"M15 11v4.833A1.166 1.166 0 0 1 13.833 17H2.167A1.167 1.167 0 0 1 1 15.833V4.167A1.166 1.166 0 0 1 2.167 3h4.618m4.447-2H17v5.768M9.111 8.889l7.778-7.778\"\n              />\n            </svg>\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AdditionalFeatures\n","import React from 'react'\nimport LectureHistory from './views/teacher/LectureHistory'\nimport AdditionalFeatures from './views/teacher/AdditionalFeatures'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\n\n// Base\nconst Timetable = React.lazy(() => import('./views/timetable/Timetable'))\nconst Subject = React.lazy(() => import('./views/subject/Subject'))\nconst Teacherview = React.lazy(() => import('./views/teacher/Teacherview'))\nconst Addstudent = React.lazy(() => import('./views/student_controller/Addstudent'))\nconst AttendanceHistory = React.lazy(() => import('./views/AttendanceHistory/AttendanceHistory'))\nconst StudentDashboard = React.lazy(() => import('./views/student_controller/StudentDashboard'))\n// Submit Survey\nconst Surveys = React.lazy(() => import('./views/student_controller/surveys/SubmitSurvey'))\nconst Sessionmanage = React.lazy(() => import('./views/teacher/Sessionmanage'))\nconst Logout = React.lazy(() => import('./views/pages/logout/Logout'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\n\n// Teacher\nconst Teacher = React.lazy(() => import('./views/teacher/Teacher'))\nconst Breadcrumbnav = React.lazy(() => import('./views/breadcrum/Breadcrumbnav'))\nconst TeacherSidebar = React.lazy(() => import('./views/teacher/TeacherSidebar'))\nconst ManageSurveys = React.lazy(() => import('./views/teacher/surveys/ManageSurveys'))\nconst UploadMaterials = React.lazy(() => import('./views/teacher/UploadMaterials'))\nconst ViewMaterials = React.lazy(() => import('./views/student_controller/ViewMaterials'))\nconst UploadResult = React.lazy(() => import('./views/teacher/results/UploadResult'))\n\n// Superadmin\nconst SuperAdminDashboard = React.lazy(() => import('./views/superadmin/SuperAdminDashboard'))\nconst Events = React.lazy(() => import('./views/superadmin/Events'))\n\n// Student\nconst Results = React.lazy(() => import('./views/student_controller/exam_results/Results'))\nconst StudentAdditionalFeatures = React.lazy(() => import('./views/student_controller/additional_features/AdditionalFeatures'))\n\n// For All Users\nconst OngoingEvents = React.lazy(() => import('./views/alllUsers/OngoingEvents'))\n\n// Buttons\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n\n  { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n  { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n\n  { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n\n  { path: '/forms/validation', name: 'Validation', element: Validation },\n  { path: '/manage-teachers', name: 'Teacher', element: Teacher },\n  { path: '/breadcrumb', name: 'Breadcrumbnav', element: Breadcrumbnav },\n  { path: '/TeacherSidebar', name: 'TeacherSidebar', element: TeacherSidebar },\n  { path: '/logout', name: 'Logout', element: Logout },\n  { path: '/timetable', name: 'Timetable', element: Timetable },\n  { path: '/subject', name: 'Subject', element: Subject },\n  { path: '/addstudent', name: 'AddStudent', element: Addstudent },\n  { path: '/attendance-history', name: 'attendance-history', element: AttendanceHistory },\n  { path: '/teacher/dashboard', name: 'Teacherview', element: Teacherview },\n  { path: '/studentdashboard', name: 'StudentDashboard', element: StudentDashboard },\n  { path: '/view-materials', name: 'ViewMaterials', element: ViewMaterials },\n  { path: '/surveys', name: 'Surveys', element: Surveys },\n  { path: '/teacher/session', name: 'Sessionmanage', element: Sessionmanage },\n  { path: '/teacher/manage-survey', name: 'ManageSurveys', element: ManageSurveys },\n  { path: '/teacher/upload-materials', name: 'UploadMaterials', element: UploadMaterials },\n\n  { path: '/teacher/lectures/history', name: 'LectureHistory', element: LectureHistory },\n  { path: '/upload-results', name: 'UploadResult', element: UploadResult },\n  { path: '/superadmin', name: 'SuperAdminDashboard', element: SuperAdminDashboard },\n  { path: '/superadmin/events', name: 'Events', element: Events },\n  { path: '/ongoing-events', name: 'ongoing-events', element: OngoingEvents },\n  { path: '/exam-results', name: 'exam-results', element: Results },\n  {\n    path: '/student/additional-features',\n    name: 'StudentAdditionalFeatures',\n    element: StudentAdditionalFeatures,\n  },\n  {\n    path: '/teacher/lectures/additional-features',\n    name: 'LectureHistory',\n    element: AdditionalFeatures,\n  },\n]\n\nexport default routes\n","import React, { Suspense, useEffect, useState } from 'react'\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport axios from 'axios'\nimport {base_url} from 'src/base_url'\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\n\nimport expireToken from 'src/global_function/unauthorizedToken'\nimport { APIMiddleware } from 'src/global_function/GlobalFunctions'\n\n// routes config\nimport routes from '../routes'\nimport { cilFace } from '@coreui/icons'\n\nconst AppContent = () => {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken, refreshToken, batches, accessTokenActive, profileDetails } = state\n  const navigate = useNavigate();\n\n  const loadBatches = async () => {\n    const header = {\n      \"Content-Type\": \"application/json\",\n      'ngrok-skip-browser-warning': true\n    }\n    const axiosInstance = axios.create()\n    let endpoint = `/manage/get_batches`; let method = 'get'; let headers = header;\n    let response_obj = await APIMiddleware(axiosInstance, endpoint, method, headers)\n    if (response_obj.error == false) {\n      let response = response_obj.response\n      ctxDispatch({ type: 'GET_BATCHES', payload: response.data.data });\n      response.data.data.map((item) => {\n        if (item.active) {\n          ctxDispatch({ type: 'CURRENT_BATCH_SLUG', payload: item });\n        }\n      })\n    } else {\n      \n    }\n  }\n\n  useEffect(() => {\n    if (accessToken) {\n      if (profileDetails.obj.profile.role === \"admin\") {\n        // loadBatches()\n      }\n    }\n  }, []);\n  return (\n    <>\n    \n      <CContainer lg>\n        <Suspense fallback={<CSpinner color=\"primary\" />}>\n          <Routes>\n            {routes.map((route, idx) => {\n              return (\n                route.element && (\n                  <Route\n                    key={idx}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    element={<route.element />}\n                  />\n                )\n              )\n            })}\n            \n            {\n              (() => {\n                if (profileDetails.obj.profile.role === \"superadmin\") {\n                  return <Route path=\"/\" element={<Navigate to=\"superadmin\" replace />} />;\n                }\n                else if (profileDetails.obj.profile.role === \"admin\") {\n                  return <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />;\n                } else if (profileDetails.obj.profile.role === \"teacher\") {\n                  return <Route path=\"/\" element={<Navigate to=\"teacher/dashboard\" replace />} />;\n                }\n                else if (profileDetails.obj.profile.role === \"student\") {\n  \n                  return <Route path=\"/\" element={<Navigate to=\"studentdashboard\" replace />} />;\n                }\n              })()\n            }\n  \n  \n  \n          </Routes>\n        </Suspense>\n      </CContainer>\n    </>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useEffect, useContext, useState } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()\n  const { state, dispatch: ctxDispatch } = useContext(Store)\n  const { profileDetails } = state\n  const [adminEmail, setadminEmail] = useState('')\n\n  useEffect(() => {\n    if (profileDetails) {\n      setadminEmail(profileDetails.obj.profile.email)\n    }\n  }, [profileDetails])\n  const logoutAdmin = () => {\n    localStorage.clear()\n    navigate('/login')\n  }\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n        <div className=\"text-medium-emphasis\">{adminEmail}</div>\n      </CDropdownToggle>\n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect, useContext , useState} from 'react'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMenu } from '@coreui/icons'\nimport { Store } from 'src/views/forms/validation/store'\n\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { profileDetails } = state\n  const [adminEmail, setadminEmail] = useState(\"\");\n  \n  useEffect(() => {\n    if(profileDetails){\n      setadminEmail(profileDetails.email)\n    }\n  }, [profileDetails]);\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-2\">\n      <CContainer fluid className='d-flex flex-wrap'>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>      \n      \n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React,{useEffect, useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\nimport { CSidebar, CSidebarBrand, CSidebarNav } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\nimport smartrollicon from '../smartroll_logo.png'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\n\nconst AppSidebar = () => {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken, refreshToken, profileDetails } = state  \n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n  const [notifications,setNotifications] = useState(null)\n  const [updateSidenav,setUpdateSideNav] = useState(false)\n  \n  useEffect(() => {\n    if(state){             \n      setNotifications(state.notifications);   \n    }\n  }, [state]); \n\n  useEffect(() => {\n    if(notifications){\n      console.log('here');        \n        if(state.notifications?.events?.length > 0){\n          navigation.teacher_role[4].name = \"Ongoing Events 🔥\"\n          navigation.student_role[2].name = \"Ongoing Events 🔥\"\n          navigation.admin_role[6].name = \"Ongoing Events 🔥\"\n          setUpdateSideNav(!updateSidenav)\n        }\n        if(state.notifications?.results?.length > 0){          \n          navigation.student_role[3].name = \"Exam Results 🔥\"\n          setUpdateSideNav(!updateSidenav)\n        }\n    }\n  }, [notifications])\n  \n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      palcement=\"end\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <img className=\"p-3\" src={smartrollicon}></img>\n      <CSidebarNav>\n        <SimpleBar>\n        {profileDetails.obj.profile.role === \"superadmin\" && (\n            <AppSidebarNav\n              items={navigation.superadmin_role}\n            />\n          )}\n          {profileDetails.obj.profile.role === \"admin\" && (\n            <AppSidebarNav\n              items={navigation.admin_role}\n            />\n          )}\n          {profileDetails.obj.profile.role === \"teacher\" && (\n            <AppSidebarNav\n              items={navigation.teacher_role}\n            />\n          )}\n          {profileDetails.obj.profile.role === \"student\" && (\n            <AppSidebarNav\n              items={navigation.student_role}\n            />\n          )}\n        </SimpleBar>\n      </CSidebarNav>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React, { useEffect, useState } from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport { useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { Store } from 'src/views/forms/validation/store';\nimport axios from 'axios';\nimport {base_url} from 'src/base_url';\nimport { jwtDecode } from \"jwt-decode\";\nimport expireToken from 'src/global_function/unauthorizedToken';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst DefaultLayout = () => {  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken , refreshToken, loader_state} = state\n  const [serverAvaibility,setServerAvaibility] = useState(false)\n  const [_404,set404] = useState(true)\n  const [accessTokenValid,setAccessTokenValid] = useState(false)\n  const [progress,setProgress] = useState(0);  \n  const navigate = useNavigate();  \n  if (typeof window !== 'undefined') {\n    window.setProgress = setProgress;\n  }\n\n  const expireToken = async (refreshToken)=>{\n    const header = {\n        'ngrok-skip-browser-warning':true\n      }\n    axios.post(`${base_url}/auth/api/token/refresh/`,{\n        \"refresh\":refreshToken\n    },{headers:header})\n    .then((response)=>{\n        ctxDispatch({ type: 'ACCESS_TOKEN', payload: response.data.access});\n        ctxDispatch({ type: 'REFRESH_TOKEN', payload: response.data.refresh });\n        localStorage.setItem('accessToken',response.data.access)\n        localStorage.setItem('refreshToken',response.data.refresh)        \n        const decoded = jwtDecode(response.data.access); \n        ctxDispatch({ type: 'SET_PROFILE', payload: decoded});\n        setAccessTokenValid(true)\n    })\n    .catch((error)=>{        \n        localStorage.removeItem('accessToken')\n        localStorage.removeItem('refreshToken')\n        navigate('/login')\n    })\n}\n\nconst checkAccessTokenAuthenticity = async (accessToken) => {    \n  const headers = {\n    \"Content-Type\":\"application/json\",      \n    'ngrok-skip-browser-warning':true,\n    'Authorization': `Bearer ${accessToken}`\n  }\n\n  axios.get(`${base_url}/check_token_authenticity/`,{headers:headers})\n  .then((response)=>{\n    if(response.data.isAuthenticated === true){\n      const decoded = jwtDecode(accessToken); \n      ctxDispatch({ type: 'SET_PROFILE', payload: decoded});\n      ctxDispatch({ type: 'NOTIFICATIONS', payload: response.data.data.Notifications});\n      setAccessTokenValid(true)\n    }    \n  })\n  .catch((error)=>{        \n    if(refreshToken){\n      expireToken(refreshToken)\n    }else{\n      navigate('/login')\n    }\n  })    \n}\nconst checkServerAvaibility = async ()=> {\n  \n  const headers = {\n       \"Content-Type\":\"application/json\",      \n       'ngrok-skip-browser-warning':true,\n       \n  }\n  axios.get(`${base_url}/check_server_avaibility/`,{headers:headers})\n  .then((response)=>{\n    setServerAvaibility(true)\n    if(accessToken){\n      checkAccessTokenAuthenticity(accessToken)\n    }else{\n      navigate('/login')\n    }\n  })\n  .catch((error)=>{    \n      navigate(\"/404\")\n  })    \n}\n\n  const decodeToken= () => {\n    const decoded = jwtDecode(accessToken);              \n    // if (typeof window !== 'undefined') {      \n        window.user_profile = decoded.profile;\n    // }\n    ctxDispatch({ type: 'SET_PROFILE', payload: decoded});    \n  }\n  \n  useEffect(() => {    \n    checkServerAvaibility()   \n},[])  \n  if(accessToken && accessTokenValid){\n    return (    \n      <div>\n  {/* <LoadingBar color={'#1f6feb'} progress={progress}\n      onLoaderFinished={() => setProgress(0)} /> */}      \n      <div  className={!loader_state ? 'd-none' : ''} style={{backdropFilter: 'blur(5px)',height: '100vh', width: '100%', position: 'absolute',zIndex: 9999,top: 0, justifyContent: 'center', display: 'flex', alignItems: 'center', left: 0 }}>\n        <img className=\"animated-container\" style={{height:'10vh'}} src='/static//svgs/loader.svg'></img>\n      </div>\n        <AppSidebar />\n        <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n          <AppHeader />\n          <div className=\"body flex-grow-1 px-3\">\n            <AppContent />\n          </div>\n      \n        </div>\n      </div>    \n  )\n  }else{\n    return null\n  }\n}\n\nexport default DefaultLayout\n","import React from 'react'\nimport { useState, useContext, useEffect } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\nimport axios from 'axios'\nimport { APIMiddleware } from 'src/global_function/GlobalFunctions'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableDataCell,\n  CFormSelect,\n} from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport { showAlert } from 'src/global_function/GlobalFunctions'\nimport useAPI from 'src/global_function/useApi'\n\nconst Subject = () => {\n  const [subjects, set_Subjects] = useState(null)\n  const [semester, set_semester] = useState(null)\n  const [batches, setBatches] = useState([])\n  //costom hook to call the API\n  const [term, set_term] = useState(null)\n  const [selectedBatches, setSelectedBatches] = useState([])\n\n  const handleSelectChange = (event) => {\n    // Get selected options as an array\n    const selectedOptions = Array.from(event.target.selectedOptions, (option) => option.value)\n    setSelectedBatches(selectedOptions)\n  }\n  useEffect(() => {\n    console.log(selectedBatches)\n  }, [selectedBatches])\n\n  const [StoredTokens, CallAPI] = useAPI()\n  const [current_semester, set_current_semester] = useState('')\n  const header = {\n    'Content-Type': 'application/json',\n    'ngrok-skip-browser-warning': true,\n  }\n  const axiosInstance = axios.create()\n\n  const load_subject = async () => {\n    let endpoint = `/manage/get_subject`\n    let method = 'get'\n    let headers = header\n    let response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      endpoint,\n      method,\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error == false) {\n      let response = response_obj.response\n      set_Subjects(response.data.data)\n    } else {\n    }\n  }\n\n  const load_batches = async (semester_slug) => {\n    let endpoint = `/manage/get_batches_from_semester/${semester_slug}`\n    let method = 'get'\n    let headers = header\n    let response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      endpoint,\n      method,\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error) {\n      alert(res.errorMessage.message)\n    } else {\n      let batches = response_obj.response.data.data\n      setBatches(batches)\n    }\n  }\n\n  useEffect(() => {\n    if (current_semester !== '') {\n      load_batches(current_semester)\n    } else {\n      setBatches([])\n    }\n  }, [current_semester])\n\n  const load_semester = async (current_term) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obje = await CallAPI(\n      StoredTokens,\n      axios,\n      '/manage/get_semesters',\n      'get',\n      headers,\n      null,\n      { term_slug: current_term },\n    )\n    if (response_obje.error == false) {\n      const response = response_obje.response\n      set_semester(response.data.data)\n    } else {\n    }\n  }\n\n  const load_term = async () => {\n    const header = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create\n    let endpoint = `/manage/get_terms`\n    let method = 'get'\n    let headers = header\n    let response_obj = await CallAPI(StoredTokens, axiosInstance, endpoint, method, headers)\n    if (response_obj.error == false) {\n      let response = response_obj.response\n      set_term(response.data.data)\n    } else {\n      alert(response_obj.errorMessage.message)\n    }\n  }\n\n  const [validated, setValidated] = useState(false)\n  const [subject_name, set_subject_name] = useState('')\n  const [subject_code, set_subject_code] = useState('')\n  const [subject_credit, set_subject_credit] = useState('')\n  const add_batch = async (body) => {\n    const header = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    let endpoint = `/manage/add_subject/`\n    let method = 'post'\n    let headers = header\n    let response_obj = await APIMiddleware(axiosInstance, endpoint, method, headers, body, null)\n    if (response_obj.error == false) {\n      let response = response_obj.response\n      set_Subjects((prevArray) => [...prevArray, response.data.data])\n      showAlert('success', 'Subject Added successfully...!')\n    } else {\n      console.log(response_obj)\n      alert(response_obj.error.response.data.message)\n    }\n  }\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n      alert('Please Enter Valid Subject Information')\n      return\n    }\n    if (selectedBatches.length <= 0) {\n      alert('Please select atleast one batch to add!!')\n      return\n    }\n    setValidated(true)\n    const body = {\n      code: subject_code,\n      subject_name: subject_name,\n      credit: subject_credit,\n      semester_slug: current_semester,\n      batches: selectedBatches,\n    }\n    event.preventDefault()\n    add_batch(body)\n  }\n\n  useEffect(() => {\n    load_term()\n    load_subject()\n  }, [])\n\n  return (\n    <>\n      <>\n        <CRow>\n          <CCol>\n            {term && (\n              <>\n                <CCard className={`mb-3`}>\n                  <CCardHeader>select term</CCardHeader>\n                  <CCardBody>\n                    <CFormSelect\n                      aria-label=\"Default select example\"\n                      onChange={(e) => {\n                        // console.log(e.target.value)\n                        load_semester(e.target.value)\n                      }}\n                    >\n                      <option value=\"\">Select Term</option>\n                      {term.map((item, index) => (\n                        <option key={index} value={item.slug}>\n                          Term : {item.start_year} - {item.end_year}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </CCardBody>\n                </CCard>\n              </>\n            )}\n            {semester && (\n              <>\n                <CCard className={`mb-3`}>\n                  <CCardHeader>Semester</CCardHeader>\n                  <CCardBody>\n                    <CFormSelect\n                      aria-label=\"Default select example\"\n                      onChange={(e) => {\n                        set_current_semester(e.target.value)\n                      }}\n                    >\n                      <option value={''}>Select Semester</option>\n                      {semester.map((item, index) => (\n                        <option key={index} value={item.slug}>\n                          Semester - {item.no}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </CCardBody>\n                </CCard>\n              </>\n            )}\n            {batches.length > 0 && (\n              <>\n                <CCard className={`mb-3`}>\n                  <CCardHeader>Batches</CCardHeader>\n                  <CCardBody>\n                    <CFormSelect\n                      aria-label=\"Default select example\"\n                      multiple={true}\n                      value={selectedBatches}\n                      onChange={handleSelectChange}\n                      required\n                    >\n                      {batches.map((item, index) => (\n                        <option key={index} value={item.slug}>\n                          {item.batch_name}\n                        </option>\n                      ))}\n                    </CFormSelect>\n                  </CCardBody>\n                </CCard>\n              </>\n            )}\n          </CCol>\n        </CRow>\n        {current_semester ? (\n          <CRow>\n            <CCol xs={12}>\n              <CCard className=\"mb-3\">\n                <CCardHeader>\n                  <strong>Subjects</strong>\n                </CCardHeader>\n                <CCardBody>\n                  <CForm\n                    className=\"row g-3 needs-validation\"\n                    noValidate\n                    validated={validated}\n                    onSubmit={handleSubmit}\n                  >\n                    <CCol md={12}>\n                      <CFormLabel htmlFor=\"validationCustom01\">Subject Name</CFormLabel>\n                      <CFormInput\n                        type=\"text\"\n                        id=\"validationCustom01\"\n                        onChange={(e) => set_subject_name(e.target.value)}\n                        required\n                      />\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                    </CCol>\n\n                    <CCol md={6}>\n                      <CFormLabel htmlFor=\"validationCustom01\">Subject Code</CFormLabel>\n                      <CFormInput\n                        type=\"number\"\n                        id=\"validationCustom01\"\n                        onChange={(e) => set_subject_code(e.target.value)}\n                        required\n                      />\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                    </CCol>\n                    <CCol md={6}>\n                      <CFormLabel htmlFor=\"validationCustom01\">Subject Credit</CFormLabel>\n                      <CFormInput\n                        type=\"number\"\n                        id=\"validationCustom01\"\n                        onChange={(e) => set_subject_credit(e.target.value)}\n                        required\n                      />\n                      <CFormFeedback valid>Looks good!</CFormFeedback>\n                    </CCol>\n                    <CCol xs={12}>\n                      <button className=\"btn btn-outline-dark form-control\" type=\"submit\">\n                        Submit form\n                      </button>\n                    </CCol>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n        ) : null}\n\n        <CRow>\n          {subjects ? (\n            <CCol xs>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <strong>Subject History</strong>\n                </CCardHeader>\n                <CCardBody>\n                  <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                    <CTableHead color=\"light\">\n                      <CTableRow>\n                        <CTableHeaderCell>Subject Name</CTableHeaderCell>\n                        <CTableHeaderCell>Subject Code</CTableHeaderCell>\n                        <CTableHeaderCell>Semester</CTableHeaderCell>\n                        <CTableHeaderCell>Included Batches</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      {subjects.map((item, index) => (\n                        <CTableRow v-for=\"item in tableItems\" key={index}>\n                          <CTableDataCell>\n                            <div>\n                              {item.subject_name.charAt(0).toUpperCase() +\n                                item.subject_name.slice(1)}\n                            </div>\n                          </CTableDataCell>\n\n                          <CTableDataCell>\n                            <div>{item.code}</div>\n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{item.semester.no}</div>\n                          </CTableDataCell>\n                          <CTableDataCell>\n                            {item.included_batches.length > 0 && (\n                              <CTableDataCell>\n                                <div>\n                                  {item.included_batches\n                                    .map((batch, index) => (\n                                      batch.batch_name\n                                    ))\n                                    .join(', ')}\n                                </div>\n                              </CTableDataCell>\n                            )}\n                          </CTableDataCell>\n                        </CTableRow>\n                      ))}\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          ) : null}\n        </CRow>\n      </>\n    </>\n  )\n}\n\nexport default Subject\n","import React, { useState, useEffect, useRef } from 'react'\nimport { DownloadTableExcel } from 'react-export-table-to-excel'\nimport moment from 'moment'\nimport {\n  COffcanvas,\n  COffcanvasBody,\n  CAlert,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CRow,\n  CCol,\n  CFormCheck,\n} from '@coreui/react'\nimport axios from 'axios'\nimport useAPI from 'src/global_function/useApi'\nconst Session_history = ({ visible, setVisible, attendances, session_data }) => {\n  const tableRef = useRef(null)\n  const [isRefReady, setIsRefReady] = useState(false)\n  const [StoredTokens, CallAPI] = useAPI()\n  useEffect(() => {\n    if (tableRef.current) {\n      setIsRefReady(true)\n    }\n  }, [tableRef.current])\n  const mark_student_attendance = async (event, attendance_Slug) => {\n    event.preventDefault()\n    try {\n      /* eslint-disable no-restricted-globals */\n\n      if (!confirm('Are you sure you want to mark the attendance manually?')) return\n      // console.log(attendance_Slug)\n      event.target.checked = 'checked'\n      event.target.disabled = true\n      const axiosInstance = axios.create()\n      const headers = {\n        'Content-Type': 'application/json',\n        'ngrok-skip-browser-warning': true,\n      }\n      const body = {\n        attendance_slug: attendance_Slug,\n      }\n      const response_obj = await CallAPI(\n        StoredTokens,\n        axiosInstance,\n        `/manage/session/mark_attendance_for_absent_student/`,\n        'post',\n        headers,\n        body,\n        null,\n      )\n      if (response_obj.error === false) {\n        const response = response_obj.response\n        const div_element = event.target.parentElement\n        const children = div_element.children\n        children[1].innerText = 'P'\n        div_element.removeChild(children[0])\n        var svgElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n        svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg')\n        svgElement.setAttribute('width', '16')\n        svgElement.setAttribute('height', '16')\n        svgElement.setAttribute('fill', 'currentColor')\n        svgElement.setAttribute('class', 'mx-auto bi bi-patch-check')\n        svgElement.setAttribute('viewBox', '0 0 16 16')\n\n        var path1 = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n        path1.setAttribute('fill-rule', 'evenodd')\n        path1.setAttribute(\n          'd',\n          'M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0',\n        )\n\n        var path2 = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n        path2.setAttribute(\n          'd',\n          'm10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911z',\n        )\n\n        svgElement.appendChild(path1)\n        svgElement.appendChild(path2)\n        div_element.prepend(svgElement)\n      } else {\n        alert(response_obj.errorMessage.message)\n      }\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n  return (\n    <>\n      <COffcanvas\n        className=\"card w-100\"\n        placement=\"end\"\n        visible={visible}\n        onHide={() => setVisible(false)}\n        data-coreui-backdrop=\"static\"\n      >\n        <CAlert\n          color=\"success\"\n          visible={true}\n          className=\"justify-content-between align-items-center d-flex\"\n        >\n          <svg\n            onClick={() => setVisible(false)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            className=\"bi bi-x-lg\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z\" />\n          </svg>\n        </CAlert>\n        <COffcanvasBody>\n          <div className=\"w-100\">\n            {tableRef.current ? (\n              <DownloadTableExcel\n                filename={`${session_data.lecture.subject.subject_name} - ${new Date(\n                  session_data.day,\n                ).toLocaleString()}`}\n                sheet=\"attendance\"\n                currentTableRef={tableRef.current}\n              >\n                <button className=\"my-2 w-100 btn btn btn-outline-primary\"> Export excel </button>\n              </DownloadTableExcel>\n            ) : null}\n          </div>\n          <CRow className=\"w-100 flex-col\">\n            <CCol className=\"col-12\">\n              <div className=\"table-responsive\">\n                <table\n                  align=\"middle\"\n                  className=\"table align-middle table-hover text-center mb-0 border hover responsive\"\n                  ref={tableRef}\n                >\n                  <CTableHead color=\"light\">\n                    <CTableRow aria-colspan={5}>\n                      <CTableHeaderCell colSpan={5}>L.D COLLEGE OF ENGINEERING</CTableHeaderCell>\n                    </CTableRow>\n                    <CTableRow aria-colspan={5}>\n                      <CTableHeaderCell colSpan={5}>\n                        Subject: {session_data.lecture.subject.subject_name} | DATE:{' '}\n                        {session_data.day} | TIME:{' '}\n                        {moment(session_data.lecture.start_time.slice(0, 5), 'HH:mm').format(\n                          'h:mm A',\n                        )}{' '}\n                        to{' '}\n                        {moment(session_data.lecture.end_time.slice(0, 5), 'HH:mm').format(\n                          'h:mm A',\n                        )}\n                      </CTableHeaderCell>\n                    </CTableRow>\n                    <CTableRow>\n                      {/* <CTableHeaderCell>SR. NO</CTableHeaderCell> */}\n                      <CTableHeaderCell>Enrollment No</CTableHeaderCell>\n                      <CTableHeaderCell>Student Name</CTableHeaderCell>\n                      {/* <CTableHeaderCell>IP Addr</CTableHeaderCell> */}\n                      <CTableHeaderCell>Batch</CTableHeaderCell>\n                      <CTableHeaderCell>Status</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {attendances &&\n                      attendances.map((item, index) => (\n                        <CTableRow\n                          v-for={`alert alert-primary item in tableItems`}\n                          style={item.manual ? { border: '2px solid darkorange' } : null}\n                          key={index}\n                        >\n                          {/* <CTableDataCell>\n                                        <div>{item.student.sr_no}</div>   \n                                </CTableDataCell> */}\n                          <CTableDataCell>\n                            <div>{item.student.enrollment ? item.student.enrollment : '-'}</div>\n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{item.student.profile.name ? item.student.profile.name : '-'}</div>\n                          </CTableDataCell>\n                          {/* <CTableDataCell>\n                            <div>{item.marking_ip ? item.marking_ip : '-'}</div>\n                          </CTableDataCell> */}\n                          <CTableDataCell>\n                            <div>\n                              {item.batches\n                                ? item.batches.map((batch, index) => (\n                                    <span key={index}>{batch.batch_name.toUpperCase()}</span>\n                                  ))\n                                : '-'}\n                            </div>\n                          </CTableDataCell>\n                          {item.is_present ? (\n                            <CTableDataCell>\n                              <div className=\"text-success d-flex justify-content-center align-items-center\">\n                                <svg\n                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                  width=\"16\"\n                                  height=\"16\"\n                                  fill=\"currentColor\"\n                                  className=\"mx-auto bi bi-patch-check\"\n                                  viewBox=\"0 0 16 16\"\n                                >\n                                  <path\n                                    fillRule=\"evenodd\"\n                                    d=\"M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0\"\n                                  />\n                                  <path d=\"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911z\" />\n                                </svg>\n                                <p style={{ visibility: 'hidden' }}>P</p>\n                              </div>\n                            </CTableDataCell>\n                          ) : (\n                            <CTableDataCell>\n                              <div className=\"text-success d-flex justify-content-center align-items-center\">\n                                {/* <CFormCheck onClick={(e) => { mark_student_attendanc(e, item.slug) }}>Mark Attendance</CFormCheck> */}\n                                <input\n                                  type=\"checkbox\"\n                                  onClick={(e) => {\n                                    mark_student_attendance(e, item.slug)\n                                  }}\n                                ></input>\n                                <p style={{ visibility: 'hidden' }}>A</p>\n                              </div>\n                            </CTableDataCell>\n                          )}\n                        </CTableRow>\n                      ))}\n                  </CTableBody>\n                </table>\n              </div>\n            </CCol>\n          </CRow>\n        </COffcanvasBody>\n      </COffcanvas>\n    </>\n  )\n}\n\nexport default Session_history\n"],"names":["superadmin_role","component","CNavTitle","name","CNavItem","to","icon","_jsx","CIcon","cilLibraryBuilding","customClassName","cilCalendar","cilAccountLogout","admin_role","cilNotes","cilSchool","cilPeople","teacher_role","cilClock","cilCloudUpload","student_role","base_url","websocket","AppSidebarNav","_ref","items","location","useLocation","navLink","badge","_jsxs","_Fragment","children","CBadge","color","className","text","navItem","item","index","rest","Component","_createElement","NavLink","key","navGroup","_item$items","idx","String","toggler","visible","pathname","startsWith","map","React","APIMiddleware","async","reqInstance","endpoint","method","headers","body","arguments","length","undefined","params","access","localStorage","getItem","refresh","response_obj","concat","window","setProgress","get","error","response","status","result","expireToken","setItem","post","axios","refreshToken","then","data","catch","showAlert","title","Swal","button","makeRequest","Error","useAPI","navigate","useNavigate","state","dispatch","ctxDispatch","useContext","Store","accessToken","loader_state","StoredTokens","CallAPI","tokens","type","payload","errorMessage","token_data","action","removeItem","LectureHistory","subjects","SetSubjects","useState","lecture","setLecture","FilterLecture","setFilterLecture","attendances","setAttendances","setVisible","session_data","setSessionData","search_lecture","day","filteredData","filter","session","some","get_session_data","axiosInstance","create","session_id","marked_attendances","alert","message","useEffect","load_subjects_of_teacher","required","onChange","e","subject_slug","load_lectures","target","value","slug","subject_name","CRow","CCol","xs","CCard","CCardHeader","id","CCardBody","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","onClick","CTableDataCell","style","fontSize","classroom","charAt","toUpperCase","slice","moment","start_time","format","end_time","colSpan","Session_history","maxWidth","height","src","navigation","subscribe_for_alerts","VAPID_PUBLIC_KEY","navigator","serviceWorker","register","registration","getRegistrations","registered","Notification","requestPermission","permission","applicationServerKey","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlB64ToUint8Array","pushManager","subscribe","userVisibleOnly","subscription","console","log","SaveSubscription","xmlns","fill","viewBox","d","href","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Dashboard","Timetable","Subject","Teacherview","Addstudent","AttendanceHistory","StudentDashboard","Surveys","Sessionmanage","Logout","FormControl","InputGroup","Validation","Teacher","Breadcrumbnav","TeacherSidebar","ManageSurveys","UploadMaterials","ViewMaterials","UploadResult","SuperAdminDashboard","Events","Results","StudentAdditionalFeatures","path","exact","element","AdditionalFeatures","AppContent","batches","accessTokenActive","profileDetails","obj","profile","role","CContainer","lg","Suspense","fallback","CSpinner","Routes","routes","route","Route","Navigate","AppHeaderDropdown","adminEmail","setadminEmail","email","CDropdown","variant","CDropdownToggle","placement","caret","AppHeader","useDispatch","sidebarShow","useSelector","CHeader","position","fluid","CHeaderToggler","cilMenu","size","CHeaderNav","AppSidebar","unfoldable","sidebarUnfoldable","notifications","setNotifications","updateSidenav","setUpdateSideNav","_state$notifications","_state$notifications$","_state$notifications2","_state$notifications3","events","results","CSidebar","palcement","onVisibleChange","smartrollicon","CSidebarNav","SimpleBar","DefaultLayout","serverAvaibility","setServerAvaibility","_404","set404","accessTokenValid","setAccessTokenValid","progress","checkAccessTokenAuthenticity","isAuthenticated","decoded","jwtDecode","Notifications","checkServerAvaibility","backdropFilter","width","zIndex","top","justifyContent","display","alignItems","left","set_Subjects","semester","set_semester","setBatches","term","set_term","selectedBatches","setSelectedBatches","current_semester","set_current_semester","header","semester_slug","res","load_batches","validated","setValidated","set_subject_name","subject_code","set_subject_code","subject_credit","set_subject_credit","load_term","load_subject","CFormSelect","response_obje","term_slug","current_term","load_semester","start_year","end_year","no","multiple","event","selectedOptions","Array","from","option","batch_name","CForm","noValidate","onSubmit","currentTarget","checkValidity","preventDefault","stopPropagation","code","credit","prevArray","add_batch","md","CFormLabel","htmlFor","CFormInput","CFormFeedback","valid","included_batches","batch","join","tableRef","useRef","isRefReady","setIsRefReady","current","COffcanvas","onHide","CAlert","COffcanvasBody","DownloadTableExcel","filename","subject","Date","toLocaleString","sheet","currentTableRef","ref","manual","border","student","enrollment","is_present","fillRule","visibility","attendance_Slug","confirm","checked","disabled","attendance_slug","div_element","parentElement","innerText","removeChild","svgElement","document","createElementNS","setAttribute","path1","path2","appendChild","prepend","mark_student_attendance"],"sourceRoot":""}