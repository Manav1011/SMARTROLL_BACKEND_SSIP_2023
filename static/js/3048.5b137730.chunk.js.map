{"version":3,"file":"static/js/3048.5b137730.chunk.js","mappings":"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","sources":["_nav.js","base_url.js","components/AppSidebarNav.js","views/teacher/Session_history.js","views/teacher/LectureHistory.js","routes.js","components/AppContent.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebar.js","components/DocsCallout.js","components/DocsLink.js","components/DocsExample.js","global_function/GlobalFunctions.js","global_function/useApi.js","layout/DefaultLayout.js","views/subject/Subject.js"],"sourcesContent":["import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilDrop,\n  cilPencil,\n  cilAccountLogout,\n  cilCalendar,\n  cilNotes,\n  cilPeople,\n  cilLibraryBuilding,\n  cilSchool\n\n  //cilSpeedometer,\n} from '@coreui/icons'\nimport { CNavItem, CNavTitle } from '@coreui/react'\nimport { useContext } from 'react'\n\n\n\n\n\n\nconst _nav = {\n  admin_role:[\n    {\n      component: CNavTitle,\n      name: 'ADMNISTRATION',\n    },\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Subject',\n      to: '/subject',    \n      icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Teachers',\n      to: '/manage-teachers',\n      icon: <CIcon icon={cilSchool} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Add Student',\n      to: '/addstudent',\n      icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Timetable',\n      to: '/timetable',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },  \n      \n  ],\n  teacher_role:[\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/teacher/dashboard',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'LectureHistory',\n      to: '/teacher/lectures/history',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n  ],\n  student_role:[\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/studentdashboard',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    }, \n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n  ]\n}\n\nexport default _nav\n","export const base_url= \"\";\nexport const websocket = \"\"\n\n// const token = localStorage.getItem('accessToken')\n// const header = {\n//     \"Content-Type\":\"application/json\",\n//     \"Authorization\": `Bearer ${token}`,\n//     'ngrok-skip-browser-warning':true\n//   }\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\nimport {\n    COffcanvas,  \n    COffcanvasBody,  \n    CAlert,\n    CTable,\n    CTableHead,\n    CTableRow,\n    CTableHeaderCell,\n    CTableBody,\n    CTableDataCell,\n    CRow,\n    CCol\n  } from '@coreui/react'\nconst Session_history = ({visible,setVisible,attendances,session_data}) => {\n  const tableRef = useRef(null);\n  const [isRefReady, setIsRefReady] = useState(false);\n  useEffect(() => {\n    if (tableRef.current) {\n      setIsRefReady(true);\n    }\n  },[tableRef.current])\n  return (\n   <>\n   <COffcanvas\n        className=\"card w-100\"\n        placement=\"end\"\n        visible={visible}\n        onHide={() => setVisible(false)}\n        data-coreui-backdrop=\"static\"\n      >\n        <CAlert\n          color=\"success\"\n          visible={true}\n          className=\"justify-content-between align-items-center d-flex\"\n        >\n          <svg\n            onClick={() => setVisible(false)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            className=\"bi bi-x-lg\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z\" />\n          </svg>\n        </CAlert>\n        <COffcanvasBody>\n            <div className='w-100'>\n            {tableRef.current ? (<DownloadTableExcel\n                        filename={`${session_data.lecture.subject.subject_name} - ${new Date(session_data.day).toLocaleString()}`}\n                        sheet=\"attendance\"\n                        currentTableRef={tableRef.current}\n                    >\n\n                      <button className='my-2 w-100 btn btn btn-outline-primary'> Export excel </button>\n\n                  </DownloadTableExcel>) :null}\n            </div>\n        <CRow className=\"w-100 flex-col\">\n                    <CCol className=\"col-12\">\n                    <div className='table-responsive'>\n                      <table align=\"middle\" className=\"table align-middle table-hover text-center mb-0 border hover responsive\" ref={tableRef}>\n                        <CTableHead color=\"light\">\n                        <CTableRow aria-colspan={5}>\n                            <CTableHeaderCell colSpan={5}>L.D COLLEGE OF ENGINEERING</CTableHeaderCell>\n                          </CTableRow>\n                          <CTableRow aria-colspan={5}>\n                            <CTableHeaderCell colSpan={5}>Subject: {session_data.lecture.subject.subject_name} | DATE: {session_data.day}</CTableHeaderCell>\n                          </CTableRow>\n                          <CTableRow>\n                            {/* <CTableHeaderCell>SR. NO</CTableHeaderCell> */}\n                            <CTableHeaderCell>Enrollment No</CTableHeaderCell>\n                            <CTableHeaderCell>Student Name</CTableHeaderCell>\n                            <CTableHeaderCell>IP Addr</CTableHeaderCell>\n                            <CTableHeaderCell>Batch</CTableHeaderCell>\n                            <CTableHeaderCell>Status</CTableHeaderCell>\n                          </CTableRow>\n                        </CTableHead>\n                        <CTableBody>\n                          {attendances &&\n                            attendances.map((item, index) => (\n                              <CTableRow v-for=\"alert alert-primary item in tableItems\" key={index}>\n                                {/* <CTableDataCell>\n                                        <div>{item.student.sr_no}</div>   \n                                </CTableDataCell> */}\n                                <CTableDataCell>\n                                  <div>{item.student.enrollment ? item.student.enrollment: \"-\"}</div>\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div>{item.student.profile.name ? item.student.profile.name: '-'}</div>\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div>{item.marking_ip ? item.marking_ip : '-'}</div>\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                <div>\n                                  {item.batches\n                                    ? item.batches.map((batch, index) => (\n                                        <span key={index}>{batch.batch_name.toUpperCase()}</span>\n                                      ))\n                                    : '-'}\n                                </div>\n\n                                </CTableDataCell>\n                                {item.is_present ? (<CTableDataCell>\n                                  <div className=\"text-success\">\n                                    <svg\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                      width=\"16\"\n                                      height=\"16\"\n                                      fill=\"currentColor\"\n                                      className=\"mx-auto bi bi-patch-check\"\n                                      viewBox=\"0 0 16 16\"\n                                    >\n                                      <path\n                                        fillRule=\"evenodd\"\n                                        d=\"M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0\"\n                                      />\n                                      <path d=\"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911z\" />\n                                    </svg>\n                                    <p style={{visibility:'hidden'}}>P</p>\n                                  </div>\n                                </CTableDataCell>): (<CTableDataCell>\n                                  <div className=\"text-danger\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-octagon\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M4.54.146A.5.5 0 0 1 4.893 0h6.214a.5.5 0 0 1 .353.146l4.394 4.394a.5.5 0 0 1 .146.353v6.214a.5.5 0 0 1-.146.353l-4.394 4.394a.5.5 0 0 1-.353.146H4.893a.5.5 0 0 1-.353-.146L.146 11.46A.5.5 0 0 1 0 11.107V4.893a.5.5 0 0 1 .146-.353zM5.1 1 1 5.1v5.8L5.1 15h5.8l4.1-4.1V5.1L10.9 1z\"/>\n                                    <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708\"/>\n                                  </svg>\n                                    <p style={{visibility:'hidden'}}>F</p>\n                                  </div>\n                                </CTableDataCell>)}\n                              </CTableRow>\n                            ))}\n                        </CTableBody>\n                      </table>\n                      </div>\n                    </CCol>\n                  </CRow>\n        </COffcanvasBody>\n      </COffcanvas>\n   </>\n  )\n}\n\nexport default Session_history","import React, { useEffect, useState } from 'react'\nimport { \n    CRow,\n    CCol,\n    CCardHeader,\n    CCard,\n    CCardBody,\n    CTable,\n    CTableHead,\n    CTableRow,\n    CTableHeaderCell,\n    CTableBody,\n    CTableDataCell,\n    CFormInput\n} from '@coreui/react'\nimport useAPI from 'src/global_function/useApi'\nimport axios from 'axios'\nimport '../../css/tailwind.css'\nimport Subject from '../subject/Subject'\nimport Session_history from './Session_history'\n\nconst LectureHistory = () => {\nconst [StoredTokens, CallAPI] = useAPI()\nconst [subjects,SetSubjects] = useState(null)\nconst [lecture,setLecture] = useState(null)\nconst [FilterLecture,setFilterLecture] = useState(null)\nconst [attendances, setAttendances] = useState(null)\nconst [visible , setVisible] = useState(false)\nconst [session_data, setSessionData] = useState(null)\nconst load_subjects_of_teacher = async () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/get_subjects_of_teacher',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      SetSubjects(response.data.data)  \n       \n    }\n    else{\n      alert(response_obj.errorMessage.message)\n    }\n  }\n  const load_lectures = async (subject_slug) => {\n    const headers = {\n        'Content-Type': 'application/json',\n        'ngrok-skip-browser-warning': true,\n      }\n      const axiosInstance = axios.create()\n      const response_obj = await CallAPI(\n        StoredTokens,\n        axiosInstance,\n        '/manage/get_lecture_sessions_for_teacher',\n        'get',\n        headers,\n        null,\n        {subject_slug:subject_slug},\n      )\n      if (response_obj.error === false) {\n        const response = response_obj.response        \n        setLecture(response.data.data)     \n      }\n      else{\n        alert(response_obj.errorMessage.message)\n      }\n  }\n\n  const search_lecture = (day)=>{\n    console.log(day);\n    const filteredData = lecture.filter(item => item.session.some(session => session.day === day));\n    \n    if(filteredData.length > 0) {\n      setFilterLecture(filteredData)\n    }\n    else{\n      setFilterLecture(null)\n    }\n    \n  }\n\n\n  const get_session_data = async(session_id)=>{\n    const headers = {\n      'Content-Type':\"application/json\",\n      'ngrok-skip-browser-warning':true\n    }\n\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      `/manage/session/get_session_data_for_export/${session_id}`,\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      setAttendances(response.data.data.marked_attendances)\n      setSessionData(response.data.data)\n      setVisible(true)\n    }\n    else{\n      alert(response_obj.errorMessage.message)\n    }\n  }\n  useEffect(() => {\n    load_subjects_of_teacher()\n  },[])\n  return (\n    <>\n      {\n        subjects ? (<>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select A Subject</label>\n              <select className=\"form-select\" aria-label=\"Default select example\" required  onChange={(e) => {load_lectures(e.target.value)}}>\n                <option value=\"\">....</option>\n                {subjects && subjects.map((item,index) => (\n                    <option key={index} value={item.slug}>{item.subject_name}</option>\n                ))}               \n              </select>\n        </div>\n        \n        {\n          FilterLecture ? (\n<CRow>\n            <CCol xs>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <div className='d-flex flex-wrap justify-between'>\n                    <div>\n                      <strong>Subject Attendance History</strong>\n                    </div>\n                    <div>\n                      <div className='d-flex'>\n                        <div>\n                          <CFormInput type=\"date\" id=\"validationCustom01\"  required  onChange={(e)=>{search_lecture(e.target.value)}}/>\n                        </div>\n                        <div className='mx-2'>  \n                        </div>\n                      </div>\n                    \n                    \n                    </div>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n\n                  <CTable align=\"middle\" className=\"mb-0 border text-center\" hover responsive>\n                    <CTableHead color=\"light\">\n                      <CTableRow>\n                        <CTableHeaderCell>classroom</CTableHeaderCell>\n                        <CTableHeaderCell>Lecture Type</CTableHeaderCell>\n                        <CTableHeaderCell>Day</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      {FilterLecture.map((lecture, index) => (\n                        lecture.session.map((session,index)=>(\n                          <CTableRow v-for=\"item in tableItems\" key={index} onClick={(e) => get_session_data(session.session_id)}>\n                          <CTableDataCell>\n                            <div>{lecture.classroom}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{lecture.type.charAt(0).toUpperCase() + lecture.type.slice(1)}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{session.day}</div>   \n                          </CTableDataCell>\n                        </CTableRow>\n                        ))\n                        \n                      ))}\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          ) : ( lecture ? (<CRow>\n            <CCol xs>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <div className='d-flex flex-wrap justify-between'>\n                    <div>\n                      <strong>Subject Attendance History</strong>\n                    </div>\n                    <div>\n                      <div className='d-flex'>\n                        <div>\n                          <CFormInput type=\"date\" id=\"validationCustom01\"  required  onChange={(e)=>{search_lecture(e.target.value)}}/>\n                        </div>\n                        <div className='mx-2'>\n                        \n                        </div>\n                      </div>\n                    \n                    \n                    </div>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                  <CTable align=\"middle\" className=\"mb-0 border text-center\" hover responsive>\n                    <CTableHead color=\"light\">\n                      <CTableRow>\n                        <CTableHeaderCell>classroom</CTableHeaderCell>\n                        <CTableHeaderCell>Lecture Type</CTableHeaderCell>\n                        <CTableHeaderCell>Day</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      \n                    { lecture.length > 0  ? (\n                      lecture.map((lecture, index) => (\n                        lecture.session.map((session,index)=>(\n                          <CTableRow v-for=\"item in tableItems\" key={index} onClick={(e) => get_session_data(session.session_id)}>\n                          <CTableDataCell>\n                            <div>{lecture.classroom}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{lecture.type.charAt(0).toUpperCase() + lecture.type.slice(1)}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{session.day}</div>   \n                          </CTableDataCell>\n                        </CTableRow>\n                        )) \n                        \n                        \n                      ))\n                    ) \n                    :(\n                      <CTableRow v-for=\"item in tableItems\">\n                        <CTableDataCell colSpan={3}>\n                          <div className='alert alert-primary w-100 my-2'>\n                            <span className=''>No Lecture Sessions Are Thre for This Subject</span>\n                          </div>\n                        \n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                    }\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>) : (null)\n          )\n        }\n\n        </>) : (null)\n      }\n       {\n        attendances && <Session_history visible={visible} setVisible={setVisible} attendances={attendances} session_data={session_data}></Session_history>\n       } \n       \n       {\n         !lecture && <div role=\"status\" className=\"p-4 border border-gray-200 rounded shadow animate-pulse md:p-6 dark:border-gray-700\">\n         <div className=\"h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-32 mb-2.5\"></div>\n         <div className=\"w-48 h-2 mb-10 bg-gray-200 rounded-full dark:bg-gray-700\"></div>\n         <div className=\"flex items-baseline mt-4\">\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-72 dark:bg-gray-300\"></div>\n             <div className=\"w-full h-56 ms-6 bg-gray-200 rounded-t-lg dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-72 ms-6 dark:bg-gray-300\"></div>\n             <div className=\"w-full h-64 ms-6 bg-gray-200 rounded-t-lg dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-80 ms-6 dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-72 ms-6 dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-80 ms-6 dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-80 ms-6 dark:bg-gray-300\"></div>\n         </div>\n     </div>\n       }\n        \n    </>\n  )\n}\n\nexport default LectureHistory","import React from 'react'\nimport LectureHistory from './views/teacher/LectureHistory'\n\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'))\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'))\n\n// Base\nconst Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'))\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'))\nconst Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))\nconst Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))\nconst Progress = React.lazy(() => import('./views/base/progress/Progress'))\nconst Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'))\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))\nconst Timetable = React.lazy(() => import('./views/timetable/Timetable'))\nconst Subject = React.lazy(() => import('./views/subject/Subject'))\nconst Teacherview = React.lazy(() => import('./views/teacher/Teacherview'));\nconst Addstudent = React.lazy(() => import('./views/student_controller/Addstudent'));\n// Buttons\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))\nconst Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))\n\n//Forms\nconst ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))\nconst FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Layout = React.lazy(() => import('./views/forms/layout/Layout'))\nconst Range = React.lazy(() => import('./views/forms/range/Range'))\nconst Select = React.lazy(() => import('./views/forms/select/Select'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\nconst Teacher = React.lazy(()=> import('./views/teacher/Teacher'))\nconst Breadcrumbnav = React.lazy(()=> import('./views/breadcrum/Breadcrumbnav'))\nconst TeacherSidebar = React.lazy(()=> import('./views/teacher/TeacherSidebar'))\nconst Charts = React.lazy(() => import('./views/charts/Charts'))\nconst StudentDashboard =  React.lazy(() => import('./views/student_controller/StudentDashboard'))\nconst Sessionmanage =  React.lazy(() => import('./views/teacher/Sessionmanage'))\nconst Logout = React.lazy(()=> import('./views/pages/logout/Logout'))\n\n// // Icons\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'))\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'))\n\n// Notifications\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'))\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'))\nconst Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))\n\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'))\n\n\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/theme', name: 'Theme', element: Colors, exact: true },\n  { path: '/theme/colors', name: 'Colors', element: Colors },\n  { path: '/theme/typography', name: 'Typography', element: Typography },\n  { path: '/base', name: 'Base', element: Cards, exact: true },\n  { path: '/base/accordion', name: 'Accordion', element: Accordion },\n  { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },\n  { path: '/base/cards', name: 'Cards', element: Cards },\n  { path: '/base/carousels', name: 'Carousel', element: Carousels },\n  { path: '/base/collapses', name: 'Collapse', element: Collapses },\n  { path: '/base/list-groups', name: 'List Groups', element: ListGroups },\n  { path: '/base/navs', name: 'Navs', element: Navs },\n  { path: '/base/paginations', name: 'Paginations', element: Paginations },\n  { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },\n  { path: '/base/popovers', name: 'Popovers', element: Popovers },\n  { path: '/base/progress', name: 'Progress', element: Progress },\n  { path: '/base/spinners', name: 'Spinners', element: Spinners },\n  { path: '/base/tables', name: 'Tables', element: Tables },\n  { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },\n  { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },\n  { path: '/buttons/buttons', name: 'Buttons', element: Buttons },\n  { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },\n  { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },\n  { path: '/charts', name: 'Charts', element: Charts },\n  { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n  { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n  { path: '/forms/select', name: 'Select', element: Select },\n  { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },\n  { path: '/forms/range', name: 'Range', element: Range },\n  { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n  { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },\n  { path: '/forms/layout', name: 'Layout', element: Layout },\n  { path: '/forms/validation', name: 'Validation', element: Validation },\n  { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },\n  { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },\n  { path: '/icons/flags', name: 'Flags', element: Flags },\n  { path: '/icons/brands', name: 'Brands', element: Brands },\n  { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },\n  { path: '/notifications/alerts', name: 'Alerts', element: Alerts },\n  { path: '/notifications/badges', name: 'Badges', element: Badges },\n  { path: '/notifications/modals', name: 'Modals', element: Modals },\n  { path: '/notifications/toasts', name: 'Toasts', element: Toasts },\n  { path: '/widgets', name: 'Widgets', element: Widgets },\n  { path: '/manage-teachers',name:'Teacher',element:Teacher},\n  { path: '/breadcrumb',name:'Breadcrumbnav',element:Breadcrumbnav},\n  { path: '/TeacherSidebar',name:'TeacherSidebar',element:TeacherSidebar},\n  { path: '/logout',name:'Logout',element:Logout},\n  { path: '/timetable',name:'Timetable',element:Timetable},\n  { path: '/subject',name:'Subject',element:Subject},\n  { path: '/addstudent',name:'AddStudent',element:Addstudent},\n  { path: '/teacher/dashboard',name:'Teacherview',element:Teacherview},\n  { path: '/studentdashboard',name:'StudentDashboard',element:StudentDashboard}  ,\n  { path: '/teacher/session',name:'Sessionmanage',element:Sessionmanage}  ,\n  { path: '/teacher/lectures/history',name:'LectureHistory',element:LectureHistory}  \n]\n\n export default routes;\n","import React, { Suspense, useEffect } from 'react'\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport axios from 'axios'\nimport {base_url} from 'src/base_url'\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\n\nimport expireToken from 'src/global_function/unauthorizedToken'\nimport { APIMiddleware } from 'src/global_function/GlobalFunctions'\n\n// routes config\nimport routes from '../routes'\nimport { cilFace } from '@coreui/icons'\n\nconst AppContent = () => {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken, refreshToken, batches, accessTokenActive, profileDetails } = state\n  const navigate = useNavigate();\n\n\n  const loadBatches = async () => {\n    const header = {\n      \"Content-Type\": \"application/json\",\n      'ngrok-skip-browser-warning': true\n    }\n    const axiosInstance = axios.create()\n    let endpoint = `/manage/get_batches`; let method = 'get'; let headers = header;\n    let response_obj = await APIMiddleware(axiosInstance, endpoint, method, headers)\n    if (response_obj.error == false) {\n      let response = response_obj.response\n      ctxDispatch({ type: 'GET_BATCHES', payload: response.data.data });\n      response.data.data.map((item) => {\n        if (item.active) {\n          ctxDispatch({ type: 'CURRENT_BATCH_SLUG', payload: item });\n        }\n      })\n    } else {\n      \n    }\n  }\n\n  useEffect(() => {\n    if (accessToken) {\n      if (profileDetails.obj.profile.role === \"admin\") {\n        // loadBatches()\n      }\n    }\n  }, []);\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          \n          {\n            (() => {\n              if (profileDetails.obj.profile.role === \"admin\") {\n                return <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />;\n              } else if (profileDetails.obj.profile.role === \"teacher\") {\n                return <Route path=\"/\" element={<Navigate to=\"teacher/dashboard\" replace />} />;\n              }\n              else if (profileDetails.obj.profile.role === \"student\") {\n                return <Route path=\"/\" element={<Navigate to=\"studentdashboard\" replace />} />;\n              }\n            })()\n          }\n\n\n\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useEffect, useContext , useState} from 'react'\nimport { Store } from 'src/views/forms/validation/store'\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { profileDetails } = state\n  const [adminEmail, setadminEmail] = useState(\"\");\n  \n  useEffect(() => {\n    if(profileDetails){\n      setadminEmail(profileDetails.obj.profile.email)\n    }\n  }, [profileDetails]);\n  const logoutAdmin = () => {\n        \n        localStorage.clear()\n        navigate(\"/login\")\n  }\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n      <div className=\"text-medium-emphasis\">{adminEmail}</div>\n      </CDropdownToggle>              \n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect, useContext , useState} from 'react'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMenu } from '@coreui/icons'\nimport { Store } from 'src/views/forms/validation/store'\n\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { profileDetails } = state\n  const [adminEmail, setadminEmail] = useState(\"\");\n  \n  useEffect(() => {\n    if(profileDetails){\n      setadminEmail(profileDetails.email)\n    }\n  }, [profileDetails]);\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-2\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>      \n      \n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\nimport { CSidebar, CSidebarBrand, CSidebarNav } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\nimport smartrollicon from '../smartroll_logo.png'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken, refreshToken, profileDetails } = state\n\n\n\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      palcement=\"end\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <img className=\"p-3\" src={smartrollicon}></img>\n      <CSidebarNav>\n        <SimpleBar>\n          {profileDetails.obj.profile.role === \"admin\" && (\n            <AppSidebarNav\n              items={navigation.admin_role}\n            />\n          )}\n          {profileDetails.obj.profile.role === \"teacher\" && (\n            <AppSidebarNav\n              items={navigation.teacher_role}\n            />\n          )}\n          {profileDetails.obj.profile.role === \"student\" && (\n            <AppSidebarNav\n              items={navigation.student_role}\n            />\n          )}\n        </SimpleBar>\n      </CSidebarNav>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CCallout, CLink } from '@coreui/react'\n\nconst DocsCallout = (props) => {\n  const { content, href, name } = props\n\n  const plural = name.slice(-1) === 's' ? true : false\n\n  const _href = `https://coreui.io/react/docs/${href}`\n\n  return (\n    <CCallout color=\"info\" className=\"bg-white\">\n      {content\n        ? content\n        : `A React ${name} component ${\n            plural ? 'have' : 'has'\n          } been created as a native React.js version\n      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,\n      variants, and unique design that matches CoreUI Design System requirements.`}\n      <br />\n      <br />\n      For more information please visit our official{' '}\n      <CLink href={_href} target=\"_blank\">\n        documentation of CoreUI Components Library for React.js\n      </CLink>\n      .\n    </CCallout>\n  )\n}\n\nDocsCallout.propTypes = {\n  content: PropTypes.string,\n  href: PropTypes.string,\n  name: PropTypes.string,\n}\n\nexport default React.memo(DocsCallout)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CTabContent, CTabPane } from '@coreui/react'\n\nconst DocsExample = (props) => {\n  const { children} = props\n\n\n  return (\n    <div className=\"example\">\n      <CTabContent className=\"rounded-bottom\">\n        <CTabPane className=\"p-3 preview\" visible>\n          {children}\n        </CTabPane>\n      </CTabContent>\n    </div>\n  )\n}\n\nDocsExample.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n  nextForm: PropTypes.func.isRequired,\n}\n\nexport default React.memo(DocsExample)\n","import axios from 'axios'\nimport {base_url} from 'src/base_url'\n\nimport Swal from 'sweetalert';\n\n// Used for handling expired tokens\nconst APIMiddleware = async (reqInstance, endpoint, method, headers, body = null, params = null) => {\n    // Get the access and refresh tokens\n    const access = localStorage.getItem('accessToken');\n    const refresh = localStorage.getItem('refreshToken');\n    headers['Authorization'] = `Bearer ${access}`;\n\n    let response_obj;\n    window.setProgress(100)\n    if (method === 'get') {\n        try {\n            const response = await reqInstance.get(`${base_url}${endpoint}`, { headers, params });\n            response_obj = { 'error': false, 'response': response };\n        } catch (error) {\n            if (error.response && error.response.status === 401) {                \n                const result = await expireToken(refresh);\n                localStorage.setItem('accessToken', result.access);\n                localStorage.setItem('refreshToken', result.refresh);                                \n                response_obj = await APIMiddleware(reqInstance, endpoint, method, headers, body, params);                \n            } else {\n                response_obj = { 'error': true, 'error': error };\n            }\n        }\n    } else if (method === 'post') {\n        try {\n            const response = await reqInstance.post(`${base_url}${endpoint}`, body, { headers });\n            response_obj = { 'error': false, 'response': response };\n        } catch (error) {\n            if (error.response && error.response.status === 401) {\n                const result = await expireToken(refresh);\n                localStorage.setItem('accessToken', result.access);\n                localStorage.setItem('refreshToken', result.refresh);\n                response_obj = await APIMiddleware(reqInstance, endpoint, method, headers, body, params);                \n            } else {\n                response_obj = { 'error': true, 'error': error };\n            }\n        }\n    }    \n    return response_obj;\n};\n\nconst expireToken = async (refreshToken) => {\n    const header = {\n        'ngrok-skip-browser-warning': true\n    };\n\n    return axios.post(`${base_url}/auth/api/token/refresh/`, { \"refresh\": refreshToken }, { headers: header })\n        .then((response) => response.data)\n        .catch((error) => { throw error; });\n};\n\nconst showAlert = (title,text) => {\n    \n    Swal({\n        title: title,\n        text: text,\n        icon: 'success',\n        button: 'OK',\n      });\n  \n  };\n\nexport {APIMiddleware , showAlert}","import axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { Store } from \"src/views/forms/validation/store\";\nimport {base_url} from \"src/base_url\";\n\n\nconst useAPI = () => {  \n  const navigate = useNavigate()\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken , refreshToken , profileDetails, objectCount } = state\n\n  const StoredTokens = {\n    accessToken,\n    refreshToken\n  }\n  const CallAPI = async (tokens=StoredTokens,reqInstance, endpoint, method, headers, body = null, params = null) => {    \n    headers['Authorization'] = `Bearer ${tokens.accessToken}`;    \n    try {\n      const response = await makeRequest(reqInstance, endpoint, method, headers, body, params);\n      return { error: false, response };\n    } catch (error) {            \n        if (error.response && error.response.status === 401) {\n          const result = await expireToken(tokens.refreshToken);          \n          if(result.access && result.refresh){\n            const token_data = {\n              \"accessToken\" : result.access,\n              \"refreshToken\": result.refresh\n            }\n            localStorage.setItem('accessToken',result.access)\n            localStorage.setItem('refreshToken',result.refresh)\n            ctxDispatch({ type: 'ACCESS_TOKEN', payload: result.access});\n            ctxDispatch({ type: 'REFRESH_TOKEN', payload: result.refresh });\n            return CallAPI(token_data, reqInstance, endpoint, method, headers, body, params);\n          }\n          if(result.action == 'tokenExpired' && result.status === 401){\n            localStorage.removeItem('accessToken')\n            localStorage.removeItem('refreshToken')\n            navigate('/auth/sign-in/')\n            return { error: true, result };\n          }\n        } else {\n          return { error: true, errorMessage: error.response.data || 'Unknown error' };\n        }      \n    }\n  }\n  return [StoredTokens,CallAPI]\n};\n\nconst makeRequest = async (reqInstance, endpoint, method, headers, body, params) => {\n  if (method === 'get') {\n    return await axios.get(`${base_url}${endpoint}`, { headers, params });\n  } else if (method === 'post') {\n    return await axios.post(`${base_url}${endpoint}`, body, { headers });\n  } else {\n    throw new Error('Invalid HTTP method');\n  }\n};\n\nconst expireToken = async (refreshToken) => {\n  const header = {\n    'ngrok-skip-browser-warning': true,\n  };  \n  try {\n    const response = await axios.post(`${base_url}/auth/api/token/refresh/, { refresh: ${refreshToken} }, { headers: header }`);\n    return response.data;\n  } catch (error) {\n    if(error.response.status === 401){       \n      return {'action':'tokenExpired','status':error.response.status};\n    }\n  }\n};\n\nexport default useAPI;","import React, { useEffect, useState } from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport { useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { Store } from 'src/views/forms/validation/store';\nimport axios from 'axios';\nimport {base_url} from 'src/base_url';\nimport { jwtDecode } from \"jwt-decode\";\nimport expireToken from 'src/global_function/unauthorizedToken';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst DefaultLayout = () => {  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken , refreshToken} = state\n  const [serverAvaibility,setServerAvaibility] = useState(false)\n  const [_404,set404] = useState(true)\n  const [accessTokenValid,setAccessTokenValid] = useState(false)\n  const [progress,setProgress] = useState(0);  \n  const navigate = useNavigate();  \n  if (typeof window !== 'undefined') {\n    window.setProgress = setProgress;\n  }\n\n  const expireToken = async (refreshToken)=>{\n    const header = {\n        'ngrok-skip-browser-warning':true\n      }\n    axios.post(`${base_url}/auth/api/token/refresh/`,{\n        \"refresh\":refreshToken\n    },{headers:header})\n    .then((response)=>{        \n        localStorage.setItem('accessToken',response.data.access)\n        localStorage.setItem('refreshToken',response.data.refresh)        \n        const decoded = jwtDecode(response.data.access); \n        ctxDispatch({ type: 'SET_PROFILE', payload: decoded});\n        setAccessTokenValid(true)\n    })\n    .catch((error)=>{\n        alert(error.response.data.detail)\n        localStorage.removeItem('accessToken')\n        localStorage.removeItem('refreshToken')\n        navigate('/auth/login')\n    })\n}\n\nconst checkAccessTokenAuthenticity = async (accessToken) => {    \n  const headers = {\n    \"Content-Type\":\"application/json\",      \n    'ngrok-skip-browser-warning':true,\n    'Authorization': `Bearer ${accessToken}`\n  }\n\n  axios.get(`${base_url}/check_token_authenticity/`,{headers:headers})\n  .then((response)=>{\n    if(response.data.data === true){\n      setAccessTokenValid(true)\n    }\n    else{\n      if(refreshToken){\n        expireToken(refreshToken)\n      }else{\n        navigate('/login')\n      }\n    }\n  })\n  .catch((error)=>{        \n    localStorage.removeItem('accessToken')\n    localStorage.removeItem('refreshToken')\n    navigate('/login')\n  })    \n}\nconst checkServerAvaibility = async ()=> {\n  const headers = {\n       \"Content-Type\":\"application/json\",      \n       'ngrok-skip-browser-warning':true,\n       \n  }\n  axios.get(`${base_url}/check_server_avaibility/`,{headers:headers})\n  .then((response)=>{\n    setServerAvaibility(true)\n    if(accessToken){\n      const decoded = jwtDecode(accessToken); \n      ctxDispatch({ type: 'SET_PROFILE', payload: decoded});\n      checkAccessTokenAuthenticity(accessToken)\n    }else{\n      navigate('/login')\n    }\n  })\n  .catch((error)=>{\n      navigate(\"/404\")\n  })    \n}\n\n  const decodeToken= () => {\n    const decoded = jwtDecode(accessToken);              \n    // if (typeof window !== 'undefined') {      \n        window.user_profile = decoded.profile;\n    // }\n    ctxDispatch({ type: 'SET_PROFILE', payload: decoded});    \n  }\n  \n  useEffect(() => {    \n    checkServerAvaibility()   \n},[])  \n  if(accessToken && accessTokenValid){\n    return (    \n      <div>\n  <LoadingBar color={'#1f6feb'} progress={progress}\n      onLoaderFinished={() => setProgress(0)} />\n        <AppSidebar />\n        <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n          <AppHeader />\n          <div className=\"body flex-grow-1 px-3\">\n            <AppContent />\n          </div>\n      \n        </div>\n      </div>    \n  )\n  }else{\n    return null\n  }\n}\n\nexport default DefaultLayout\n","import React from 'react'\nimport { useState , useContext,useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Store } from 'src/views/forms/validation/store'\nimport axios from 'axios'\nimport {base_url} from 'src/base_url'\nimport expireToken from 'src/global_function/unauthorizedToken'\nimport { APIMiddleware } from 'src/global_function/GlobalFunctions'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableDataCell,\n  CFormSelect\n} from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport { showAlert } from 'src/global_function/GlobalFunctions'\nimport useAPI from 'src/global_function/useApi'\n\nconst Subject = () => {\n\n    const [subjects, set_Subjects] = useState(null)\n    const [semester,set_semester] = useState(null)\n    //costom hook to call the API\n    const [term,set_term] = useState(null)\n    \n    const [StoredTokens,CallAPI] = useAPI()\n    const [current_semester, set_current_semester] = useState(null)\n\n    const load_subject = async()=>{\n        const header = {\n            \"Content-Type\":\"application/json\",      \n            'ngrok-skip-browser-warning':true\n          }\n          const axiosInstance = axios.create()\n          let endpoint = `/manage/get_subject`;let method='get';let headers = header;\n          let response_obj = await CallAPI(StoredTokens,axiosInstance,endpoint,method,headers,null,null)\n          if(response_obj.error == false){\n          let response = response_obj.response          \n          set_Subjects(response.data.data)\n        }else{            \n        }   \n    }\n    const load_semester = async(current_term)=>{\n      \n      const headers = {\n        \"Content-Type\":\"application/json\",\n        'ngrok-skip-browser-warning':true\n      }\n      const axiosInstance = axios.create()\n      const response_obje = await CallAPI(StoredTokens,axios,\"/manage/get_semesters\",\"get\",headers,null,{\"term_slug\":current_term})\n      if(response_obje.error == false){\n        const response = response_obje.response        \n        set_semester(response.data.data)\n      }\n      else{        \n      }\n    }\n\n\n\n    const load_term = async()=>{\n      const header = {\n        \"Content-Type\":\"application/json\",\n        'ngrok-skip-browser-warning':true\n      }\n      const axiosInstance = axios.create\n      let endpoint = `/manage/get_terms`;let method='get';let headers = header;\n      let response_obj = await CallAPI(StoredTokens,axiosInstance,endpoint,method,headers)    \n      if(response_obj.error == false){\n      let response = response_obj.response\n          set_term(response.data.data)\n    }else{  \n      alert(response_obj.errorMessage.message)\n    }  \n    }\n\n    const [validated, setValidated] = useState(false)\n    const [subject_name, set_subject_name] = useState(\"\")\n    const [subject_code, set_subject_code] = useState(\"\")\n    const [subject_credit, set_subject_credit] = useState(\"\")\n    const [currentSelectSemester,setcurrentSelectSemester] = useState(\"\")\n    const { state, dispatch: ctxDispatch } = useContext(Store);\n    const { accessToken,refreshToken } = state\n    const navigate = useNavigate()\n    const add_batch = async (body) => {\n      const header = {\n        \"Content-Type\":\"application/json\",      \n        'ngrok-skip-browser-warning':true\n      }\n      const axiosInstance = axios.create()\n      let endpoint = `/manage/add_subject/`;let method='post';let headers = header;\n      let response_obj = await APIMiddleware(axiosInstance,endpoint,method,headers,body,null)\n      if(response_obj.error == false){\n          let response = response_obj.response\n          set_Subjects(prevArray => [...prevArray, response.data.data])\n          showAlert(\"success\",\"Subject Added successfully...!\")\n        }else{            \n        }    \n    }\n    \n    const handleSubmit = (event) => {\n      const form = event.currentTarget\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n      }\n      setValidated(true)\n      const body = {\n        \"code\": subject_code,\n        \"subject_name\": subject_name,\n        \"credit\": subject_credit,\n        \"semester_slug\":current_semester,\n      }\n      event.preventDefault()\n      add_batch(body)\n      \n    }\n\n    useEffect(() => {\n        load_term()\n        load_subject()\n       \n    }, [])\n    \n  return (\n    <>\n    <>\n    <CRow>\n    <CCol>\n        {term && (\n            <>\n              <CCard className={`mb-3`}>\n                <CCardHeader>select term</CCardHeader>\n                <CCardBody>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    onChange={(e) => {\n                      console.log(e.target.value)\n                      load_semester(e.target.value)\n                    }}\n                  >\n                    <option value=\"\">Select Term</option>\n                    {term.map((item, index) => (\n                      <option key={index} value={item.slug}>\n                        term : {item.start_year} - {item.end_year}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </CCardBody>\n              </CCard>\n            </>\n          )}\n          {semester && (\n            <>\n              <CCard className={`mb-3`}>\n                <CCardHeader>Semester</CCardHeader>\n                <CCardBody>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    onChange={(e) => {\n                     set_current_semester(e.target.value)\n                    }}\n                  >\n                    <option value=\"\">Select Semester</option>\n                    {semester.map((item, index) => (\n                      <option key={index} value={item.slug}>\n                        Semester - {item.no}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </CCardBody>\n              </CCard>\n            </>\n          )}\n        </CCol>\n      </CRow>\n      {\n        current_semester ? (\n          <CRow>\n            <CCol xs={12}>\n          <CCard className=\"mb-3\">\n            <CCardHeader>\n              <strong>Subjects</strong>\n            </CCardHeader>\n            <CCardBody>\n                <CForm\n            className=\"row g-3 needs-validation\"\n            noValidate\n            validated={validated}\n            onSubmit={handleSubmit}\n          >\n            <CCol md={12}>\n              <CFormLabel htmlFor=\"validationCustom01\">Subject Name</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom01\" onChange={e => set_subject_name(e.target.value)} required />\n              <CFormFeedback valid>Looks good!</CFormFeedback>\n            </CCol>\n            \n            \n            <CCol md={6}>\n              <CFormLabel htmlFor=\"validationCustom01\">Subject Code</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom01\" onChange={e => set_subject_code(e.target.value)} required />\n              <CFormFeedback valid>Looks good!</CFormFeedback>\n            </CCol>\n            <CCol md={6}>\n              <CFormLabel htmlFor=\"validationCustom01\">Subject Credit</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom01\" onChange={e => set_subject_credit(e.target.value)} required />\n              <CFormFeedback valid>Looks good!</CFormFeedback>\n            </CCol>\n            <CCol xs={12}>\n              <button className='btn btn-outline-dark form-control' type=\"submit\">\n                Submit form\n              </button>\n            </CCol>\n                </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n        ) : (null)\n      }\n      \n      <CRow>\n        {\n          subjects ? (\n            <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Subject History</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell>Subject Name</CTableHeaderCell>\n                    <CTableHeaderCell>Subject Code</CTableHeaderCell>\n                    <CTableHeaderCell>Subject Credit</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>                \n                <CTableBody>\n                  {subjects.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell>\n                        <div>{item.subject_name.charAt(0).toUpperCase() + item.subject_name.slice(1)}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.code}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.credit}</div>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n          ) : (null)\n        }\n        \n      </CRow>\n    </>\n    </>\n  )\n}\n\nexport default Subject"],"names":["admin_role","component","CNavTitle","name","CNavItem","to","icon","_jsx","CIcon","cilLibraryBuilding","customClassName","cilNotes","cilSchool","cilPeople","cilCalendar","cilAccountLogout","teacher_role","student_role","base_url","websocket","AppSidebarNav","_ref","items","location","useLocation","navLink","badge","_jsxs","_Fragment","children","CBadge","color","className","text","navItem","item","index","rest","Component","_createElement","NavLink","key","navGroup","_item$items","idx","String","toggler","visible","pathname","startsWith","map","React","setVisible","attendances","session_data","tableRef","useRef","isRefReady","setIsRefReady","useState","useEffect","current","COffcanvas","placement","onHide","CAlert","onClick","xmlns","width","height","fill","viewBox","d","COffcanvasBody","DownloadTableExcel","filename","concat","lecture","subject","subject_name","Date","day","toLocaleString","sheet","currentTableRef","CRow","CCol","align","ref","CTableHead","CTableRow","CTableHeaderCell","colSpan","CTableBody","CTableDataCell","student","enrollment","profile","marking_ip","batches","batch","batch_name","toUpperCase","is_present","fillRule","style","visibility","LectureHistory","StoredTokens","CallAPI","useAPI","subjects","SetSubjects","setLecture","FilterLecture","setFilterLecture","setAttendances","setSessionData","search_lecture","console","log","filteredData","filter","session","some","length","get_session_data","async","axiosInstance","axios","create","response_obj","session_id","error","response","data","marked_attendances","alert","errorMessage","message","load_subjects_of_teacher","required","onChange","e","subject_slug","load_lectures","target","value","slug","xs","CCard","CCardHeader","CFormInput","type","id","CCardBody","CTable","hover","responsive","classroom","charAt","slice","Session_history","role","Dashboard","Colors","Typography","Accordion","Breadcrumbs","Cards","Carousels","Collapses","ListGroups","Navs","Paginations","Placeholders","Popovers","Progress","Spinners","Tables","Tooltips","Timetable","Subject","Teacherview","Addstudent","Buttons","ButtonGroups","Dropdowns","ChecksRadios","FloatingLabels","FormControl","InputGroup","Layout","Range","Select","Validation","Teacher","Breadcrumbnav","TeacherSidebar","Charts","StudentDashboard","Sessionmanage","Logout","CoreUIIcons","Flags","Brands","Alerts","path","exact","element","AppContent","state","dispatch","ctxDispatch","useContext","Store","accessToken","refreshToken","accessTokenActive","profileDetails","useNavigate","obj","CContainer","lg","Suspense","fallback","CSpinner","Routes","routes","route","Route","Navigate","replace","AppHeaderDropdown","adminEmail","setadminEmail","email","CDropdown","variant","CDropdownToggle","caret","AppHeader","useDispatch","sidebarShow","useSelector","CHeader","position","fluid","CHeaderToggler","cilMenu","size","CHeaderNav","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","palcement","onVisibleChange","src","smartrollicon","CSidebarNav","SimpleBar","navigation","DocsCallout","props","content","href","plural","_href","CCallout","CLink","DocsLink","rel","DocsExample","CTabContent","CTabPane","APIMiddleware","reqInstance","endpoint","method","headers","body","arguments","undefined","params","access","localStorage","getItem","refresh","window","setProgress","get","status","result","expireToken","setItem","post","then","catch","showAlert","title","Swal","button","makeRequest","Error","navigate","objectCount","tokens","token_data","payload","action","removeItem","DefaultLayout","serverAvaibility","setServerAvaibility","_404","set404","accessTokenValid","setAccessTokenValid","progress","checkAccessTokenAuthenticity","decoded","jwtDecode","detail","checkServerAvaibility","LoadingBar","onLoaderFinished","set_Subjects","semester","set_semester","term","set_term","current_semester","set_current_semester","validated","setValidated","set_subject_name","subject_code","set_subject_code","subject_credit","set_subject_credit","currentSelectSemester","setcurrentSelectSemester","load_term","load_subject","CFormSelect","response_obje","current_term","load_semester","start_year","end_year","no","CForm","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","prevArray","add_batch","md","CFormLabel","htmlFor","CFormFeedback","valid","code","credit"],"sourceRoot":""}