{"version":3,"file":"static/js/287.81728890.chunk.js","mappings":"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","sources":["views/teacher/Teacherview.js"],"sourcesContent":["import React from 'react'\n\nimport { useState } from 'react'\nimport { CCol, CRow, CToast, CToastHeader, CToastBody, CAlert } from '@coreui/react'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nimport useAPI from 'src/global_function/useApi'\nimport { useNavigate } from 'react-router-dom'\nimport moment from 'moment'\n\nexport default function Teacherview() {\n  // usestate to opne and close the model\n  const navigation = useNavigate()\n  const [StoredTokens, CallAPI] = useAPI()\n  const [TimeTables, setTimeTables] = useState(null)\n  const [lecture_list, set_lecture_list] = useState(null)\n  const load_teacher_timetable = async () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/get_timetable_for_teacher',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      const data = response.data.data.map((branch, index) => {\n        const lecture_obj = {\n          branch_name: branch.branch_name,\n          branch_slug: branch.slug,\n        }\n        const lecture_list = []\n        branch.semesters.map((semester, index) => {\n          semester.divisions.map((division, idnex) => {\n            if (division.timetable.schedule?.lectures.length > 0) {\n              division.timetable.schedule.lectures.map((lecture, index) => {\n                lecture_list.push({\n                  ...lecture,\n                  division_name: division.division_name,\n                  semester: semester.no,\n                  schedule: division.timetable.schedule.day,\n                })\n              })\n            } else {\n            }\n          })\n        })\n\n        return { ...lecture_obj, lectures: lecture_list }\n      })\n      // console.log(data)\n      setTimeTables(data)\n    } else {\n      alert(response_obj.errorMessage.message)\n    }\n  }\n\n  // const get_location_permission = ()=>{\n  //   if(!premission_state){\n  //     if(navigator.geolocation){\n  //       navigator.geolocation.getCurrentPosition((position)=>{\n  //         set_permission_state(true)\n  //       })\n  //     }\n  //   }\n\n  // }\n\n  const create_Session = async (lecture_slug) => {\n    navigation(`/teacher/session?slug=${lecture_slug}`)\n  }\n\n  useEffect(() => {\n    // get_location_permission()\n    load_teacher_timetable()\n  }, [])\n\n  return (\n    <>\n      <CRow className=\"mb-3\">\n        <CCol>\n          {TimeTables &&\n            TimeTables.map((branch, index) => {\n              return (\n                <div key={index}>\n                  <CAlert\n                    className=\"m-0 rounded-0 w-100 p-2 d-flex justify-content-between align-items-center mb-2\"\n                    color=\"primary\"\n                    visible={true}\n                  >\n                    {branch.branch_name}\n                  </CAlert>\n                  {branch.lectures.length > 0 ? (\n                    branch.lectures.map((lecture, index) => {\n                      return (\n                        <div key={index} className=\"d-flex justify-content-center w-100\">\n                          <CRow className=\"flex-column w-100\" style={{ padding: '0' }}>\n                            <CCol\n                              className=\"d-flex align-items-center flex-column w-100\"\n                              key={index}\n                            >\n                              <div className=\"w-100 rounded-0 border-0\">\n                                <div className=\"\" style={{ paddingBottom: '0px' }}>\n                                  <div className=\"justify-content-center w-100\">\n                                    <CToast\n                                      key={index}\n                                      autohide={false}\n                                      visible={true}\n                                      className={`mb-3 mt-3 w-100 ${\n                                        lecture.is_proxy ? 'border-red-700' : ''\n                                      }`}\n                                    >\n                                      <CToastHeader className=\"d-flex flex-wrap justify-content-sm-between justify-content-center mx-2\">\n                                        <div className={`w-100 fw-bold text-center`}>\n                                          <div>\n                                            <small className=\"mx-2 my-2\">\n                                              Semester: {lecture.semester} | Division :{' '}\n                                              {lecture.division_name}\n                                            </small>\n                                          </div>\n                                          {lecture.is_proxy ? (\n                                            <div>\n                                              <small className=\"mx-2 my-2\">\n                                                {lecture.is_proxy ? 'Proxied from ' : ''}\n                                                {lecture.link\n                                                  ? lecture.link.from_lecture.subject.subject_name\n                                                  : ''}\n                                              </small>\n                                            </div>\n                                          ) : null}\n\n                                          <hr className=\"w-100 my-2\"></hr>\n                                        </div>\n\n                                        <div className=\"fw-bold mx-2\">\n                                          {lecture.subject.subject_name.charAt(0).toUpperCase() +\n                                            lecture.subject.subject_name.slice(1)}\n                                        </div>\n                                        <small className=\"mx-2 my-2\">\n                                          {lecture.type.toUpperCase()}\n                                        </small>\n                                        <small className=\"mx-2 my-2\">\n                                          {moment(lecture.start_time.slice(0, 5), 'HH:mm').format(\n                                            'h:mm A',\n                                          )}{' '}\n                                          |{' '}\n                                          {moment(lecture.end_time.slice(0, 5), 'HH:mm').format(\n                                            'h:mm A',\n                                          )}\n                                        </small>\n                                      </CToastHeader>\n                                      <CToastBody className=\"d-flex flex-row flex-wrap justify-content-center\">\n                                        <CRow className=\"w-100 align-items-center\">\n                                          <CCol className=\"text-sm-start text-center col-12 col-sm-4 col-lg-4 col-md-4\">\n                                            Prof -{' '}\n                                            {lecture.teacher.charAt(0).toUpperCase() +\n                                              lecture.teacher.slice(1)}\n                                          </CCol>\n                                          <CCol className=\" text-sm-end col-12 col-sm-4 col-lg-4 col-md-4\">\n                                            <div className=\"w-100 text-center\">\n                                              {' '}\n                                              {lecture.batches.map((batch, index) => (\n                                                <span key={index}>\n                                                  {batch.batch_name.toUpperCase()}\n                                                  {index < lecture.batches.length - 1 && ', '}\n                                                </span>\n                                              ))}{' '}\n                                            </div>\n                                          </CCol>\n                                          <CCol className=\"text-sm-end text-center col-12 col-sm-4 col-lg-4 col-md-4\">\n                                            {lecture.classroom.class_name.charAt(0).toUpperCase() +\n                                              lecture.classroom.class_name.slice(1)}{' '}\n                                          </CCol>\n                                        </CRow>\n\n                                        <div className=\"d-flex w-100\">\n                                          <div className=\"w-100\">\n                                            {lecture.session.active === 'pre' && (\n                                              <button\n                                                className=\"btn btn-outline-primary w-100 mt-3\"\n                                                value={lecture.slug}\n                                                onClick={(e) => create_Session(e.target.value)}\n                                              >\n                                                Start Session\n                                              </button>\n                                            )}\n                                            {lecture.session.active === 'ongoing' && (\n                                              <button\n                                                className=\"btn btn-outline-primary w-100 mt-3\"\n                                                value={lecture.slug}\n                                                onClick={(e) => create_Session(e.target.value)}\n                                              >\n                                                Ongoing Session\n                                              </button>\n                                            )}\n                                            {lecture.session.active === 'post' && (\n                                              <button\n                                                disabled={true}\n                                                className=\"btn btn-outline-secondary w-100 mt-3\"\n                                              >\n                                                Session Ended\n                                              </button>\n                                            )}\n                                          </div>\n                                        </div>\n\n                                        <div></div>\n                                      </CToastBody>\n                                    </CToast>\n                                  </div>\n                                </div>\n                              </div>\n                            </CCol>\n                          </CRow>\n                        </div>\n                      )\n                    })\n                  ) : (\n                    <div className=\"d-flex w-100 justify-content-center\">\n                      <div className=\"alert alert-warning w-75 my-2 text-center \">\n                        <span className=\"\">No lecture sessions are there for this branch</span>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              )\n            })}\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n"],"names":["Teacherview","navigation","useNavigate","StoredTokens","CallAPI","useAPI","TimeTables","setTimeTables","useState","lecture_list","set_lecture_list","create_Session","async","concat","lecture_slug","useEffect","axiosInstance","axios","create","response_obj","error","data","response","map","branch","index","lecture_obj","branch_name","branch_slug","slug","semesters","semester","divisions","division","idnex","_division$timetable$s","timetable","schedule","lectures","length","lecture","push","division_name","no","day","alert","errorMessage","message","load_teacher_timetable","_jsx","_Fragment","children","CRow","className","CCol","_jsxs","CAlert","color","visible","style","padding","paddingBottom","CToast","autohide","is_proxy","CToastHeader","link","from_lecture","subject","subject_name","charAt","toUpperCase","slice","type","moment","start_time","format","end_time","CToastBody","teacher","batches","batch","batch_name","classroom","class_name","session","active","value","onClick","e","target","disabled"],"sourceRoot":""}