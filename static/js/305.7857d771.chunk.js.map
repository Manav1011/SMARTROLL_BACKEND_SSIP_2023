{"version":3,"file":"static/js/305.7857d771.chunk.js","mappings":";8JAOA,MAAMA,EAAO,WACX,IAAIC,EAAK,EACT,OAAO,WACL,OAAOA,GACT,CACF,CALa,GAMb,SAASC,EAAcC,GACrB,OAAiB,OAAVA,GAAmC,qBAAVA,CAClC,CACA,SAASC,EAAQD,GACf,GAAIE,MAAMD,SAAWC,MAAMD,QAAQD,GACjC,OAAO,EAET,MAAMG,EAAOC,OAAOC,UAAUC,SAASC,KAAKP,GAC5C,MAAyB,YAArBG,EAAKK,MAAM,EAAG,IAAuC,WAAnBL,EAAKK,OAAO,EAIpD,CACA,SAASC,EAAST,GAChB,OAAiB,OAAVA,GAA4D,oBAA1CI,OAAOC,UAAUC,SAASC,KAAKP,EAC1D,CACA,MAAMU,EAAkBV,IAA4B,kBAAVA,GAAsBA,aAAiBW,SAAWC,UAAUZ,GACtG,SAASa,EAAgBb,EAAOc,GAC9B,OAAOJ,EAAeV,GAASA,EAAQc,CACzC,CACA,SAASC,EAAef,EAAOc,GAC7B,MAAwB,qBAAVd,EAAwBc,EAAed,CACvD,CACA,MAIMgB,EAAcA,CAAChB,EAAOiB,IACT,kBAAVjB,GAAsBA,EAAMkB,SAAS,KAC1CC,WAAWnB,GAAS,IAAMiB,GACvBjB,EACP,SAASoB,EAASC,EAAIC,EAAMC,GAC1B,GAAIF,GAAyB,oBAAZA,EAAGd,KAClB,OAAOc,EAAGG,MAAMD,EAASD,EAE7B,CACA,SAASG,EAAKC,EAAUL,EAAIE,EAASI,GACnC,IAAIC,EAAGC,EAAKC,EACZ,GAAI7B,EAAQyB,GAEV,GADAG,EAAMH,EAASK,OACXJ,EACF,IAAKC,EAAIC,EAAM,EAAGD,GAAK,EAAGA,IACxBP,EAAGd,KAAKgB,EAASG,EAASE,GAAIA,QAGhC,IAAKA,EAAI,EAAGA,EAAIC,EAAKD,IACnBP,EAAGd,KAAKgB,EAASG,EAASE,GAAIA,QAG7B,GAAInB,EAASiB,GAGlB,IAFAI,EAAO1B,OAAO0B,KAAKJ,GACnBG,EAAMC,EAAKC,OACNH,EAAI,EAAGA,EAAIC,EAAKD,IACnBP,EAAGd,KAAKgB,EAASG,EAASI,EAAKF,IAAKE,EAAKF,GAG/C,CACA,SAASI,EAAeC,EAAIC,GAC1B,IAAIN,EAAGO,EAAMC,EAAIC,EACjB,IAAKJ,IAAOC,GAAMD,EAAGF,SAAWG,EAAGH,OACjC,OAAO,EAET,IAAKH,EAAI,EAAGO,EAAOF,EAAGF,OAAQH,EAAIO,IAAQP,EAGxC,GAFAQ,EAAKH,EAAGL,GACRS,EAAKH,EAAGN,GACJQ,EAAGE,eAAiBD,EAAGC,cAAgBF,EAAGG,QAAUF,EAAGE,MACzD,OAAO,EAGX,OAAO,CACT,CACA,SAASC,EAAQC,GACf,GAAIxC,EAAQwC,GACV,OAAOA,EAAOC,IAAIF,GAEpB,GAAI/B,EAASgC,GAAS,CACpB,MAAME,EAASvC,OAAOwC,OAAO,MACvBd,EAAO1B,OAAO0B,KAAKW,GACnBI,EAAOf,EAAKC,OAClB,IAAIe,EAAI,EACR,KAAOA,EAAID,IAAQC,EACjBH,EAAOb,EAAKgB,IAAMN,EAAQC,EAAOX,EAAKgB,KAExC,OAAOH,CACT,CACA,OAAOF,CACT,CACA,SAASM,EAAWC,GAClB,OAAmE,IAA5D,CAAC,YAAa,YAAa,eAAeC,QAAQD,EAC3D,CACA,SAASE,EAAQF,EAAKL,EAAQF,EAAQU,GACpC,IAAKJ,EAAWC,GACd,OAEF,MAAMI,EAAOT,EAAOK,GACdK,EAAOZ,EAAOO,GAChBvC,EAAS2C,IAAS3C,EAAS4C,GAC7BC,EAAMF,EAAMC,EAAMF,GAElBR,EAAOK,GAAOR,EAAQa,EAE1B,CACA,SAASC,EAAMX,EAAQF,EAAQU,GAC7B,MAAMI,EAAUtD,EAAQwC,GAAUA,EAAS,CAACA,GACtCN,EAAOoB,EAAQxB,OACrB,IAAKtB,EAASkC,GACZ,OAAOA,EAGT,MAAMa,GADNL,EAAUA,GAAW,CAAC,GACCK,QAAUN,EACjC,IAAK,IAAItB,EAAI,EAAGA,EAAIO,IAAQP,EAAG,CAE7B,IAAKnB,EADLgC,EAASc,EAAQ3B,IAEf,SAEF,MAAME,EAAO1B,OAAO0B,KAAKW,GACzB,IAAK,IAAIK,EAAI,EAAGD,EAAOf,EAAKC,OAAQe,EAAID,IAAQC,EAC9CU,EAAO1B,EAAKgB,GAAIH,EAAQF,EAAQU,EAEpC,CACA,OAAOR,CACT,CACA,SAASc,EAAQd,EAAQF,GACvB,OAAOa,EAAMX,EAAQF,EAAQ,CAACe,OAAQE,GACxC,CACA,SAASA,EAAUV,EAAKL,EAAQF,GAC9B,IAAKM,EAAWC,GACd,OAEF,MAAMI,EAAOT,EAAOK,GACdK,EAAOZ,EAAOO,GAChBvC,EAAS2C,IAAS3C,EAAS4C,GAC7BI,EAAQL,EAAMC,GACJjD,OAAOC,UAAUsD,eAAepD,KAAKoC,EAAQK,KACvDL,EAAOK,GAAOR,EAAQa,GAE1B,CAOA,MAAMO,EAAe,CACnB,GAAIC,GAAKA,EACTC,EAAGC,GAAKA,EAAED,EACVE,EAAGD,GAAKA,EAAEC,GAEZ,SAASC,EAAiBC,EAAKlB,GAC7B,MAAMmB,EAAWP,EAAaZ,KAASY,EAAaZ,GAGtD,SAAyBA,GACvB,MAAMlB,EAWR,SAAmBkB,GACjB,MAAMoB,EAAQpB,EAAIqB,MAAM,KAClBvC,EAAO,GACb,IAAIwC,EAAM,GACV,IAAK,MAAMC,KAAQH,EACjBE,GAAOC,EACHD,EAAIpD,SAAS,MACfoD,EAAMA,EAAI9D,MAAM,GAAI,GAAK,KAEzBsB,EAAK0C,KAAKF,GACVA,EAAM,IAGV,OAAOxC,CACT,CAzBe2C,CAAUzB,GACvB,OAAOkB,IACL,IAAK,MAAMpB,KAAKhB,EAAM,CACpB,GAAU,KAANgB,EACF,MAEFoB,EAAMA,GAAOA,EAAIpB,EACnB,CACA,OAAOoB,CAAG,CAEd,CAd6DQ,CAAgB1B,IAC3E,OAAOmB,EAASD,EAClB,CA4BA,SAASS,EAAYC,GACnB,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIpE,MAAM,EACjD,CACA,MAAMuE,EAAW/E,GAA2B,qBAAVA,EAC5BgF,EAAchF,GAA2B,oBAAVA,EAC/BiF,EAAYA,CAACC,EAAGC,KACpB,GAAID,EAAEE,OAASD,EAAEC,KACf,OAAO,EAET,IAAK,MAAMC,KAAQH,EACjB,IAAKC,EAAEG,IAAID,GACT,OAAO,EAGX,OAAO,CAAI,EAMb,MAAME,EAAKC,KAAKD,GACVE,EAAM,EAAIF,EACVG,EAAQD,EAAMF,EACdI,EAAWhF,OAAOiF,kBAClBC,EAAcN,EAAK,IACnBO,EAAUP,EAAK,EACfQ,EAAaR,EAAK,EAClBS,EAAqB,EAALT,EAAS,EACzBU,EAAQT,KAAKS,MACbC,EAAOV,KAAKU,KAClB,SAASC,EAAQC,GACf,MAAMC,EAAeb,KAAKc,MAAMF,GAChCA,EAAQG,EAAaH,EAAOC,EAAcD,EAAQ,KAAQC,EAAeD,EACzE,MAAMI,EAAYhB,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMG,KAC1CO,EAAWP,EAAQI,EAEzB,OADqBG,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAIA,GAAY,EAAI,EAAI,IAC3DH,CACxB,CAiBA,SAASI,EAASC,GAChB,OAAQC,MAAM3F,WAAW0F,KAAOjG,SAASiG,EAC3C,CACA,SAASN,EAAazC,EAAGE,EAAG+C,GAC1B,OAAOvB,KAAKwB,IAAIlD,EAAIE,GAAK+C,CAC3B,CAKA,SAASE,EAAmBC,EAAOvE,EAAQwE,GACzC,IAAIvF,EAAGO,EAAMnC,EACb,IAAK4B,EAAI,EAAGO,EAAO+E,EAAMnF,OAAQH,EAAIO,EAAMP,IACzC5B,EAAQkH,EAAMtF,GAAGuF,GACZL,MAAM9G,KACT2C,EAAOyE,IAAM5B,KAAK4B,IAAIzE,EAAOyE,IAAKpH,GAClC2C,EAAO0E,IAAM7B,KAAK6B,IAAI1E,EAAO0E,IAAKrH,GAGxC,CACA,SAASsH,EAAUC,GACjB,OAAOA,GAAWhC,EAAK,IACzB,CACA,SAASiC,EAAUC,GACjB,OAAOA,GAAW,IAAMlC,EAC1B,CACA,SAASmC,EAAe5D,GACtB,IAAKpD,EAAeoD,GAClB,OAEF,IAAI6D,EAAI,EACJC,EAAI,EACR,KAAOpC,KAAKc,MAAMxC,EAAI6D,GAAKA,IAAM7D,GAC/B6D,GAAK,GACLC,IAEF,OAAOA,CACT,CACA,SAASC,EAAkBC,EAAaC,GACtC,MAAMC,EAAsBD,EAAWjE,EAAIgE,EAAYhE,EACjDmE,EAAsBF,EAAW/D,EAAI8D,EAAY9D,EACjDkE,EAA2B1C,KAAK2C,KAAKH,EAAsBA,EAAsBC,EAAsBA,GAC7G,IAAIG,EAAQ5C,KAAK6C,MAAMJ,EAAqBD,GAI5C,OAHII,GAAU,GAAM7C,IAClB6C,GAAS3C,GAEJ,CACL2C,QACAE,SAAUJ,EAEd,CACA,SAASK,EAAsBC,EAAKC,GAClC,OAAOjD,KAAK2C,KAAK3C,KAAKiB,IAAIgC,EAAI3E,EAAI0E,EAAI1E,EAAG,GAAK0B,KAAKiB,IAAIgC,EAAIzE,EAAIwE,EAAIxE,EAAG,GACxE,CACA,SAAS0E,EAAWxD,EAAGC,GACrB,OAAQD,EAAIC,EAAIO,GAASD,EAAMF,CACjC,CACA,SAASoD,EAAgBzD,GACvB,OAAQA,EAAIO,EAAMA,GAAOA,CAC3B,CACA,SAASmD,EAAcR,EAAOS,EAAOC,EAAKC,GACxC,MAAM7D,EAAIyD,EAAgBP,GACpBY,EAAIL,EAAgBE,GACpBlB,EAAIgB,EAAgBG,GACpBG,EAAeN,EAAgBK,EAAI9D,GACnCgE,EAAaP,EAAgBhB,EAAIzC,GACjCiE,EAAeR,EAAgBzD,EAAI8D,GACnCI,EAAaT,EAAgBzD,EAAIyC,GACvC,OAAOzC,IAAM8D,GAAK9D,IAAMyC,GAAMoB,GAAyBC,IAAMrB,GACvDsB,EAAeC,GAAcC,EAAeC,CACpD,CACA,SAASC,EAAYrJ,EAAOoH,EAAKC,GAC/B,OAAO7B,KAAK6B,IAAID,EAAK5B,KAAK4B,IAAIC,EAAKrH,GACrC,CAIA,SAASsJ,EAAWtJ,EAAO6I,EAAOC,GAAqB,IAAhB/B,EAAOwC,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC/C,OAAOvJ,GAASwF,KAAK4B,IAAIyB,EAAOC,GAAO/B,GAAW/G,GAASwF,KAAK6B,IAAIwB,EAAOC,GAAO/B,CACpF,CAEA,SAAS0C,EAAQC,EAAO1J,EAAO2J,GAC7BA,EAAMA,GAAO,CAAEpH,GAAUmH,EAAMnH,GAASvC,GACxC,IAEI4J,EAFAC,EAAKH,EAAM3H,OAAS,EACpB+H,EAAK,EAET,KAAOD,EAAKC,EAAK,GACfF,EAAOE,EAAKD,GAAO,EACfF,EAAIC,GACNE,EAAKF,EAELC,EAAKD,EAGT,MAAO,CAACE,KAAID,KACd,CACA,MAAME,EAAeA,CAACL,EAAO1G,EAAKhD,EAAOgK,IACvCP,EAAQC,EAAO1J,EAAOgK,EAClBzH,GAASmH,EAAMnH,GAAOS,IAAQhD,EAC9BuC,GAASmH,EAAMnH,GAAOS,GAAOhD,GAC7BiK,EAAgBA,CAACP,EAAO1G,EAAKhD,IACjCyJ,EAAQC,EAAO1J,GAAOuC,GAASmH,EAAMnH,GAAOS,IAAQhD,IActD,MAAMkK,EAAc,CAAC,OAAQ,MAAO,QAAS,SAAU,WA+BvD,SAASC,EAAoBjD,EAAOkD,GAClC,MAAMC,EAAOnD,EAAMoD,SACnB,IAAKD,EACH,OAEF,MAAME,EAAYF,EAAKE,UACjBhI,EAAQgI,EAAUtH,QAAQmH,IACjB,IAAX7H,GACFgI,EAAUC,OAAOjI,EAAO,GAEtBgI,EAAUxI,OAAS,IAGvBmI,EAAYO,SAASzH,WACZkE,EAAMlE,EAAI,WAEZkE,EAAMoD,SACf,CACA,SAASI,EAAaC,GACpB,MAAMC,EAAM,IAAIC,IAChB,IAAIjJ,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAOwI,EAAM5I,OAAQH,EAAIO,IAAQP,EAC3CgJ,EAAIE,IAAIH,EAAM/I,IAEhB,OAAIgJ,EAAIxF,OAASjD,EACRwI,EAEFzK,MAAM6K,KAAKH,EACpB,CAKA,MAAMI,EACkB,qBAAXC,OACF,SAAS7J,GACd,OAAOA,GACT,EAEK6J,OAAOC,sBAEhB,SAASC,GAAU9J,EAAIE,EAAS6J,GAC9B,MAAMC,EAAaD,GAAY,CAAE9J,GAASpB,MAAMG,UAAUG,MAAMD,KAAKe,IACrE,IAAIgK,GAAU,EACVhK,EAAO,GACX,OAAO,WAAkB,QAAAiK,EAAAhC,UAAAxH,OAANyJ,EAAI,IAAAtL,MAAAqL,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAlC,UAAAkC,GACrBnK,EAAO+J,EAAWG,GACbF,IACHA,GAAU,EACVN,EAAiBzK,KAAK0K,QAAQ,KAC5BK,GAAU,EACVjK,EAAGG,MAAMD,EAASD,EAAK,IAG7B,CACF,CAaA,MAAMoK,GAAsBC,GAAoB,UAAVA,EAAoB,OAAmB,QAAVA,EAAkB,QAAU,SACzFC,GAAiBA,CAACD,EAAO9C,EAAOC,IAAkB,UAAV6C,EAAoB9C,EAAkB,QAAV8C,EAAkB7C,GAAOD,EAAQC,GAAO,EAKlH,SAAS+C,GAAiCC,EAAMC,EAAQC,GACtD,MAAMC,EAAaF,EAAOhK,OAC1B,IAAI8G,EAAQ,EACRqD,EAAQD,EACZ,GAAIH,EAAKK,QAAS,CAChB,MAAM,OAACC,EAAM,QAAEC,GAAWP,EACpBQ,EAAOF,EAAOE,MACd,IAAClF,EAAG,IAAEC,EAAG,WAAEkF,EAAU,WAAEC,GAAcJ,EAAOK,gBAC9CF,IACF1D,EAAQQ,EAAY7D,KAAK4B,IACvB2C,EAAasC,EAASD,EAAOE,KAAMlF,GAAK0C,GACxCkC,EAAqBC,EAAalC,EAAagC,EAAQO,EAAMF,EAAOM,iBAAiBtF,IAAM0C,IAC7F,EAAGmC,EAAa,IAGhBC,EADEM,EACMnD,EAAY7D,KAAK6B,IACvB0C,EAAasC,EAASD,EAAOE,KAAMjF,GAAK,GAAMwC,GAAK,EACnDmC,EAAqB,EAAIjC,EAAagC,EAAQO,EAAMF,EAAOM,iBAAiBrF,IAAM,GAAMwC,GAAK,GAC/FhB,EAAOoD,GAAcpD,EAEboD,EAAapD,CAEzB,CACA,MAAO,CAACA,QAAOqD,QACjB,CACA,SAASS,GAAoBb,GAC3B,MAAM,OAACc,EAAM,OAAEC,EAAM,aAAEC,GAAgBhB,EACjCiB,EAAY,CAChBC,KAAMJ,EAAOxF,IACb6F,KAAML,EAAOvF,IACb6F,KAAML,EAAOzF,IACb+F,KAAMN,EAAOxF,KAEf,IAAKyF,EAEH,OADAhB,EAAKgB,aAAeC,GACb,EAET,MAAMK,EAAUN,EAAaE,OAASJ,EAAOxF,KAC1C0F,EAAaG,OAASL,EAAOvF,KAC7ByF,EAAaI,OAASL,EAAOzF,KAC7B0F,EAAaK,OAASN,EAAOxF,IAEhC,OADAjH,OAAOiN,OAAOP,EAAcC,GACrBK,CACT,CAEA,MAAME,GAAUC,GAAY,IAANA,GAAiB,IAANA,EAC3BC,GAAYA,CAACD,EAAGvE,EAAGpB,KAAQpC,KAAKiB,IAAI,EAAG,IAAM8G,GAAK,IAAM/H,KAAKiI,KAAKF,EAAIvE,GAAKvD,EAAMmC,GACjF8F,GAAaA,CAACH,EAAGvE,EAAGpB,IAAMpC,KAAKiB,IAAI,GAAI,GAAK8G,GAAK/H,KAAKiI,KAAKF,EAAIvE,GAAKvD,EAAMmC,GAAK,EAC/E+F,GAAU,CACdC,OAAQL,GAAKA,EACbM,WAAYN,GAAKA,EAAIA,EACrBO,YAAaP,IAAMA,GAAKA,EAAI,GAC5BQ,cAAeR,IAAOA,GAAK,IAAO,EAC9B,GAAMA,EAAIA,GACT,MAAUA,GAAMA,EAAI,GAAK,GAC9BS,YAAaT,GAAKA,EAAIA,EAAIA,EAC1BU,aAAcV,IAAMA,GAAK,GAAKA,EAAIA,EAAI,EACtCW,eAAgBX,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EACd,KAAQA,GAAK,GAAKA,EAAIA,EAAI,GAC9BY,YAAaZ,GAAKA,EAAIA,EAAIA,EAAIA,EAC9Ba,aAAcb,MAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAC5Cc,eAAgBd,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,GACjB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GACnCe,YAAaf,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAClCgB,aAAchB,IAAMA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,EAC9CiB,eAAgBjB,IAAOA,GAAK,IAAO,EAC/B,GAAMA,EAAIA,EAAIA,EAAIA,EAAIA,EACtB,KAAQA,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GACtCkB,WAAYlB,GAA8B,EAAxB/H,KAAKkJ,IAAInB,EAAIzH,GAC/B6I,YAAapB,GAAK/H,KAAKiI,IAAIF,EAAIzH,GAC/B8I,cAAerB,IAAM,IAAO/H,KAAKkJ,IAAInJ,EAAKgI,GAAK,GAC/CsB,WAAYtB,GAAY,IAANA,EAAW,EAAI/H,KAAKiB,IAAI,EAAG,IAAM8G,EAAI,IACvDuB,YAAavB,GAAY,IAANA,EAAW,EAA4B,EAAvB/H,KAAKiB,IAAI,GAAI,GAAK8G,GACrDwB,cAAexB,GAAKD,GAAOC,GAAKA,EAAIA,EAAI,GACpC,GAAM/H,KAAKiB,IAAI,EAAG,IAAU,EAAJ8G,EAAQ,IAChC,IAAyC,EAAjC/H,KAAKiB,IAAI,GAAI,IAAU,EAAJ8G,EAAQ,KACvCyB,WAAYzB,GAAMA,GAAK,EAAKA,IAAM/H,KAAK2C,KAAK,EAAIoF,EAAIA,GAAK,GACzD0B,YAAa1B,GAAK/H,KAAK2C,KAAK,GAAKoF,GAAK,GAAKA,GAC3C2B,cAAe3B,IAAOA,GAAK,IAAO,GAC7B,IAAO/H,KAAK2C,KAAK,EAAIoF,EAAIA,GAAK,GAC/B,IAAO/H,KAAK2C,KAAK,GAAKoF,GAAK,GAAKA,GAAK,GACzC4B,cAAe5B,GAAKD,GAAOC,GAAKA,EAAIC,GAAUD,EAAG,KAAO,IACxD6B,eAAgB7B,GAAKD,GAAOC,GAAKA,EAAIG,GAAWH,EAAG,KAAO,IAC1D8B,gBAAAA,CAAiB9B,GACf,MAAMvE,EAAI,MAEV,OAAOsE,GAAOC,GAAKA,EACjBA,EAAI,GACA,GAAMC,GAAc,EAAJD,EAAOvE,EAHnB,KAIJ,GAAM,GAAM0E,GAAe,EAAJH,EAAQ,EAAGvE,EAJ9B,IAKZ,EACAsG,UAAAA,CAAW/B,GACT,MAAMvE,EAAI,QACV,OAAOuE,EAAIA,IAAMvE,EAAI,GAAKuE,EAAIvE,EAChC,EACAuG,WAAAA,CAAYhC,GACV,MAAMvE,EAAI,QACV,OAAQuE,GAAK,GAAKA,IAAMvE,EAAI,GAAKuE,EAAIvE,GAAK,CAC5C,EACAwG,aAAAA,CAAcjC,GACZ,IAAIvE,EAAI,QACR,OAAKuE,GAAK,IAAO,EACDA,EAAIA,IAAuB,GAAhBvE,GAAM,QAAeuE,EAAIvE,GAA3C,GAEF,KAAQuE,GAAK,GAAKA,IAAuB,GAAhBvE,GAAM,QAAeuE,EAAIvE,GAAK,EAChE,EACAyG,aAAclC,GAAK,EAAII,GAAQ+B,cAAc,EAAInC,GACjDmC,aAAAA,CAAcnC,GACZ,MAAMoC,EAAI,OACJC,EAAI,KACV,OAAIrC,EAAK,EAAIqC,EACJD,EAAIpC,EAAIA,EAEbA,EAAK,EAAIqC,EACJD,GAAKpC,GAAM,IAAMqC,GAAMrC,EAAI,IAEhCA,EAAK,IAAMqC,EACND,GAAKpC,GAAM,KAAOqC,GAAMrC,EAAI,MAE9BoC,GAAKpC,GAAM,MAAQqC,GAAMrC,EAAI,OACtC,EACAsC,gBAAiBtC,GAAMA,EAAI,GACO,GAA9BI,GAAQ8B,aAAiB,EAAJlC,GACc,GAAnCI,GAAQ+B,cAAkB,EAAJnC,EAAQ,GAAW,IAS/C,SAASjH,GAAMzC,GACb,OAAOA,EAAI,GAAM,CACnB,CACA,MAAMiM,GAAMA,CAACjM,EAAGkM,EAAGC,IAAMxK,KAAK6B,IAAI7B,KAAK4B,IAAIvD,EAAGmM,GAAID,GAClD,SAASE,GAAIpM,GACX,OAAOiM,GAAIxJ,GAAU,KAAJzC,GAAW,EAAG,IACjC,CACA,SAASqM,GAAIrM,GACX,OAAOiM,GAAIxJ,GAAU,IAAJzC,GAAU,EAAG,IAChC,CACA,SAASsM,GAAItM,GACX,OAAOiM,GAAIxJ,GAAMzC,EAAI,MAAQ,IAAK,EAAG,EACvC,CACA,SAASuM,GAAIvM,GACX,OAAOiM,GAAIxJ,GAAU,IAAJzC,GAAU,EAAG,IAChC,CACA,MAAMwM,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIzL,EAAG,GAAIC,EAAG,GAAIyL,EAAG,GAAIhB,EAAG,GAAIjI,EAAG,GAAIkJ,EAAG,IACrJC,GAAM,IAAI,oBACVC,GAAK5L,GAAK2L,GAAQ,GAAJ3L,GACd6L,GAAK7L,GAAK2L,IAAS,IAAJ3L,IAAa,GAAK2L,GAAQ,GAAJ3L,GACrC8L,GAAK9L,IAAW,IAAJA,IAAa,KAAY,GAAJA,GAyBvC,SAAS+L,GAAUrN,GACjB,IAAIgN,EAzBUhN,IAAKoN,GAAGpN,EAAEsN,IAAMF,GAAGpN,EAAEuN,IAAMH,GAAGpN,EAAEsB,IAAM8L,GAAGpN,EAAEqB,GAyBjDmM,CAAQxN,GAAKkN,GAAKC,GAC1B,OAAOnN,EACH,IAAMgN,EAAEhN,EAAEsN,GAAKN,EAAEhN,EAAEuN,GAAKP,EAAEhN,EAAEsB,GAJpBmM,EAACpM,EAAG2L,IAAM3L,EAAI,IAAM2L,EAAE3L,GAAK,GAIFoM,CAAMzN,EAAEqB,EAAG2L,QAC5CrH,CACN,CACA,MAAM+H,GAAS,+GACf,SAASC,GAASxB,EAAGhH,EAAG+G,GACtB,MAAM7K,EAAI8D,EAAIxD,KAAK4B,IAAI2I,EAAG,EAAIA,GACxBc,EAAI,SAAChK,GAAC,IAAE/D,EAACyG,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,IAAI1C,EAAImJ,EAAI,IAAM,GAAE,OAAKD,EAAI7K,EAAIM,KAAK6B,IAAI7B,KAAK4B,IAAItE,EAAI,EAAG,EAAIA,EAAG,IAAK,EAAE,EACvF,MAAO,CAAC+N,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASY,GAASzB,EAAGhH,EAAGnF,GACtB,MAAMgN,EAAI,SAAChK,GAAC,IAAE/D,EAACyG,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,IAAI1C,EAAImJ,EAAI,IAAM,EAAC,OAAKnM,EAAIA,EAAImF,EAAIxD,KAAK6B,IAAI7B,KAAK4B,IAAItE,EAAG,EAAIA,EAAG,GAAI,EAAE,EACrF,MAAO,CAAC+N,EAAE,GAAIA,EAAE,GAAIA,EAAE,GACxB,CACA,SAASa,GAAS1B,EAAG2B,EAAGxM,GACtB,MAAMyM,EAAMJ,GAASxB,EAAG,EAAG,IAC3B,IAAIpO,EAMJ,IALI+P,EAAIxM,EAAI,IACVvD,EAAI,GAAK+P,EAAIxM,GACbwM,GAAK/P,EACLuD,GAAKvD,GAEFA,EAAI,EAAGA,EAAI,EAAGA,IACjBgQ,EAAIhQ,IAAM,EAAI+P,EAAIxM,EAClByM,EAAIhQ,IAAM+P,EAEZ,OAAOC,CACT,CAUA,SAASC,GAAQhO,GACf,MACMsN,EAAItN,EAAEsN,EADE,IAERC,EAAIvN,EAAEuN,EAFE,IAGRjM,EAAItB,EAAEsB,EAHE,IAIRkC,EAAM7B,KAAK6B,IAAI8J,EAAGC,EAAGjM,GACrBiC,EAAM5B,KAAK4B,IAAI+J,EAAGC,EAAGjM,GACrB4K,GAAK1I,EAAMD,GAAO,EACxB,IAAI4I,EAAGhH,EAAG4G,EAOV,OANIvI,IAAQD,IACVwI,EAAIvI,EAAMD,EACV4B,EAAI+G,EAAI,GAAMH,GAAK,EAAIvI,EAAMD,GAAOwI,GAAKvI,EAAMD,GAC/C4I,EArBJ,SAAkBmB,EAAGC,EAAGjM,EAAGyK,EAAGvI,GAC5B,OAAI8J,IAAM9J,GACC+J,EAAIjM,GAAKyK,GAAMwB,EAAIjM,EAAI,EAAI,GAElCiM,IAAM/J,GACAlC,EAAIgM,GAAKvB,EAAI,GAEfuB,EAAIC,GAAKxB,EAAI,CACvB,CAaQkC,CAASX,EAAGC,EAAGjM,EAAGyK,EAAGvI,GACzB2I,EAAQ,GAAJA,EAAS,IAER,CAAK,EAAJA,EAAOhH,GAAK,EAAG+G,EACzB,CACA,SAASgC,GAAMlB,EAAG3L,EAAGC,EAAGyL,GACtB,OACE1Q,MAAMD,QAAQiF,GACV2L,EAAE3L,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAChB2L,EAAE3L,EAAGC,EAAGyL,IACZlO,IAAIwN,GACR,CACA,SAAS8B,GAAQhC,EAAGhH,EAAG+G,GACrB,OAAOgC,GAAMP,GAAUxB,EAAGhH,EAAG+G,EAC/B,CAOA,SAASkC,GAAIjC,GACX,OAAQA,EAAI,IAAM,KAAO,GAC3B,CACA,SAASkC,GAAStN,GAChB,MAAM+K,EAAI4B,GAAOY,KAAKvN,GACtB,IACIf,EADAqB,EAAI,IAER,IAAKyK,EACH,OAEEA,EAAE,KAAO9L,IACXqB,EAAIyK,EAAE,GAAKM,IAAKN,EAAE,IAAMO,IAAKP,EAAE,KAEjC,MAAMK,EAAIiC,IAAKtC,EAAE,IACXyC,GAAMzC,EAAE,GAAK,IACb0C,GAAM1C,EAAE,GAAK,IAQnB,OANE9L,EADW,QAAT8L,EAAE,GAtBR,SAAiBK,EAAG2B,EAAGxM,GACrB,OAAO4M,GAAML,GAAU1B,EAAG2B,EAAGxM,EAC/B,CAqBQmN,CAAQtC,EAAGoC,EAAIC,GACD,QAAT1C,EAAE,GArBf,SAAiBK,EAAGhH,EAAGnF,GACrB,OAAOkO,GAAMN,GAAUzB,EAAGhH,EAAGnF,EAC/B,CAoBQ0O,CAAQvC,EAAGoC,EAAIC,GAEfL,GAAQhC,EAAGoC,EAAIC,GAEd,CACLlB,EAAGtN,EAAE,GACLuN,EAAGvN,EAAE,GACLsB,EAAGtB,EAAE,GACLqB,EAAGA,EAEP,CAqBA,MAAMxC,GAAM,CACVoB,EAAG,OACH0O,EAAG,QACHC,EAAG,KACHC,EAAG,MACHC,EAAG,KACHC,EAAG,SACHC,EAAG,QACHvC,EAAG,KACHwC,EAAG,KACHC,EAAG,KACHxC,EAAG,KACHC,EAAG,QACHC,EAAG,QACHuC,EAAG,KACHC,EAAG,WACHvC,EAAG,KACHwC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,QACH3C,EAAG,KACH4C,EAAG,KACHC,EAAG,OACHC,EAAG,KACHC,EAAG,QACHC,EAAG,MAECC,GAAU,CACdC,OAAQ,SACRC,YAAa,SACbC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,IACPC,aAAc,SACdC,GAAI,KACJC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,YAAa,SACbC,QAAS,SACTC,QAAS,SACTC,KAAM,OACNC,IAAK,KACLC,MAAO,OACPC,QAAS,SACTC,KAAM,SACNC,KAAM,OACNC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,SAAU,OACVC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,IAAK,SACLC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,IAAK,SACLC,KAAM,OACNC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,IAAK,KACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,UAAW,OACXC,IAAK,SACLC,SAAU,SACVC,WAAY,SACZC,QAAS,SACTC,SAAU,SACVC,QAAS,SACTC,WAAY,SACZC,KAAM,KACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,UAAW,SACXC,QAAS,SACTC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,YAAa,SACbC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,SAAU,OACVC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,GAAI,SACJC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,UAAW,SACXC,GAAI,SACJC,MAAO,UAkBT,IAAIC,GACJ,SAASC,GAAUtY,GACZqY,KACHA,GAnBJ,WACE,MAAME,EAAW,CAAC,EACZrb,EAAO1B,OAAO0B,KAAK8R,IACnBwJ,EAAQhd,OAAO0B,KAAKY,IAC1B,IAAId,EAAGyb,EAAGva,EAAGwa,EAAIC,EACjB,IAAK3b,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAAK,CAEhC,IADA0b,EAAKC,EAAKzb,EAAKF,GACVyb,EAAI,EAAGA,EAAID,EAAMrb,OAAQsb,IAC5Bva,EAAIsa,EAAMC,GACVE,EAAKA,EAAGC,QAAQ1a,EAAGJ,GAAII,IAEzBA,EAAI2a,SAAS7J,GAAQ0J,GAAK,IAC1BH,EAASI,GAAM,CAACza,GAAK,GAAK,IAAMA,GAAK,EAAI,IAAU,IAAJA,EACjD,CACA,OAAOqa,CACT,CAIYO,GACRT,GAAMU,YAAc,CAAC,EAAG,EAAG,EAAG,IAEhC,MAAMzY,EAAI+X,GAAMrY,EAAIgZ,eACpB,OAAO1Y,GAAK,CACViM,EAAGjM,EAAE,GACLkM,EAAGlM,EAAE,GACLC,EAAGD,EAAE,GACLA,EAAgB,IAAbA,EAAEnD,OAAemD,EAAE,GAAK,IAE/B,CACA,MAAM2Y,GAAS,uGAgCf,MAAMC,GAAKja,GAAKA,GAAK,SAAgB,MAAJA,EAAqC,MAAzB2B,KAAKiB,IAAI5C,EAAG,EAAM,KAAe,KACxEkH,GAAOlH,GAAKA,GAAK,OAAUA,EAAI,MAAQ2B,KAAKiB,KAAK5C,EAAI,MAAS,MAAO,KAY3E,SAASka,GAAOla,EAAGjC,EAAGoc,GACpB,GAAIna,EAAG,CACL,IAAIS,EAAMuN,GAAQhO,GAClBS,EAAI1C,GAAK4D,KAAK6B,IAAI,EAAG7B,KAAK4B,IAAI9C,EAAI1C,GAAK0C,EAAI1C,GAAKoc,EAAa,IAANpc,EAAU,IAAM,IACvE0C,EAAM0N,GAAQ1N,GACdT,EAAEsN,EAAI7M,EAAI,GACVT,EAAEuN,EAAI9M,EAAI,GACVT,EAAEsB,EAAIb,EAAI,EACZ,CACF,CACA,SAAS2Z,GAAMpa,EAAGqa,GAChB,OAAOra,EAAIzD,OAAOiN,OAAO6Q,GAAS,CAAC,EAAGra,GAAKA,CAC7C,CACA,SAASsa,GAAWC,GAClB,IAAIva,EAAI,CAACsN,EAAG,EAAGC,EAAG,EAAGjM,EAAG,EAAGD,EAAG,KAY9B,OAXIhF,MAAMD,QAAQme,GACZA,EAAMrc,QAAU,IAClB8B,EAAI,CAACsN,EAAGiN,EAAM,GAAIhN,EAAGgN,EAAM,GAAIjZ,EAAGiZ,EAAM,GAAIlZ,EAAG,KAC3CkZ,EAAMrc,OAAS,IACjB8B,EAAEqB,EAAIgL,GAAIkO,EAAM,OAIpBva,EAAIoa,GAAMG,EAAO,CAACjN,EAAG,EAAGC,EAAG,EAAGjM,EAAG,EAAGD,EAAG,KACrCA,EAAIgL,GAAIrM,EAAEqB,GAEPrB,CACT,CACA,SAASwa,GAAczZ,GACrB,MAAsB,MAAlBA,EAAIC,OAAO,GAzEjB,SAAkBD,GAChB,MAAM+K,EAAIkO,GAAO1L,KAAKvN,GACtB,IACIuM,EAAGC,EAAGjM,EADND,EAAI,IAER,GAAKyK,EAAL,CAGA,GAAIA,EAAE,KAAOwB,EAAG,CACd,MAAMtN,GAAK8L,EAAE,GACbzK,EAAIyK,EAAE,GAAKM,GAAIpM,GAAKiM,GAAQ,IAAJjM,EAAS,EAAG,IACtC,CAOA,OANAsN,GAAKxB,EAAE,GACPyB,GAAKzB,EAAE,GACPxK,GAAKwK,EAAE,GACPwB,EAAI,KAAOxB,EAAE,GAAKM,GAAIkB,GAAKrB,GAAIqB,EAAG,EAAG,MACrCC,EAAI,KAAOzB,EAAE,GAAKM,GAAImB,GAAKtB,GAAIsB,EAAG,EAAG,MACrCjM,EAAI,KAAOwK,EAAE,GAAKM,GAAI9K,GAAK2K,GAAI3K,EAAG,EAAG,MAC9B,CACLgM,EAAGA,EACHC,EAAGA,EACHjM,EAAGA,EACHD,EAAGA,EAfL,CAiBF,CAmDWoZ,CAAS1Z,GAEXsN,GAAStN,EAClB,CACA,MAAM2Z,GACJC,WAAAA,CAAYJ,GACV,GAAIA,aAAiBG,GACnB,OAAOH,EAET,MAAMje,SAAcie,EACpB,IAAIva,EACS,WAAT1D,EACF0D,EAAIsa,GAAWC,GACG,WAATje,IACT0D,EA3bN,SAAkBe,GAChB,IACI6Z,EADA5c,EAAM+C,EAAI7C,OAmBd,MAjBe,MAAX6C,EAAI,KACM,IAAR/C,GAAqB,IAARA,EACf4c,EAAM,CACJtN,EAAG,IAAsB,GAAhBd,GAAMzL,EAAI,IACnBwM,EAAG,IAAsB,GAAhBf,GAAMzL,EAAI,IACnBO,EAAG,IAAsB,GAAhBkL,GAAMzL,EAAI,IACnBM,EAAW,IAARrD,EAA4B,GAAhBwO,GAAMzL,EAAI,IAAW,KAErB,IAAR/C,GAAqB,IAARA,IACtB4c,EAAM,CACJtN,EAAGd,GAAMzL,EAAI,KAAO,EAAIyL,GAAMzL,EAAI,IAClCwM,EAAGf,GAAMzL,EAAI,KAAO,EAAIyL,GAAMzL,EAAI,IAClCO,EAAGkL,GAAMzL,EAAI,KAAO,EAAIyL,GAAMzL,EAAI,IAClCM,EAAW,IAARrD,EAAawO,GAAMzL,EAAI,KAAO,EAAIyL,GAAMzL,EAAI,IAAO,OAIrD6Z,CACT,CAsaUC,CAASN,IAAUlB,GAAUkB,IAAUC,GAAcD,IAE3DO,KAAKC,KAAO/a,EACZ8a,KAAKE,SAAWhb,CAClB,CACA,SAAIib,GACF,OAAOH,KAAKE,MACd,CACA,OAAIjN,GACF,IAAI/N,EAAIoa,GAAMU,KAAKC,MAInB,OAHI/a,IACFA,EAAEqB,EAAIiL,GAAItM,EAAEqB,IAEPrB,CACT,CACA,OAAI+N,CAAI1N,GACNya,KAAKC,KAAOT,GAAWja,EACzB,CACA6a,SAAAA,GACE,OAAOJ,KAAKE,QAnFGhb,EAmFgB8a,KAAKC,QAjFpC/a,EAAEqB,EAAI,IAAG,QAAA8Z,OACGnb,EAAEsN,EAAC,MAAA6N,OAAKnb,EAAEuN,EAAC,MAAA4N,OAAKnb,EAAEsB,EAAC,MAAA6Z,OAAK7O,GAAItM,EAAEqB,GAAE,YAAA8Z,OACjCnb,EAAEsN,EAAC,MAAA6N,OAAKnb,EAAEuN,EAAC,MAAA4N,OAAKnb,EAAEsB,EAAC,WA+EcqE,EAnFhD,IAAmB3F,CAoFjB,CACAqN,SAAAA,GACE,OAAOyN,KAAKE,OAAS3N,GAAUyN,KAAKC,WAAQpV,CAC9C,CACAyV,SAAAA,GACE,OAAON,KAAKE,OA/UhB,SAAmBhb,GACjB,IAAKA,EACH,OAEF,MAAMqB,EAAI2M,GAAQhO,GACZmM,EAAI9K,EAAE,GACN8D,EAAIoH,GAAIlL,EAAE,IACV6K,EAAIK,GAAIlL,EAAE,IAChB,OAAOrB,EAAEqB,EAAI,IAAG,QAAA8Z,OACJhP,EAAC,MAAAgP,OAAKhW,EAAC,OAAAgW,OAAMjP,EAAC,OAAAiP,OAAM7O,GAAItM,EAAEqB,GAAE,YAAA8Z,OAC7BhP,EAAC,MAAAgP,OAAKhW,EAAC,OAAAgW,OAAMjP,EAAC,KAC3B,CAoUyBkP,CAAUN,KAAKC,WAAQpV,CAC9C,CACA0V,GAAAA,CAAIC,EAAOC,GACT,GAAID,EAAO,CACT,MAAME,EAAKV,KAAK/M,IACV0N,EAAKH,EAAMvN,IACjB,IAAI2N,EACJ,MAAM3X,EAAIwX,IAAWG,EAAK,GAAMH,EAC1BzN,EAAI,EAAI/J,EAAI,EACZ1C,EAAIma,EAAGna,EAAIoa,EAAGpa,EACdsa,IAAO7N,EAAIzM,KAAO,EAAIyM,GAAKA,EAAIzM,IAAM,EAAIyM,EAAIzM,IAAM,GAAK,EAC9Dqa,EAAK,EAAIC,EACTH,EAAGlO,EAAI,IAAOqO,EAAKH,EAAGlO,EAAIoO,EAAKD,EAAGnO,EAAI,GACtCkO,EAAGjO,EAAI,IAAOoO,EAAKH,EAAGjO,EAAImO,EAAKD,EAAGlO,EAAI,GACtCiO,EAAGla,EAAI,IAAOqa,EAAKH,EAAGla,EAAIoa,EAAKD,EAAGna,EAAI,GACtCka,EAAGna,EAAI0C,EAAIyX,EAAGna,GAAK,EAAI0C,GAAK0X,EAAGpa,EAC/ByZ,KAAK/M,IAAMyN,CACb,CACA,OAAOV,IACT,CACAc,WAAAA,CAAYN,EAAO5R,GAIjB,OAHI4R,IACFR,KAAKC,KAtGX,SAAqBc,EAAMC,EAAMpS,GAC/B,MAAM4D,EAAIpG,GAAKoF,GAAIuP,EAAKvO,IAClBC,EAAIrG,GAAKoF,GAAIuP,EAAKtO,IAClBjM,EAAI4F,GAAKoF,GAAIuP,EAAKva,IACxB,MAAO,CACLgM,EAAGjB,GAAI4N,GAAG3M,EAAI5D,GAAKxC,GAAKoF,GAAIwP,EAAKxO,IAAMA,KACvCC,EAAGlB,GAAI4N,GAAG1M,EAAI7D,GAAKxC,GAAKoF,GAAIwP,EAAKvO,IAAMA,KACvCjM,EAAG+K,GAAI4N,GAAG3Y,EAAIoI,GAAKxC,GAAKoF,GAAIwP,EAAKxa,IAAMA,KACvCD,EAAGwa,EAAKxa,EAAIqI,GAAKoS,EAAKza,EAAIwa,EAAKxa,GAEnC,CA4FkBua,CAAYd,KAAKC,KAAMO,EAAMP,KAAMrR,IAE1CoR,IACT,CACAV,KAAAA,GACE,OAAO,IAAIM,GAAMI,KAAK/M,IACxB,CACAN,KAAAA,CAAMpM,GAEJ,OADAyZ,KAAKC,KAAK1Z,EAAIgL,GAAIhL,GACXyZ,IACT,CACAiB,OAAAA,CAAQ5B,GAGN,OAFYW,KAAKC,KACb1Z,GAAK,EAAI8Y,EACNW,IACT,CACAkB,SAAAA,GACE,MAAMjO,EAAM+M,KAAKC,KACXkB,EAAMxZ,GAAc,GAARsL,EAAIT,EAAkB,IAARS,EAAIR,EAAmB,IAARQ,EAAIzM,GAEnD,OADAyM,EAAIT,EAAIS,EAAIR,EAAIQ,EAAIzM,EAAI2a,EACjBnB,IACT,CACAoB,OAAAA,CAAQ/B,GAGN,OAFYW,KAAKC,KACb1Z,GAAK,EAAI8Y,EACNW,IACT,CACAqB,MAAAA,GACE,MAAMnc,EAAI8a,KAAKC,KAIf,OAHA/a,EAAEsN,EAAI,IAAMtN,EAAEsN,EACdtN,EAAEuN,EAAI,IAAMvN,EAAEuN,EACdvN,EAAEsB,EAAI,IAAMtB,EAAEsB,EACPwZ,IACT,CACAsB,OAAAA,CAAQjC,GAEN,OADAD,GAAOY,KAAKC,KAAM,EAAGZ,GACdW,IACT,CACAuB,MAAAA,CAAOlC,GAEL,OADAD,GAAOY,KAAKC,KAAM,GAAIZ,GACfW,IACT,CACAwB,QAAAA,CAASnC,GAEP,OADAD,GAAOY,KAAKC,KAAM,EAAGZ,GACdW,IACT,CACAyB,UAAAA,CAAWpC,GAET,OADAD,GAAOY,KAAKC,KAAM,GAAIZ,GACfW,IACT,CACA0B,MAAAA,CAAOC,GAEL,OAjaJ,SAAgBzc,EAAGyc,GACjB,IAAItQ,EAAI6B,GAAQhO,GAChBmM,EAAE,GAAKiC,GAAIjC,EAAE,GAAKsQ,GAClBtQ,EAAIgC,GAAQhC,GACZnM,EAAEsN,EAAInB,EAAE,GACRnM,EAAEuN,EAAIpB,EAAE,GACRnM,EAAEsB,EAAI6K,EAAE,EACV,CAyZIqQ,CAAO1B,KAAKC,KAAM0B,GACX3B,IACT,EAEF,SAAS4B,GAAUnC,GACjB,OAAO,IAAIG,GAAMH,EACnB,CAEA,SAASoC,GAAoBxgB,GAC3B,GAAIA,GAA0B,kBAAVA,EAAoB,CACtC,MAAMG,EAAOH,EAAMM,WACnB,MAAgB,2BAATH,GAA8C,4BAATA,CAC9C,CACA,OAAO,CACT,CACA,SAASgf,GAAMnf,GACb,OAAOwgB,GAAoBxgB,GAASA,EAAQugB,GAAUvgB,EACxD,CACA,SAASygB,GAAczgB,GACrB,OAAOwgB,GAAoBxgB,GACvBA,EACAugB,GAAUvgB,GAAOmgB,SAAS,IAAKD,OAAO,IAAKhP,WACjD,CAEA,MAAMwP,GAAYtgB,OAAOwC,OAAO,MAC1B+d,GAAcvgB,OAAOwC,OAAO,MAClC,SAASge,GAAWC,EAAM7d,GACxB,IAAKA,EACH,OAAO6d,EAET,MAAM/e,EAAOkB,EAAIqB,MAAM,KACvB,IAAK,IAAIzC,EAAI,EAAGiF,EAAI/E,EAAKC,OAAQH,EAAIiF,IAAKjF,EAAG,CAC3C,MAAMkB,EAAIhB,EAAKF,GACfif,EAAOA,EAAK/d,KAAO+d,EAAK/d,GAAK1C,OAAOwC,OAAO,MAC7C,CACA,OAAOie,CACT,CACA,SAASjW,GAAIkW,EAAMC,EAAOC,GACxB,MAAqB,kBAAVD,EACFzd,EAAMsd,GAAWE,EAAMC,GAAQC,GAEjC1d,EAAMsd,GAAWE,EAAM,IAAKC,EACrC,CAoFA,IAAIE,GAAW,IAnFf,MACEzC,WAAAA,CAAY0C,GACVvC,KAAKwC,eAAY3X,EACjBmV,KAAKyC,gBAAkB,kBACvBzC,KAAK0C,YAAc,kBACnB1C,KAAKQ,MAAQ,OACbR,KAAK2C,SAAW,CAAC,EACjB3C,KAAK4C,iBAAoBC,GAAYA,EAAQC,MAAMC,SAASC,sBAC5DhD,KAAKiD,SAAW,CAAC,EACjBjD,KAAKkD,OAAS,CACZ,YACA,WACA,QACA,aACA,aAEFlD,KAAKmD,KAAO,CACVC,OAAQ,qDACR3c,KAAM,GACN4c,MAAO,SACPC,WAAY,IACZ7C,OAAQ,MAEVT,KAAKuD,MAAQ,CAAC,EACdvD,KAAKwD,qBAAuB,CAACC,EAAKjf,IAAYsd,GAActd,EAAQie,iBACpEzC,KAAK0D,iBAAmB,CAACD,EAAKjf,IAAYsd,GAActd,EAAQke,aAChE1C,KAAK2D,WAAa,CAACF,EAAKjf,IAAYsd,GAActd,EAAQgc,OAC1DR,KAAK4D,UAAY,IACjB5D,KAAK6D,YAAc,CACjBC,KAAM,UACNC,WAAW,EACXC,kBAAkB,GAEpBhE,KAAKiE,qBAAsB,EAC3BjE,KAAKkE,QAAU,KACflE,KAAKmE,QAAU,KACfnE,KAAKoE,SAAU,EACfpE,KAAKqE,QAAU,CAAC,EAChBrE,KAAKsE,YAAa,EAClBtE,KAAKuE,WAAQ1Z,EACbmV,KAAKwE,OAAS,CAAC,EACfxE,KAAKyE,UAAW,EAChBzE,KAAK0E,yBAA0B,EAC/B1E,KAAK2E,SAASpC,EAChB,CACAtW,GAAAA,CAAImW,EAAOC,GACT,OAAOpW,GAAI+T,KAAMoC,EAAOC,EAC1B,CACAuC,GAAAA,CAAIxC,GACF,OAAOH,GAAWjC,KAAMoC,EAC1B,CACAuC,QAAAA,CAASvC,EAAOC,GACd,OAAOpW,GAAI+V,GAAaI,EAAOC,EACjC,CACAwC,QAAAA,CAASzC,EAAOC,GACd,OAAOpW,GAAI8V,GAAWK,EAAOC,EAC/B,CACAyC,KAAAA,CAAM1C,EAAO2C,EAAMC,EAAaC,GAC9B,MAAMC,EAAcjD,GAAWjC,KAAMoC,GAC/B+C,EAAoBlD,GAAWjC,KAAMgF,GACrCI,EAAc,IAAML,EAC1BtjB,OAAO4jB,iBAAiBH,EAAa,CACnC,CAACE,GAAc,CACb/jB,MAAO6jB,EAAYH,GACnBO,UAAU,GAEZ,CAACP,GAAO,CACNQ,YAAY,EACZX,GAAAA,GACE,MAAMY,EAAQxF,KAAKoF,GACbphB,EAASmhB,EAAkBF,GACjC,OAAInjB,EAAS0jB,GACJ/jB,OAAOiN,OAAO,CAAC,EAAG1K,EAAQwhB,GAE5BpjB,EAAeojB,EAAOxhB,EAC/B,EACAiI,GAAAA,CAAI5K,GACF2e,KAAKoF,GAAe/jB,CACtB,IAGN,GAE0B,CAC1BokB,YAAcV,IAAUA,EAAKW,WAAW,MACxCC,WAAaZ,GAAkB,WAATA,EACtBxB,MAAO,CACLqC,UAAW,eAEb/B,YAAa,CACX4B,aAAa,EACbE,YAAY,KAahB,SAASE,GAAapC,EAAKqC,EAAMC,EAAIC,EAASC,GAC5C,IAAIC,EAAYJ,EAAKG,GAQrB,OAPKC,IACHA,EAAYJ,EAAKG,GAAUxC,EAAI0C,YAAYF,GAAQG,MACnDL,EAAGlgB,KAAKogB,IAENC,EAAYF,IACdA,EAAUE,GAELF,CACT,CACA,SAASK,GAAa5C,EAAKN,EAAMmD,EAAeC,GAE9C,IAAIT,GADJS,EAAQA,GAAS,CAAC,GACDT,KAAOS,EAAMT,MAAQ,CAAC,EACnCC,EAAKQ,EAAMC,eAAiBD,EAAMC,gBAAkB,GACpDD,EAAMpD,OAASA,IACjB2C,EAAOS,EAAMT,KAAO,CAAC,EACrBC,EAAKQ,EAAMC,eAAiB,GAC5BD,EAAMpD,KAAOA,GAEfM,EAAIgD,OACJhD,EAAIN,KAAOA,EACX,IAAI6C,EAAU,EACd,MAAMxiB,EAAO8iB,EAAcljB,OAC3B,IAAIH,EAAGyb,EAAGgI,EAAMC,EAAOC,EACvB,IAAK3jB,EAAI,EAAGA,EAAIO,EAAMP,IAEpB,GADA0jB,EAAQL,EAAcrjB,QACR4H,IAAV8b,GAAiC,OAAVA,IAAqC,IAAnBrlB,EAAQqlB,GACnDX,EAAUH,GAAapC,EAAKqC,EAAMC,EAAIC,EAASW,QAC1C,GAAIrlB,EAAQqlB,GACjB,IAAKjI,EAAI,EAAGgI,EAAOC,EAAMvjB,OAAQsb,EAAIgI,EAAMhI,IACzCkI,EAAcD,EAAMjI,QACA7T,IAAhB+b,GAA6C,OAAhBA,GAAyBtlB,EAAQslB,KAChEZ,EAAUH,GAAapC,EAAKqC,EAAMC,EAAIC,EAASY,IAKvDnD,EAAIoD,UACJ,MAAMC,EAAQf,EAAG3iB,OAAS,EAC1B,GAAI0jB,EAAQR,EAAcljB,OAAQ,CAChC,IAAKH,EAAI,EAAGA,EAAI6jB,EAAO7jB,WACd6iB,EAAKC,EAAG9iB,IAEjB8iB,EAAGla,OAAO,EAAGib,EACf,CACA,OAAOd,CACT,CACA,SAASe,GAAYjE,EAAOkE,EAAOZ,GACjC,MAAMxD,EAAmBE,EAAMmE,wBACzBC,EAAsB,IAAVd,EAAcvf,KAAK6B,IAAI0d,EAAQ,EAAG,IAAO,EAC3D,OAAOvf,KAAKc,OAAOqf,EAAQE,GAAatE,GAAoBA,EAAmBsE,CACjF,CACA,SAASC,GAAYC,EAAQ3D,IAC3BA,EAAMA,GAAO2D,EAAOC,WAAW,OAC3BZ,OACJhD,EAAI6D,iBACJ7D,EAAI8D,UAAU,EAAG,EAAGH,EAAOhB,MAAOgB,EAAOI,QACzC/D,EAAIoD,SACN,CACA,SAASY,GAAUhE,EAAKjf,EAASW,EAAGE,GAClCqiB,GAAgBjE,EAAKjf,EAASW,EAAGE,EAAG,KACtC,CACA,SAASqiB,GAAgBjE,EAAKjf,EAASW,EAAGE,EAAG2N,GAC3C,IAAIxR,EAAMmmB,EAASC,EAASnhB,EAAMohB,EAAczB,EAChD,MAAM/C,EAAQ7e,EAAQsjB,WAChBC,EAAWvjB,EAAQujB,SACnBC,EAASxjB,EAAQwjB,OACvB,IAAIC,GAAOF,GAAY,GAAK7gB,EAC5B,GAAImc,GAA0B,kBAAVA,IAClB7hB,EAAO6hB,EAAM1hB,WACA,8BAATH,GAAiD,+BAATA,GAM1C,OALAiiB,EAAIgD,OACJhD,EAAIyE,UAAU/iB,EAAGE,GACjBoe,EAAI/B,OAAOuG,GACXxE,EAAI0E,UAAU9E,GAAQA,EAAM+C,MAAQ,GAAI/C,EAAMmE,OAAS,EAAGnE,EAAM+C,MAAO/C,EAAMmE,aAC7E/D,EAAIoD,UAIR,KAAI1e,MAAM6f,IAAWA,GAAU,GAA/B,CAIA,OADAvE,EAAI2E,YACI/E,GACR,QACMrQ,EACFyQ,EAAI4E,QAAQljB,EAAGE,EAAG2N,EAAI,EAAGgV,EAAQ,EAAG,EAAGlhB,GAEvC2c,EAAI6E,IAAInjB,EAAGE,EAAG2iB,EAAQ,EAAGlhB,GAE3B2c,EAAI8E,YACJ,MACF,IAAK,WACH9E,EAAI+E,OAAOrjB,EAAI0B,KAAKiI,IAAImZ,GAAOD,EAAQ3iB,EAAIwB,KAAKkJ,IAAIkY,GAAOD,GAC3DC,GAAO5gB,EACPoc,EAAIgF,OAAOtjB,EAAI0B,KAAKiI,IAAImZ,GAAOD,EAAQ3iB,EAAIwB,KAAKkJ,IAAIkY,GAAOD,GAC3DC,GAAO5gB,EACPoc,EAAIgF,OAAOtjB,EAAI0B,KAAKiI,IAAImZ,GAAOD,EAAQ3iB,EAAIwB,KAAKkJ,IAAIkY,GAAOD,GAC3DvE,EAAI8E,YACJ,MACF,IAAK,cACHV,EAAwB,KAATG,EACfvhB,EAAOuhB,EAASH,EAChBF,EAAU9gB,KAAKkJ,IAAIkY,EAAM7gB,GAAcX,EACvCmhB,EAAU/gB,KAAKiI,IAAImZ,EAAM7gB,GAAcX,EACvCgd,EAAI6E,IAAInjB,EAAIwiB,EAAStiB,EAAIuiB,EAASC,EAAcI,EAAMrhB,EAAIqhB,EAAM9gB,GAChEsc,EAAI6E,IAAInjB,EAAIyiB,EAASviB,EAAIsiB,EAASE,EAAcI,EAAM9gB,EAAS8gB,GAC/DxE,EAAI6E,IAAInjB,EAAIwiB,EAAStiB,EAAIuiB,EAASC,EAAcI,EAAKA,EAAM9gB,GAC3Dsc,EAAI6E,IAAInjB,EAAIyiB,EAASviB,EAAIsiB,EAASE,EAAcI,EAAM9gB,EAAS8gB,EAAMrhB,GACrE6c,EAAI8E,YACJ,MACF,IAAK,OACH,IAAKR,EAAU,CACbthB,EAAOI,KAAK6hB,QAAUV,EACtB5B,EAAQpT,EAAIA,EAAI,EAAIvM,EACpBgd,EAAIkF,KAAKxjB,EAAIihB,EAAO/gB,EAAIoB,EAAM,EAAI2f,EAAO,EAAI3f,GAC7C,KACF,CACAwhB,GAAO7gB,EACT,IAAK,UACHugB,EAAU9gB,KAAKkJ,IAAIkY,GAAOD,EAC1BJ,EAAU/gB,KAAKiI,IAAImZ,GAAOD,EAC1BvE,EAAI+E,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5BnE,EAAIgF,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BlE,EAAIgF,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5BnE,EAAIgF,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BlE,EAAI8E,YACJ,MACF,IAAK,WACHN,GAAO7gB,EACT,IAAK,QACHugB,EAAU9gB,KAAKkJ,IAAIkY,GAAOD,EAC1BJ,EAAU/gB,KAAKiI,IAAImZ,GAAOD,EAC1BvE,EAAI+E,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5BnE,EAAIgF,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5BnE,EAAI+E,OAAOrjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BlE,EAAIgF,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5B,MACF,IAAK,OACHA,EAAU9gB,KAAKkJ,IAAIkY,GAAOD,EAC1BJ,EAAU/gB,KAAKiI,IAAImZ,GAAOD,EAC1BvE,EAAI+E,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5BnE,EAAIgF,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5BnE,EAAI+E,OAAOrjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BlE,EAAIgF,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BM,GAAO7gB,EACPugB,EAAU9gB,KAAKkJ,IAAIkY,GAAOD,EAC1BJ,EAAU/gB,KAAKiI,IAAImZ,GAAOD,EAC1BvE,EAAI+E,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5BnE,EAAIgF,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5BnE,EAAI+E,OAAOrjB,EAAIyiB,EAASviB,EAAIsiB,GAC5BlE,EAAIgF,OAAOtjB,EAAIyiB,EAASviB,EAAIsiB,GAC5B,MACF,IAAK,OACHA,EAAU3U,EAAIA,EAAI,EAAInM,KAAKkJ,IAAIkY,GAAOD,EACtCJ,EAAU/gB,KAAKiI,IAAImZ,GAAOD,EAC1BvE,EAAI+E,OAAOrjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5BnE,EAAIgF,OAAOtjB,EAAIwiB,EAAStiB,EAAIuiB,GAC5B,MACF,IAAK,OACHnE,EAAI+E,OAAOrjB,EAAGE,GACdoe,EAAIgF,OAAOtjB,EAAI0B,KAAKkJ,IAAIkY,GAAOD,EAAQ3iB,EAAIwB,KAAKiI,IAAImZ,GAAOD,GAG7DvE,EAAImF,OACApkB,EAAQqkB,YAAc,GACxBpF,EAAIqF,QArFN,CAuFF,CACA,SAASC,GAAeC,EAAOC,EAAMC,GAEnC,OADAA,EAASA,GAAU,IACXD,GAASD,GAASA,EAAM7jB,EAAI8jB,EAAKE,KAAOD,GAAUF,EAAM7jB,EAAI8jB,EAAKG,MAAQF,GACjFF,EAAM3jB,EAAI4jB,EAAKI,IAAMH,GAAUF,EAAM3jB,EAAI4jB,EAAKK,OAASJ,CACzD,CACA,SAASK,GAAS9F,EAAKwF,GACrBxF,EAAIgD,OACJhD,EAAI2E,YACJ3E,EAAIkF,KAAKM,EAAKE,KAAMF,EAAKI,IAAKJ,EAAKG,MAAQH,EAAKE,KAAMF,EAAKK,OAASL,EAAKI,KACzE5F,EAAI+F,MACN,CACA,SAASC,GAAWhG,GAClBA,EAAIoD,SACN,CACA,SAAS6C,GAAejG,EAAKkG,EAAU3lB,EAAQ4lB,EAAM9F,GACnD,IAAK6F,EACH,OAAOlG,EAAIgF,OAAOzkB,EAAOmB,EAAGnB,EAAOqB,GAErC,GAAa,WAATye,EAAmB,CACrB,MAAM+F,GAAYF,EAASxkB,EAAInB,EAAOmB,GAAK,EAC3Cse,EAAIgF,OAAOoB,EAAUF,EAAStkB,GAC9Boe,EAAIgF,OAAOoB,EAAU7lB,EAAOqB,EAC9B,KAAoB,UAATye,MAAuB8F,EAChCnG,EAAIgF,OAAOkB,EAASxkB,EAAGnB,EAAOqB,GAE9Boe,EAAIgF,OAAOzkB,EAAOmB,EAAGwkB,EAAStkB,GAEhCoe,EAAIgF,OAAOzkB,EAAOmB,EAAGnB,EAAOqB,EAC9B,CACA,SAASykB,GAAerG,EAAKkG,EAAU3lB,EAAQ4lB,GAC7C,IAAKD,EACH,OAAOlG,EAAIgF,OAAOzkB,EAAOmB,EAAGnB,EAAOqB,GAErCoe,EAAIsG,cACFH,EAAOD,EAASK,KAAOL,EAASM,KAChCL,EAAOD,EAASO,KAAOP,EAASQ,KAChCP,EAAO5lB,EAAOimB,KAAOjmB,EAAOgmB,KAC5BJ,EAAO5lB,EAAOmmB,KAAOnmB,EAAOkmB,KAC5BlmB,EAAOmB,EACPnB,EAAOqB,EACX,CACA,SAAS+kB,GAAW3G,EAAK4G,EAAMllB,EAAGE,EAAG8d,GAAiB,IAAXmH,EAAI1f,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,MAAM2f,EAAQjpB,EAAQ+oB,GAAQA,EAAO,CAACA,GAChCvB,EAASwB,EAAKE,YAAc,GAA0B,KAArBF,EAAKG,YAC5C,IAAIxnB,EAAGynB,EAIP,IAHAjH,EAAIgD,OACJhD,EAAIN,KAAOA,EAAK8C,OAmBlB,SAAuBxC,EAAK6G,GACtBA,EAAKK,aACPlH,EAAIyE,UAAUoC,EAAKK,YAAY,GAAIL,EAAKK,YAAY,IAEjDvpB,EAAckpB,EAAKvC,WACtBtE,EAAI/B,OAAO4I,EAAKvC,UAEduC,EAAK9J,QACPiD,EAAImH,UAAYN,EAAK9J,OAEnB8J,EAAKO,YACPpH,EAAIoH,UAAYP,EAAKO,WAEnBP,EAAKQ,eACPrH,EAAIqH,aAAeR,EAAKQ,aAE5B,CAlCEC,CAActH,EAAK6G,GACdrnB,EAAI,EAAGA,EAAIsnB,EAAMnnB,SAAUH,EAC9BynB,EAAOH,EAAMtnB,GACT6lB,IACEwB,EAAKG,cACPhH,EAAIuH,YAAcV,EAAKG,aAEpBrpB,EAAckpB,EAAKE,eACtB/G,EAAIwH,UAAYX,EAAKE,aAEvB/G,EAAIyH,WAAWR,EAAMvlB,EAAGE,EAAGilB,EAAKa,WAElC1H,EAAI2H,SAASV,EAAMvlB,EAAGE,EAAGilB,EAAKa,UAC9BE,GAAa5H,EAAKte,EAAGE,EAAGqlB,EAAMJ,GAC9BjlB,GAAK8d,EAAKG,WAEZG,EAAIoD,SACN,CAkBA,SAASwE,GAAa5H,EAAKte,EAAGE,EAAGqlB,EAAMJ,GACrC,GAAIA,EAAKgB,eAAiBhB,EAAKiB,UAAW,CACxC,MAAMC,EAAU/H,EAAI0C,YAAYuE,GAC1BvB,EAAOhkB,EAAIqmB,EAAQC,sBACnBrC,EAAQjkB,EAAIqmB,EAAQE,uBACpBrC,EAAMhkB,EAAImmB,EAAQG,wBAClBrC,EAASjkB,EAAImmB,EAAQI,yBACrBC,EAAcvB,EAAKgB,eAAiBjC,EAAMC,GAAU,EAAIA,EAC9D7F,EAAIuH,YAAcvH,EAAImH,UACtBnH,EAAI2E,YACJ3E,EAAIwH,UAAYX,EAAKwB,iBAAmB,EACxCrI,EAAI+E,OAAOW,EAAM0C,GACjBpI,EAAIgF,OAAOW,EAAOyC,GAClBpI,EAAIqF,QACN,CACF,CACA,SAASiD,GAAmBtI,EAAKkF,GAC/B,MAAM,EAACxjB,EAAC,EAAEE,EAAC,EAAE2N,EAAC,EAAE3B,EAAC,OAAE2W,GAAUW,EAC7BlF,EAAI6E,IAAInjB,EAAI6iB,EAAOgE,QAAS3mB,EAAI2iB,EAAOgE,QAAShE,EAAOgE,SAAU7kB,EAASP,GAAI,GAC9E6c,EAAIgF,OAAOtjB,EAAGE,EAAIgM,EAAI2W,EAAOiE,YAC7BxI,EAAI6E,IAAInjB,EAAI6iB,EAAOiE,WAAY5mB,EAAIgM,EAAI2W,EAAOiE,WAAYjE,EAAOiE,WAAYrlB,EAAIO,GAAS,GAC1Fsc,EAAIgF,OAAOtjB,EAAI6N,EAAIgV,EAAOkE,YAAa7mB,EAAIgM,GAC3CoS,EAAI6E,IAAInjB,EAAI6N,EAAIgV,EAAOkE,YAAa7mB,EAAIgM,EAAI2W,EAAOkE,YAAalE,EAAOkE,YAAa/kB,EAAS,GAAG,GAChGsc,EAAIgF,OAAOtjB,EAAI6N,EAAG3N,EAAI2iB,EAAOmE,UAC7B1I,EAAI6E,IAAInjB,EAAI6N,EAAIgV,EAAOmE,SAAU9mB,EAAI2iB,EAAOmE,SAAUnE,EAAOmE,SAAU,GAAIhlB,GAAS,GACpFsc,EAAIgF,OAAOtjB,EAAI6iB,EAAOgE,QAAS3mB,EACjC,CAEA,MAAM+mB,GAAc,IAAIC,OAAO,wCACzBC,GAAa,IAAID,OAAO,yEAC9B,SAASE,GAAalrB,EAAOoF,GAC3B,MAAM+lB,GAAW,GAAKnrB,GAAOorB,MAAML,IACnC,IAAKI,GAA0B,WAAfA,EAAQ,GACtB,OAAc,IAAP/lB,EAGT,OADApF,GAASmrB,EAAQ,GACTA,EAAQ,IAChB,IAAK,KACH,OAAOnrB,EACT,IAAK,IACHA,GAAS,IAGX,OAAOoF,EAAOpF,CAChB,CACA,MAAMqrB,GAAexnB,IAAMA,GAAK,EAChC,SAASynB,GAAkBtrB,EAAOurB,GAChC,MAAM9M,EAAM,CAAC,EACP+M,EAAW/qB,EAAS8qB,GACpBzpB,EAAO0pB,EAAWprB,OAAO0B,KAAKypB,GAASA,EACvCE,EAAOhrB,EAAST,GAClBwrB,EACEE,GAAQ3qB,EAAef,EAAM0rB,GAAO1rB,EAAMurB,EAAMG,KAChDA,GAAQ1rB,EAAM0rB,GAChB,IAAM1rB,EACV,IAAK,MAAM0rB,KAAQ5pB,EACjB2c,EAAIiN,GAAQL,GAAaI,EAAKC,IAEhC,OAAOjN,CACT,CACA,SAASkN,GAAO3rB,GACd,OAAOsrB,GAAkBtrB,EAAO,CAACgoB,IAAK,IAAKD,MAAO,IAAKE,OAAQ,IAAKH,KAAM,KAC5E,CACA,SAAS8D,GAAc5rB,GACrB,OAAOsrB,GAAkBtrB,EAAO,CAAC,UAAW,WAAY,aAAc,eACxE,CACA,SAAS6rB,GAAU7rB,GACjB,MAAMkE,EAAMynB,GAAO3rB,GAGnB,OAFAkE,EAAI6gB,MAAQ7gB,EAAI4jB,KAAO5jB,EAAI6jB,MAC3B7jB,EAAIiiB,OAASjiB,EAAI8jB,IAAM9jB,EAAI+jB,OACpB/jB,CACT,CACA,SAAS4nB,GAAO3oB,EAAS4oB,GACvB5oB,EAAUA,GAAW,CAAC,EACtB4oB,EAAWA,GAAY9K,GAASa,KAChC,IAAI1c,EAAOrE,EAAeoC,EAAQiC,KAAM2mB,EAAS3mB,MAC7B,kBAATA,IACTA,EAAOqY,SAASrY,EAAM,KAExB,IAAI4c,EAAQjhB,EAAeoC,EAAQ6e,MAAO+J,EAAS/J,OAC/CA,KAAW,GAAKA,GAAOoJ,MAAMH,MAC/Be,QAAQC,KAAK,kCAAoCjK,EAAQ,KACzDA,EAAQ,IAEV,MAAMF,EAAO,CACXC,OAAQhhB,EAAeoC,EAAQ4e,OAAQgK,EAAShK,QAChDE,WAAYiJ,GAAanqB,EAAeoC,EAAQ8e,WAAY8J,EAAS9J,YAAa7c,GAClFA,OACA4c,QACA5C,OAAQre,EAAeoC,EAAQic,OAAQ2M,EAAS3M,QAChDwF,OAAQ,IAGV,OADA9C,EAAK8C,OAjWP,SAAsB9C,GACpB,OAAKA,GAAQ/hB,EAAc+hB,EAAK1c,OAASrF,EAAc+hB,EAAKC,QACnD,MAEDD,EAAKE,MAAQF,EAAKE,MAAQ,IAAM,KACrCF,EAAK1C,OAAS0C,EAAK1C,OAAS,IAAM,IACnC0C,EAAK1c,KAAO,MACZ0c,EAAKC,MACT,CAyVgBmK,CAAapK,GACpBA,CACT,CACA,SAASqK,GAAQC,EAAQ5K,EAASjf,EAAO8pB,GACvC,IACIzqB,EAAGO,EAAMnC,EADTssB,GAAY,EAEhB,IAAK1qB,EAAI,EAAGO,EAAOiqB,EAAOrqB,OAAQH,EAAIO,IAAQP,EAE5C,GADA5B,EAAQosB,EAAOxqB,QACD4H,IAAVxJ,SAGYwJ,IAAZgY,GAA0C,oBAAVxhB,IAClCA,EAAQA,EAAMwhB,GACd8K,GAAY,QAEA9iB,IAAVjH,GAAuBtC,EAAQD,KACjCA,EAAQA,EAAMuC,EAAQvC,EAAM+B,QAC5BuqB,GAAY,QAEA9iB,IAAVxJ,GAIF,OAHIqsB,IAASC,IACXD,EAAKC,WAAY,GAEZtsB,CAGb,CAUA,SAASusB,GAAcC,EAAehL,GACpC,OAAOphB,OAAOiN,OAAOjN,OAAOwC,OAAO4pB,GAAgBhL,EACrD,CAEA,SAASiL,GAAgBC,GAAqF,IAA7EC,EAAQpjB,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,IAAKqjB,EAAUrjB,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAGmjB,EAAQX,EAAQxiB,UAAAxH,OAAA,EAAAwH,UAAA,QAAAC,EAAEqjB,EAAStjB,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAAMmjB,EAAO,GACnG3nB,EAAQgnB,KACXA,EAAWe,GAAS,YAAaJ,IAEnC,MAAMxH,EAAQ,CACZ,CAAC6H,OAAOC,aAAc,SACtBC,YAAY,EACZC,QAASR,EACTS,YAAaP,EACbrI,UAAWwH,EACXqB,WAAYP,EACZrJ,SAAWzC,GAAU0L,GAAgB,CAAC1L,KAAU2L,GAASC,EAAUC,EAAYb,IAEjF,OAAO,IAAIsB,MAAMnI,EAAO,CACtBoI,eAAcA,CAAC3qB,EAAQ+oB,YACd/oB,EAAO+oB,UACP/oB,EAAO4qB,aACPb,EAAO,GAAGhB,IACV,GAETnI,IAAGA,CAAC5gB,EAAQ+oB,IACH8B,GAAQ7qB,EAAQ+oB,GACrB,IAuLR,SAA8BA,EAAMiB,EAAUD,EAAQe,GACpD,IAAIztB,EACJ,IAAK,MAAM0tB,KAAUf,EAEnB,GADA3sB,EAAQ8sB,GAASa,GAAQD,EAAQhC,GAAOgB,GACpC3nB,EAAQ/E,GACV,OAAO4tB,GAAiBlC,EAAM1rB,GAC1B6tB,GAAkBnB,EAAQe,EAAO/B,EAAM1rB,GACvCA,CAGV,CAjMc8tB,CAAqBpC,EAAMiB,EAAUD,EAAQ/pB,KAEvDorB,yBAAwBA,CAACprB,EAAQ+oB,IACxBsC,QAAQD,yBAAyBprB,EAAOuqB,QAAQ,GAAIxB,GAE7DuC,eAAcA,IACLD,QAAQC,eAAevB,EAAO,IAEvCpnB,IAAGA,CAAC3C,EAAQ+oB,IACHwC,GAAqBvrB,GAAQwrB,SAASzC,GAE/C0C,QAAQzrB,GACCurB,GAAqBvrB,GAE9BiI,GAAAA,CAAIjI,EAAQ+oB,EAAM1rB,GAChB,MAAMquB,EAAU1rB,EAAO2rB,WAAa3rB,EAAO2rB,SAAWzB,KAGtD,OAFAlqB,EAAO+oB,GAAQ2C,EAAQ3C,GAAQ1rB,SACxB2C,EAAO4qB,OACP,CACT,GAEJ,CACA,SAASgB,GAAed,EAAOjM,EAASgN,EAAUC,GAChD,MAAMvJ,EAAQ,CACZ+H,YAAY,EACZyB,OAAQjB,EACRkB,SAAUnN,EACVoN,UAAWJ,EACXK,OAAQ,IAAIhkB,IACZqW,aAAcA,GAAauM,EAAOgB,GAClCK,WAAa1M,GAAQmM,GAAed,EAAOrL,EAAKoM,EAAUC,GAC1DjL,SAAWzC,GAAUwN,GAAed,EAAMjK,SAASzC,GAAQS,EAASgN,EAAUC,IAEhF,OAAO,IAAIpB,MAAMnI,EAAO,CACtBoI,eAAcA,CAAC3qB,EAAQ+oB,YACd/oB,EAAO+oB,UACP+B,EAAM/B,IACN,GAETnI,IAAGA,CAAC5gB,EAAQ+oB,EAAMqD,IACTvB,GAAQ7qB,EAAQ+oB,GACrB,IA4CR,SAA6B/oB,EAAQ+oB,EAAMqD,GACzC,MAAM,OAACL,EAAM,SAAEC,EAAQ,UAAEC,EAAW1N,aAAcP,GAAehe,EACjE,IAAI3C,EAAQ0uB,EAAOhD,GACf1mB,EAAWhF,IAAU2gB,EAAYqO,aAAatD,KAChD1rB,EAUJ,SAA4B0rB,EAAM1rB,EAAO2C,EAAQosB,GAC/C,MAAM,OAACL,EAAM,SAAEC,EAAQ,UAAEC,EAAS,OAAEC,GAAUlsB,EAC9C,GAAIksB,EAAOvpB,IAAIomB,GACb,MAAM,IAAIuD,MAAM,uBAAyB/uB,MAAM6K,KAAK8jB,GAAQK,KAAK,MAAQ,KAAOxD,GAElFmD,EAAO/jB,IAAI4gB,GACX1rB,EAAQA,EAAM2uB,EAAUC,GAAaG,GACrCF,EAAOM,OAAOzD,GACVkC,GAAiBlC,EAAM1rB,KACzBA,EAAQ6tB,GAAkBa,EAAOxB,QAASwB,EAAQhD,EAAM1rB,IAE1D,OAAOA,CACT,CAtBYovB,CAAmB1D,EAAM1rB,EAAO2C,EAAQosB,IAE9C9uB,EAAQD,IAAUA,EAAM+B,SAC1B/B,EAoBJ,SAAuB0rB,EAAM1rB,EAAO2C,EAAQ0sB,GAC1C,MAAM,OAACX,EAAM,SAAEC,EAAQ,UAAEC,EAAW1N,aAAcP,GAAehe,EACjE,GAAIoC,EAAQ4pB,EAASpsB,QAAU8sB,EAAY3D,GACzC1rB,EAAQA,EAAM2uB,EAASpsB,MAAQvC,EAAM+B,aAChC,GAAItB,EAAST,EAAM,IAAK,CAC7B,MAAMsvB,EAAMtvB,EACN0sB,EAASgC,EAAOxB,QAAQqC,QAAOvmB,GAAKA,IAAMsmB,IAChDtvB,EAAQ,GACR,IAAK,MAAMqF,KAAQiqB,EAAK,CACtB,MAAMnrB,EAAW0pB,GAAkBnB,EAAQgC,EAAQhD,EAAMrmB,GACzDrF,EAAMwE,KAAK+pB,GAAepqB,EAAUwqB,EAAUC,GAAaA,EAAUlD,GAAO/K,GAC9E,CACF,CACA,OAAO3gB,CACT,CAlCYwvB,CAAc9D,EAAM1rB,EAAO2C,EAAQge,EAAY0O,cAErDzB,GAAiBlC,EAAM1rB,KACzBA,EAAQuuB,GAAevuB,EAAO2uB,EAAUC,GAAaA,EAAUlD,GAAO/K,IAExE,OAAO3gB,CACT,CAzDcyvB,CAAoB9sB,EAAQ+oB,EAAMqD,KAE5ChB,yBAAwBA,CAACprB,EAAQ+oB,IACxB/oB,EAAOue,aAAawO,QACvB1B,QAAQ1oB,IAAImoB,EAAO/B,GAAQ,CAACxH,YAAY,EAAMyL,cAAc,QAAQnmB,EACpEwkB,QAAQD,yBAAyBN,EAAO/B,GAE9CuC,eAAcA,IACLD,QAAQC,eAAeR,GAEhCnoB,IAAGA,CAAC3C,EAAQ+oB,IACHsC,QAAQ1oB,IAAImoB,EAAO/B,GAE5B0C,QAAOA,IACEJ,QAAQI,QAAQX,GAEzB7iB,IAAGA,CAACjI,EAAQ+oB,EAAM1rB,KAChBytB,EAAM/B,GAAQ1rB,SACP2C,EAAO+oB,IACP,IAGb,CACA,SAASxK,GAAauM,GAAuD,IAAhDxM,EAAQ1X,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAACqmB,YAAY,EAAMC,WAAW,GACpE,MAAM,YAACzL,EAAcnD,EAAS2O,WAAU,WAAEtL,EAAarD,EAAS4O,UAAS,SAAEC,EAAW7O,EAASyO,SAAWjC,EAC1G,MAAO,CACLiC,QAASI,EACTF,WAAYxL,EACZyL,UAAWvL,EACX0K,aAAchqB,EAAWof,GAAeA,EAAc,IAAMA,EAC5DiL,YAAarqB,EAAWsf,GAAcA,EAAa,IAAMA,EAE7D,CACA,MAAMqJ,GAAUA,CAACD,EAAQhK,IAASgK,EAASA,EAAS/oB,EAAY+e,GAAQA,EAClEkK,GAAmBA,CAAClC,EAAM1rB,IAAUS,EAAST,IAAmB,aAAT0rB,IACzB,OAAjCtrB,OAAO6tB,eAAejuB,IAAmBA,EAAMwe,cAAgBpe,QAClE,SAASotB,GAAQ7qB,EAAQ+oB,EAAMS,GAC7B,GAAI/rB,OAAOC,UAAUsD,eAAepD,KAAKoC,EAAQ+oB,GAC/C,OAAO/oB,EAAO+oB,GAEhB,MAAM1rB,EAAQmsB,IAEd,OADAxpB,EAAO+oB,GAAQ1rB,EACRA,CACT,CA2CA,SAAS+vB,GAAgBhE,EAAUL,EAAM1rB,GACvC,OAAOgF,EAAW+mB,GAAYA,EAASL,EAAM1rB,GAAS+rB,CACxD,CACA,MAAMiE,GAAWA,CAAChtB,EAAKitB,KAAmB,IAARjtB,EAAeitB,EAC9B,kBAARjtB,EAAmBiB,EAAiBgsB,EAAQjtB,QAAOwG,EAC9D,SAAS0mB,GAAUtlB,EAAKulB,EAAcntB,EAAKotB,EAAgBpwB,GACzD,IAAK,MAAMiwB,KAAUE,EAAc,CACjC,MAAMpP,EAAQiP,GAAShtB,EAAKitB,GAC5B,GAAIlP,EAAO,CACTnW,EAAIE,IAAIiW,GACR,MAAMgL,EAAWgE,GAAgBhP,EAAMwD,UAAWvhB,EAAKhD,GACvD,GAAI+E,EAAQgnB,IAAaA,IAAa/oB,GAAO+oB,IAAaqE,EACxD,OAAOrE,CAEX,MAAO,IAAc,IAAVhL,GAAmBhc,EAAQqrB,IAAmBptB,IAAQotB,EAC/D,OAAO,IAEX,CACA,OAAO,CACT,CACA,SAASvC,GAAkBsC,EAAchsB,EAAUunB,EAAM1rB,GACvD,MAAM4sB,EAAazoB,EAASgpB,YACtBpB,EAAWgE,GAAgB5rB,EAASogB,UAAWmH,EAAM1rB,GACrDqwB,EAAY,IAAIF,KAAiBvD,GACjChiB,EAAM,IAAIC,IAChBD,EAAIE,IAAI9K,GACR,IAAIgD,EAAMstB,GAAiB1lB,EAAKylB,EAAW3E,EAAMK,GAAYL,EAAM1rB,GACnE,OAAY,OAARgD,MAGA+B,EAAQgnB,IAAaA,IAAaL,IACpC1oB,EAAMstB,GAAiB1lB,EAAKylB,EAAWtE,EAAU/oB,EAAKhD,GAC1C,OAARgD,KAICypB,GAAgBvsB,MAAM6K,KAAKH,GAAM,CAAC,IAAKgiB,EAAYb,GACxD,IAQJ,SAAsB5nB,EAAUunB,EAAM1rB,GACpC,MAAMiwB,EAAS9rB,EAASipB,aAClB1B,KAAQuE,IACZA,EAAOvE,GAAQ,CAAC,GAElB,MAAM/oB,EAASstB,EAAOvE,GACtB,GAAIzrB,EAAQ0C,IAAWlC,EAAST,GAC9B,OAAOA,EAET,OAAO2C,CACT,CAlBU4tB,CAAapsB,EAAUunB,EAAM1rB,KACvC,CACA,SAASswB,GAAiB1lB,EAAKylB,EAAWrtB,EAAK+oB,EAAU1mB,GACvD,KAAOrC,GACLA,EAAMktB,GAAUtlB,EAAKylB,EAAWrtB,EAAK+oB,EAAU1mB,GAEjD,OAAOrC,CACT,CAuBA,SAAS8pB,GAAS9pB,EAAK0pB,GACrB,IAAK,MAAM3L,KAAS2L,EAAQ,CAC1B,IAAK3L,EACH,SAEF,MAAM/gB,EAAQ+gB,EAAM/d,GACpB,GAAI+B,EAAQ/E,GACV,OAAOA,CAEX,CACF,CACA,SAASkuB,GAAqBvrB,GAC5B,IAAIb,EAAOa,EAAO4qB,MAIlB,OAHKzrB,IACHA,EAAOa,EAAO4qB,MAIlB,SAAkCb,GAChC,MAAM9hB,EAAM,IAAIC,IAChB,IAAK,MAAMkW,KAAS2L,EAClB,IAAK,MAAM1pB,KAAO5C,OAAO0B,KAAKif,GAAOwO,QAAOzsB,IAAMA,EAAEuhB,WAAW,OAC7DzZ,EAAIE,IAAI9H,GAGZ,OAAO9C,MAAM6K,KAAKH,EACpB,CAZ0B4lB,CAAyB7tB,EAAOuqB,UAEjDprB,CACT,CAUA,SAAS2uB,GAA4B3kB,EAAM2Y,EAAM5b,EAAOqD,GACtD,MAAM,OAACE,GAAUN,GACX,IAAC9I,EAAM,KAAO2b,KAAK+R,SACnBC,EAAS,IAAIzwB,MAAMgM,GACzB,IAAItK,EAAGO,EAAMI,EAAO8C,EACpB,IAAKzD,EAAI,EAAGO,EAAO+J,EAAOtK,EAAIO,IAAQP,EACpCW,EAAQX,EAAIiH,EACZxD,EAAOof,EAAKliB,GACZouB,EAAO/uB,GAAK,CACVuP,EAAG/E,EAAOwkB,MAAM3sB,EAAiBoB,EAAMrC,GAAMT,IAGjD,OAAOouB,CACT,CAEA,MAAME,GAAUlwB,OAAOkwB,SAAW,MAC5BC,GAAWA,CAAC/kB,EAAQnK,IAAMA,EAAImK,EAAOhK,SAAWgK,EAAOnK,GAAGmvB,MAAQhlB,EAAOnK,GACzEovB,GAAgBzO,GAA4B,MAAdA,EAAoB,IAAM,IAC9D,SAAS0O,GAAYC,EAAYC,EAAaC,EAAY7jB,GACxD,MAAM+a,EAAW4I,EAAWH,KAAOI,EAAcD,EAC3CG,EAAUF,EACVG,EAAOF,EAAWL,KAAOI,EAAcC,EACvCG,EAAMhpB,EAAsB8oB,EAAS/I,GACrCkJ,EAAMjpB,EAAsB+oB,EAAMD,GACxC,IAAII,EAAMF,GAAOA,EAAMC,GACnBE,EAAMF,GAAOD,EAAMC,GACvBC,EAAM3qB,MAAM2qB,GAAO,EAAIA,EACvBC,EAAM5qB,MAAM4qB,GAAO,EAAIA,EACvB,MAAMC,EAAKpkB,EAAIkkB,EACTG,EAAKrkB,EAAImkB,EACf,MAAO,CACLpJ,SAAU,CACRxkB,EAAGutB,EAAQvtB,EAAI6tB,GAAML,EAAKxtB,EAAIwkB,EAASxkB,GACvCE,EAAGqtB,EAAQrtB,EAAI2tB,GAAML,EAAKttB,EAAIskB,EAAStkB,IAEzCstB,KAAM,CACJxtB,EAAGutB,EAAQvtB,EAAI8tB,GAAMN,EAAKxtB,EAAIwkB,EAASxkB,GACvCE,EAAGqtB,EAAQrtB,EAAI4tB,GAAMN,EAAKttB,EAAIskB,EAAStkB,IAG7C,CAoDA,SAAS6tB,GAAoB9lB,GAAyB,IAAjBwW,EAAShZ,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAC/C,MAAMuoB,EAAYd,GAAazO,GACzBwP,EAAYhmB,EAAOhK,OACnBiwB,EAAS9xB,MAAM6xB,GAAWxK,KAAK,GAC/B0K,EAAK/xB,MAAM6xB,GACjB,IAAInwB,EAAGswB,EAAaC,EAChBC,EAAatB,GAAS/kB,EAAQ,GAClC,IAAKnK,EAAI,EAAGA,EAAImwB,IAAanwB,EAI3B,GAHAswB,EAAcC,EACdA,EAAeC,EACfA,EAAatB,GAAS/kB,EAAQnK,EAAI,GAC7BuwB,EAAL,CAGA,GAAIC,EAAY,CACd,MAAMC,EAAaD,EAAW7P,GAAa4P,EAAa5P,GACxDyP,EAAOpwB,GAAoB,IAAfywB,GAAoBD,EAAWN,GAAaK,EAAaL,IAAcO,EAAa,CAClG,CACAJ,EAAGrwB,GAAMswB,EACJE,EACAlsB,EAAK8rB,EAAOpwB,EAAI,MAAQsE,EAAK8rB,EAAOpwB,IAAO,GAC3CowB,EAAOpwB,EAAI,GAAKowB,EAAOpwB,IAAM,EAFhBowB,EAAOpwB,EAAI,GADNowB,EAAOpwB,EAL9B,EAhEJ,SAAwBmK,EAAQimB,EAAQC,GACtC,MAAMF,EAAYhmB,EAAOhK,OACzB,IAAIuwB,EAAQC,EAAOC,EAAMC,EAAkBN,EACvCC,EAAatB,GAAS/kB,EAAQ,GAClC,IAAK,IAAInK,EAAI,EAAGA,EAAImwB,EAAY,IAAKnwB,EACnCuwB,EAAeC,EACfA,EAAatB,GAAS/kB,EAAQnK,EAAI,GAC7BuwB,GAAiBC,IAGlB7rB,EAAayrB,EAAOpwB,GAAI,EAAGivB,IAC7BoB,EAAGrwB,GAAKqwB,EAAGrwB,EAAI,GAAK,GAGtB0wB,EAASL,EAAGrwB,GAAKowB,EAAOpwB,GACxB2wB,EAAQN,EAAGrwB,EAAI,GAAKowB,EAAOpwB,GAC3B6wB,EAAmBjtB,KAAKiB,IAAI6rB,EAAQ,GAAK9sB,KAAKiB,IAAI8rB,EAAO,GACrDE,GAAoB,IAGxBD,EAAO,EAAIhtB,KAAK2C,KAAKsqB,GACrBR,EAAGrwB,GAAK0wB,EAASE,EAAOR,EAAOpwB,GAC/BqwB,EAAGrwB,EAAI,GAAK2wB,EAAQC,EAAOR,EAAOpwB,KAEtC,CAkDE8wB,CAAe3mB,EAAQimB,EAAQC,GAjDjC,SAAyBlmB,EAAQkmB,GAAqB,IAAjB1P,EAAShZ,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAC/C,MAAMuoB,EAAYd,GAAazO,GACzBwP,EAAYhmB,EAAOhK,OACzB,IAAI4wB,EAAOT,EAAaC,EACpBC,EAAatB,GAAS/kB,EAAQ,GAClC,IAAK,IAAInK,EAAI,EAAGA,EAAImwB,IAAanwB,EAAG,CAIlC,GAHAswB,EAAcC,EACdA,EAAeC,EACfA,EAAatB,GAAS/kB,EAAQnK,EAAI,IAC7BuwB,EACH,SAEF,MAAMS,EAAST,EAAa5P,GACtBsQ,EAASV,EAAaL,GACxBI,IACFS,GAASC,EAASV,EAAY3P,IAAc,EAC5C4P,EAAa,MAADnT,OAAOuD,IAAeqQ,EAASD,EAC3CR,EAAa,MAADnT,OAAO8S,IAAee,EAASF,EAAQV,EAAGrwB,IAEpDwwB,IACFO,GAASP,EAAW7P,GAAaqQ,GAAU,EAC3CT,EAAa,MAADnT,OAAOuD,IAAeqQ,EAASD,EAC3CR,EAAa,MAADnT,OAAO8S,IAAee,EAASF,EAAQV,EAAGrwB,GAE1D,CACF,CAyBEkxB,CAAgB/mB,EAAQkmB,EAAI1P,EAC9B,CACA,SAASwQ,GAAgBC,EAAI5rB,EAAKC,GAChC,OAAO7B,KAAK6B,IAAI7B,KAAK4B,IAAI4rB,EAAI3rB,GAAMD,EACrC,CAsBA,SAAS6rB,GAA2BlnB,EAAQ5I,EAASykB,EAAMsL,EAAM3Q,GAC/D,IAAI3gB,EAAGO,EAAMwlB,EAAOwL,EAIpB,GAHIhwB,EAAQiwB,WACVrnB,EAASA,EAAOwjB,QAAQyD,IAAQA,EAAGjC,QAEE,aAAnC5tB,EAAQkwB,uBACVxB,GAAoB9lB,EAAQwW,OACvB,CACL,IAAI+Q,EAAOJ,EAAOnnB,EAAOA,EAAOhK,OAAS,GAAKgK,EAAO,GACrD,IAAKnK,EAAI,EAAGO,EAAO4J,EAAOhK,OAAQH,EAAIO,IAAQP,EAC5C+lB,EAAQ5b,EAAOnK,GACfuxB,EAAgBlC,GACdqC,EACA3L,EACA5b,EAAOvG,KAAK4B,IAAIxF,EAAI,EAAGO,GAAQ+wB,EAAO,EAAI,IAAM/wB,GAChDgB,EAAQowB,SAEV5L,EAAMgB,KAAOwK,EAAc7K,SAASxkB,EACpC6jB,EAAMkB,KAAOsK,EAAc7K,SAAStkB,EACpC2jB,EAAMiB,KAAOuK,EAAc7B,KAAKxtB,EAChC6jB,EAAMmB,KAAOqK,EAAc7B,KAAKttB,EAChCsvB,EAAO3L,CAEX,CACIxkB,EAAQqwB,iBA7Cd,SAAyBznB,EAAQ6b,GAC/B,IAAIhmB,EAAGO,EAAMwlB,EAAO8L,EAAQC,EACxBC,EAAajM,GAAe3b,EAAO,GAAI6b,GAC3C,IAAKhmB,EAAI,EAAGO,EAAO4J,EAAOhK,OAAQH,EAAIO,IAAQP,EAC5C8xB,EAAaD,EACbA,EAASE,EACTA,EAAa/xB,EAAIO,EAAO,GAAKulB,GAAe3b,EAAOnK,EAAI,GAAIgmB,GACtD6L,IAGL9L,EAAQ5b,EAAOnK,GACX8xB,IACF/L,EAAMgB,KAAOoK,GAAgBpL,EAAMgB,KAAMf,EAAKE,KAAMF,EAAKG,OACzDJ,EAAMkB,KAAOkK,GAAgBpL,EAAMkB,KAAMjB,EAAKI,IAAKJ,EAAKK,SAEtD0L,IACFhM,EAAMiB,KAAOmK,GAAgBpL,EAAMiB,KAAMhB,EAAKE,KAAMF,EAAKG,OACzDJ,EAAMmB,KAAOiK,GAAgBpL,EAAMmB,KAAMlB,EAAKI,IAAKJ,EAAKK,SAG9D,CA0BIuL,CAAgBznB,EAAQ6b,EAE5B,CAEA,SAASgM,KACP,MAAyB,qBAAX3oB,QAA8C,qBAAb4oB,QACjD,CACA,SAASC,GAAeC,GACtB,IAAI9D,EAAS8D,EAAQC,WAIrB,OAHI/D,GAAgC,wBAAtBA,EAAO3vB,aACnB2vB,EAASA,EAAOgE,MAEXhE,CACT,CACA,SAASiE,GAAcC,EAAYtT,EAAMuT,GACvC,IAAIC,EASJ,MAR0B,kBAAfF,GACTE,EAAgB5W,SAAS0W,EAAY,KACJ,IAA7BA,EAAWlxB,QAAQ,OACrBoxB,EAAgBA,EAAgB,IAAMxT,EAAKmT,WAAWI,KAGxDC,EAAgBF,EAEXE,CACT,CACA,MAAMC,GAAoBC,GAAYtpB,OAAOqpB,iBAAiBC,EAAS,MAIvE,MAAMC,GAAY,CAAC,MAAO,QAAS,SAAU,QAC7C,SAASC,GAAmBC,EAAQ1S,EAAO2S,GACzC,MAAMC,EAAS,CAAC,EAChBD,EAASA,EAAS,IAAMA,EAAS,GACjC,IAAK,IAAI/yB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMizB,EAAML,GAAU5yB,GACtBgzB,EAAOC,GAAO1zB,WAAWuzB,EAAO1S,EAAQ,IAAM6S,EAAMF,KAAY,CAClE,CAGA,OAFAC,EAAO7P,MAAQ6P,EAAO9M,KAAO8M,EAAO7M,MACpC6M,EAAOzO,OAASyO,EAAO5M,IAAM4M,EAAO3M,OAC7B2M,CACT,CACA,MAAME,GAAeA,CAAChxB,EAAGE,EAAGrB,KAAYmB,EAAI,GAAKE,EAAI,MAAQrB,IAAWA,EAAOoyB,YAkB/E,SAASC,GAAoBC,EAAKxT,GAChC,GAAI,WAAYwT,EACd,OAAOA,EAET,MAAM,OAAClP,EAAM,wBAAEH,GAA2BnE,EACpCO,EAAQsS,GAAiBvO,GACzBmP,EAAgC,eAApBlT,EAAMmT,UAClBC,EAAWX,GAAmBzS,EAAO,WACrCqT,EAAUZ,GAAmBzS,EAAO,SAAU,UAC9C,EAACle,EAAC,EAAEE,EAAC,IAAEsxB,GA1Bf,SAA2B3tB,EAAGoe,GAC5B,MAAMwP,EAAU5tB,EAAE4tB,QACZ9yB,EAAS8yB,GAAWA,EAAQxzB,OAASwzB,EAAQ,GAAK5tB,GAClD,QAAC6tB,EAAO,QAAEC,GAAWhzB,EAC3B,IACIqB,EAAGE,EADHsxB,GAAM,EAEV,GAAIR,GAAaU,EAASC,EAAS9tB,EAAEhF,QACnCmB,EAAI0xB,EACJxxB,EAAIyxB,MACC,CACL,MAAMnO,EAAOvB,EAAO2P,wBACpB5xB,EAAIrB,EAAOkzB,QAAUrO,EAAKQ,KAC1B9jB,EAAIvB,EAAOmzB,QAAUtO,EAAKU,IAC1BsN,GAAM,CACR,CACA,MAAO,CAACxxB,IAAGE,IAAGsxB,MAChB,CAUsBO,CAAkBZ,EAAKlP,GACrCO,EAAU8O,EAAStN,MAAQwN,GAAOD,EAAQvN,MAC1CvB,EAAU6O,EAASpN,KAAOsN,GAAOD,EAAQrN,KAC/C,IAAI,MAACjD,EAAK,OAAEoB,GAAU1E,EAKtB,OAJIyT,IACFnQ,GAASqQ,EAASrQ,MAAQsQ,EAAQtQ,MAClCoB,GAAUiP,EAASjP,OAASkP,EAAQlP,QAE/B,CACLriB,EAAG0B,KAAKc,OAAOxC,EAAIwiB,GAAWvB,EAAQgB,EAAOhB,MAAQa,GACrD5hB,EAAGwB,KAAKc,OAAOtC,EAAIuiB,GAAWJ,EAASJ,EAAOI,OAASP,GAE3D,CA0BA,MAAMkQ,GAASjyB,GAAK2B,KAAKc,MAAU,GAAJzC,GAAU,GACzC,SAASkyB,GAAehQ,EAAQiQ,EAASC,EAAUC,GACjD,MAAMlU,EAAQsS,GAAiBvO,GACzBoQ,EAAU1B,GAAmBzS,EAAO,UACpC8H,EAAWoK,GAAclS,EAAM8H,SAAU/D,EAAQ,gBAAkBpgB,EACnEywB,EAAYlC,GAAclS,EAAMoU,UAAWrQ,EAAQ,iBAAmBpgB,EACtE0wB,EA/BR,SAA0BtQ,EAAQhB,EAAOoB,GACvC,IAAI2D,EAAUsM,EACd,QAAc5sB,IAAVub,QAAkCvb,IAAX2c,EAAsB,CAC/C,MAAMmQ,EAAYxC,GAAe/N,GACjC,GAAKuQ,EAGE,CACL,MAAMhP,EAAOgP,EAAUZ,wBACjBa,EAAiBjC,GAAiBgC,GAClCE,EAAkB/B,GAAmB8B,EAAgB,SAAU,SAC/DE,EAAmBhC,GAAmB8B,EAAgB,WAC5DxR,EAAQuC,EAAKvC,MAAQ0R,EAAiB1R,MAAQyR,EAAgBzR,MAC9DoB,EAASmB,EAAKnB,OAASsQ,EAAiBtQ,OAASqQ,EAAgBrQ,OACjE2D,EAAWoK,GAAcqC,EAAezM,SAAUwM,EAAW,eAC7DF,EAAYlC,GAAcqC,EAAeH,UAAWE,EAAW,eACjE,MAXEvR,EAAQgB,EAAO2Q,YACfvQ,EAASJ,EAAO4Q,YAWpB,CACA,MAAO,CACL5R,QACAoB,SACA2D,SAAUA,GAAYnkB,EACtBywB,UAAWA,GAAazwB,EAE5B,CAOwBixB,CAAiB7Q,EAAQiQ,EAASC,GACxD,IAAI,MAAClR,EAAK,OAAEoB,GAAUkQ,EACtB,GAAwB,gBAApBrU,EAAMmT,UAA6B,CACrC,MAAME,EAAUZ,GAAmBzS,EAAO,SAAU,SAC9CoT,EAAWX,GAAmBzS,EAAO,WAC3C+C,GAASqQ,EAASrQ,MAAQsQ,EAAQtQ,MAClCoB,GAAUiP,EAASjP,OAASkP,EAAQlP,MACtC,CAQA,OAPApB,EAAQvf,KAAK6B,IAAI,EAAG0d,EAAQoR,EAAQpR,OACpCoB,EAAS3gB,KAAK6B,IAAI,EAAG6uB,EAAc1wB,KAAKkB,MAAMqe,EAAQmR,GAAe/P,EAASgQ,EAAQhQ,QACtFpB,EAAQ+Q,GAAOtwB,KAAK4B,IAAI2d,EAAO+E,EAAUuM,EAAcvM,WACvD3D,EAAS2P,GAAOtwB,KAAK4B,IAAI+e,EAAQiQ,EAAWC,EAAcD,YACtDrR,IAAUoB,IACZA,EAAS2P,GAAO/Q,EAAQ,IAEnB,CACLA,QACAoB,SAEJ,CACA,SAAS0Q,GAAYpV,EAAOqV,EAAYC,GACtC,MAAMC,EAAaF,GAAc,EAC3BG,EAAezxB,KAAKkB,MAAM+a,EAAM0E,OAAS6Q,GACzCE,EAAc1xB,KAAKkB,MAAM+a,EAAMsD,MAAQiS,GAC7CvV,EAAM0E,OAAS8Q,EAAeD,EAC9BvV,EAAMsD,MAAQmS,EAAcF,EAC5B,MAAMjR,EAAStE,EAAMsE,OAKrB,OAJIA,EAAO/D,QAAU+U,IAAgBhR,EAAO/D,MAAMmE,SAAWJ,EAAO/D,MAAM+C,SACxEgB,EAAO/D,MAAMmE,OAAS,GAAHnH,OAAMyC,EAAM0E,OAAM,MACrCJ,EAAO/D,MAAM+C,MAAQ,GAAH/F,OAAMyC,EAAMsD,MAAK,QAEjCtD,EAAMmE,0BAA4BoR,GAC/BjR,EAAOI,SAAW8Q,GAClBlR,EAAOhB,QAAUmS,KACtBzV,EAAMmE,wBAA0BoR,EAChCjR,EAAOI,OAAS8Q,EAChBlR,EAAOhB,MAAQmS,EACfzV,EAAMW,IAAI+U,aAAaH,EAAY,EAAG,EAAGA,EAAY,EAAG,IACjD,EAGX,CACA,MAAMI,GAAgC,WACpC,IAAIC,GAAmB,EACvB,IACE,MAAMl0B,EAAU,CACd,WAAIm0B,GAEF,OADAD,GAAmB,GACZ,CACT,GAEFpsB,OAAOssB,iBAAiB,OAAQ,KAAMp0B,GACtC8H,OAAOusB,oBAAoB,OAAQ,KAAMr0B,EAC3C,CAAE,MAAOwE,GACT,CACA,OAAO0vB,CACT,CAdsC,GAetC,SAASI,GAAalD,EAASptB,GAC7B,MAAMnH,EAhJR,SAAkB03B,EAAIvwB,GACpB,OAAOmtB,GAAiBoD,GAAIC,iBAAiBxwB,EAC/C,CA8IgBywB,CAASrD,EAASptB,GAC1BgkB,EAAUnrB,GAASA,EAAMorB,MAAM,qBACrC,OAAOD,GAAWA,EAAQ,QAAK3hB,CACjC,CAEA,SAASquB,GAAazlB,EAAIC,EAAI9E,EAAGkV,GAC/B,MAAO,CACL3e,EAAGsO,EAAGtO,EAAIyJ,GAAK8E,EAAGvO,EAAIsO,EAAGtO,GACzBE,EAAGoO,EAAGpO,EAAIuJ,GAAK8E,EAAGrO,EAAIoO,EAAGpO,GAE7B,CACA,SAAS8zB,GAAsB1lB,EAAIC,EAAI9E,EAAGkV,GACxC,MAAO,CACL3e,EAAGsO,EAAGtO,EAAIyJ,GAAK8E,EAAGvO,EAAIsO,EAAGtO,GACzBE,EAAY,WAATye,EAAoBlV,EAAI,GAAM6E,EAAGpO,EAAIqO,EAAGrO,EAChC,UAATye,EAAmBlV,EAAI,EAAI6E,EAAGpO,EAAIqO,EAAGrO,EACrCuJ,EAAI,EAAI8E,EAAGrO,EAAIoO,EAAGpO,EAExB,CACA,SAAS+zB,GAAqB3lB,EAAIC,EAAI9E,EAAGkV,GACvC,MAAMuV,EAAM,CAACl0B,EAAGsO,EAAGwW,KAAM5kB,EAAGoO,EAAG0W,MACzBmP,EAAM,CAACn0B,EAAGuO,EAAGsW,KAAM3kB,EAAGqO,EAAGwW,MACzB3jB,EAAI2yB,GAAazlB,EAAI4lB,EAAKzqB,GAC1BpI,EAAI0yB,GAAaG,EAAKC,EAAK1qB,GAC3BqD,EAAIinB,GAAaI,EAAK5lB,EAAI9E,GAC1BqC,EAAIioB,GAAa3yB,EAAGC,EAAGoI,GACvB5F,EAAIkwB,GAAa1yB,EAAGyL,EAAGrD,GAC7B,OAAOsqB,GAAajoB,EAAGjI,EAAG4F,EAC5B,CAEA,MAAM2qB,GAAY,IAAIC,IAWtB,SAASC,GAAaC,EAAKC,EAAQn1B,GACjC,OAXF,SAAyBm1B,EAAQn1B,GAC/BA,EAAUA,GAAW,CAAC,EACtB,MAAMo1B,EAAWD,EAASE,KAAKC,UAAUt1B,GACzC,IAAIu1B,EAAYR,GAAU3U,IAAIgV,GAK9B,OAJKG,IACHA,EAAY,IAAIC,KAAKC,aAAaN,EAAQn1B,GAC1C+0B,GAAUttB,IAAI2tB,EAAUG,IAEnBA,CACT,CAESG,CAAgBP,EAAQn1B,GAAS21B,OAAOT,EACjD,CA0CA,SAASU,GAAcC,EAAKC,EAAOlU,GACjC,OAAOiU,EAzCqB,SAASC,EAAOlU,GAC5C,MAAO,CACLjhB,EAAEA,GACOm1B,EAAQA,EAAQlU,EAAQjhB,EAEjCo1B,QAAAA,CAASvnB,GACPoT,EAAQpT,CACV,EACA6X,UAAU7d,GACM,WAAVA,EACKA,EAEQ,UAAVA,EAAoB,OAAS,QAEtCwtB,MAAKA,CAACr1B,EAAG9D,IACA8D,EAAI9D,EAEbo5B,WAAUA,CAACt1B,EAAGu1B,IACLv1B,EAAIu1B,EAGjB,CAoBeC,CAAsBL,EAAOlU,GAlBnC,CACLjhB,EAAEA,GACOA,EAETo1B,QAAAA,CAASvnB,GACT,EACA6X,UAAU7d,GACDA,EAETwtB,MAAKA,CAACr1B,EAAG9D,IACA8D,EAAI9D,EAEbo5B,WAAUA,CAACt1B,EAAGy1B,IACLz1B,EAMb,CACA,SAAS01B,GAAsBpX,EAAKqX,GAClC,IAAIzX,EAAO0X,EACO,QAAdD,GAAqC,QAAdA,IACzBzX,EAAQI,EAAI2D,OAAO/D,MACnB0X,EAAW,CACT1X,EAAM2V,iBAAiB,aACvB3V,EAAM2X,oBAAoB,cAE5B3X,EAAM4X,YAAY,YAAaH,EAAW,aAC1CrX,EAAIyX,kBAAoBH,EAE5B,CACA,SAASI,GAAqB1X,EAAKsX,QAChBlwB,IAAbkwB,WACKtX,EAAIyX,kBACXzX,EAAI2D,OAAO/D,MAAM4X,YAAY,YAAaF,EAAS,GAAIA,EAAS,IAEpE,CAEA,SAASK,GAAW5yB,GAClB,MAAiB,UAAbA,EACK,CACL6yB,QAASpxB,EACTqxB,QAASvxB,EACTwxB,UAAWvxB,GAGR,CACLqxB,QAAS1wB,EACT2wB,QAASA,CAAC/0B,EAAGC,IAAMD,EAAIC,EACvB+0B,UAAWp2B,GAAKA,EAEpB,CACA,SAASq2B,GAAgBC,GAAmC,IAAlC,MAACvxB,EAAK,IAAEC,EAAG,MAAEoD,EAAK,KAAEgnB,EAAI,MAAElR,GAAMoY,EACxD,MAAO,CACLvxB,MAAOA,EAAQqD,EACfpD,IAAKA,EAAMoD,EACXgnB,KAAMA,IAASpqB,EAAMD,EAAQ,GAAKqD,IAAU,EAC5C8V,QAEJ,CAyBA,SAASqY,GAAcC,EAASvuB,EAAQwuB,GACtC,IAAKA,EACH,MAAO,CAACD,GAEV,MAAM,SAACnzB,EAAU0B,MAAO2xB,EAAY1xB,IAAK2xB,GAAYF,EAC/CruB,EAAQH,EAAOhK,QACf,QAACk4B,EAAO,QAAED,EAAO,UAAEE,GAAaH,GAAW5yB,IAC3C,MAAC0B,EAAK,IAAEC,EAAG,KAAEoqB,EAAI,MAAElR,GA/B3B,SAAoBsY,EAASvuB,EAAQwuB,GACnC,MAAM,SAACpzB,EAAU0B,MAAO2xB,EAAY1xB,IAAK2xB,GAAYF,GAC/C,QAACP,EAAO,UAAEE,GAAaH,GAAW5yB,GAClC+E,EAAQH,EAAOhK,OACrB,IACIH,EAAGO,GADH,MAAC0G,EAAK,IAAEC,EAAG,KAAEoqB,GAAQoH,EAEzB,GAAIpH,EAAM,CAGR,IAFArqB,GAASqD,EACTpD,GAAOoD,EACFtK,EAAI,EAAGO,EAAO+J,EAAOtK,EAAIO,GACvB63B,EAAQE,EAAUnuB,EAAOlD,EAAQqD,GAAO/E,IAAYqzB,EAAYC,KADjC74B,EAIpCiH,IACAC,IAEFD,GAASqD,EACTpD,GAAOoD,CACT,CAIA,OAHIpD,EAAMD,IACRC,GAAOoD,GAEF,CAACrD,QAAOC,MAAKoqB,OAAMlR,MAAOsY,EAAQtY,MAC3C,CAQoC0Y,CAAWJ,EAASvuB,EAAQwuB,GACxD3F,EAAS,GACf,IAEI50B,EAAO2nB,EAAOgT,EAFdC,GAAS,EACTC,EAAW,KAEf,MAEMC,EAAcA,IAAMF,GAFEZ,EAAQQ,EAAYG,EAAW36B,IAA6C,IAAnCi6B,EAAQO,EAAYG,GAGnFI,EAAaA,KAAOH,GAF6B,IAA7BX,EAAQQ,EAAUz6B,IAAgBg6B,EAAQS,EAAUE,EAAW36B,GAGzF,IAAK,IAAI4B,EAAIiH,EAAOyqB,EAAOzqB,EAAOjH,GAAKkH,IAAOlH,EAC5C+lB,EAAQ5b,EAAOnK,EAAIsK,GACfyb,EAAMoJ,OAGV/wB,EAAQk6B,EAAUvS,EAAMxgB,IACpBnH,IAAU26B,IAGdC,EAASZ,EAAQh6B,EAAOw6B,EAAYC,GACnB,OAAbI,GAAqBC,MACvBD,EAA0C,IAA/BZ,EAAQj6B,EAAOw6B,GAAoB54B,EAAI0xB,GAEnC,OAAbuH,GAAqBE,MACvBnG,EAAOpwB,KAAK21B,GAAiB,CAACtxB,MAAOgyB,EAAU/xB,IAAKlH,EAAGsxB,OAAMhnB,QAAO8V,WACpE6Y,EAAW,MAEbvH,EAAO1xB,EACP+4B,EAAY36B,IAKd,OAHiB,OAAb66B,GACFjG,EAAOpwB,KAAK21B,GAAiB,CAACtxB,MAAOgyB,EAAU/xB,MAAKoqB,OAAMhnB,QAAO8V,WAE5D4S,CACT,CACA,SAASoG,GAAe3R,EAAMkR,GAC5B,MAAM3F,EAAS,GACTqG,EAAW5R,EAAK4R,SACtB,IAAK,IAAIr5B,EAAI,EAAGA,EAAIq5B,EAASl5B,OAAQH,IAAK,CACxC,MAAMs5B,EAAMb,GAAcY,EAASr5B,GAAIynB,EAAKtd,OAAQwuB,GAChDW,EAAIn5B,QACN6yB,EAAOpwB,QAAQ02B,EAEnB,CACA,OAAOtG,CACT,CAiEA,SAASuG,GAAc9R,EAAM4R,EAAUlvB,EAAQqvB,GAC7C,OAAKA,GAAmBA,EAAetM,YAAe/iB,EAKxD,SAAyBsd,EAAM4R,EAAUlvB,EAAQqvB,GAC/C,MAAMC,EAAehS,EAAKiS,OAAOtV,aAC3BuV,EAAYC,GAAUnS,EAAKlmB,UAC1Bs4B,cAAen5B,EAAca,SAAS,SAACiwB,IAAa/J,EACrDnd,EAAQH,EAAOhK,OACf6yB,EAAS,GACf,IAAI8G,EAAYH,EACZ1yB,EAAQoyB,EAAS,GAAGpyB,MACpBjH,EAAIiH,EACR,SAAS8yB,EAAS3yB,EAAGrB,EAAGoI,EAAG6rB,GACzB,MAAMC,EAAMzI,GAAY,EAAI,EAC5B,GAAIpqB,IAAMrB,EAAV,CAIA,IADAqB,GAAKkD,EACEH,EAAO/C,EAAIkD,GAAO6kB,MACvB/nB,GAAK6yB,EAEP,KAAO9vB,EAAOpE,EAAIuE,GAAO6kB,MACvBppB,GAAKk0B,EAEH7yB,EAAIkD,IAAUvE,EAAIuE,IACpB0oB,EAAOpwB,KAAK,CAACqE,MAAOG,EAAIkD,EAAOpD,IAAKnB,EAAIuE,EAAOgnB,KAAMnjB,EAAGiS,MAAO4Z,IAC/DF,EAAYE,EACZ/yB,EAAQlB,EAAIuE,EAXd,CAaF,CACA,IAAK,MAAMouB,KAAWW,EAAU,CAC9BpyB,EAAQuqB,EAAWvqB,EAAQyxB,EAAQzxB,MACnC,IACImZ,EADAsR,EAAOvnB,EAAOlD,EAAQqD,GAE1B,IAAKtK,EAAIiH,EAAQ,EAAGjH,GAAK04B,EAAQxxB,IAAKlH,IAAK,CACzC,MAAMoxB,EAAKjnB,EAAOnK,EAAIsK,GACtB8V,EAAQwZ,GAAUJ,EAAetM,WAAWvC,GAAc8O,EAAc,CACtEl7B,KAAM,UACN27B,GAAIxI,EACJlhB,GAAI4gB,EACJ+I,aAAcn6B,EAAI,GAAKsK,EACvB8vB,YAAap6B,EAAIsK,EACjB5J,mBAEE25B,GAAaja,EAAO0Z,IACtBC,EAAS9yB,EAAOjH,EAAI,EAAG04B,EAAQpH,KAAMwI,GAEvCpI,EAAON,EACP0I,EAAY1Z,CACd,CACInZ,EAAQjH,EAAI,GACd+5B,EAAS9yB,EAAOjH,EAAI,EAAG04B,EAAQpH,KAAMwI,EAEzC,CACA,OAAO9G,CACT,CAtDSsH,CAAgB7S,EAAM4R,EAAUlvB,EAAQqvB,GAFtCH,CAGX,CAsDA,SAASO,GAAUr4B,GACjB,MAAO,CACLie,gBAAiBje,EAAQie,gBACzB+a,eAAgBh5B,EAAQg5B,eACxBC,WAAYj5B,EAAQi5B,WACpBC,iBAAkBl5B,EAAQk5B,iBAC1BC,gBAAiBn5B,EAAQm5B,gBACzB9U,YAAarkB,EAAQqkB,YACrBnG,YAAale,EAAQke,YAEzB,CACA,SAAS4a,GAAaja,EAAO0Z,GAC3B,OAAOA,GAAalD,KAAKC,UAAUzW,KAAWwW,KAAKC,UAAUiD,EAC/D,CCx6EA,IAAIa,GAAW,IAvIf,MACE/d,WAAAA,GACEG,KAAK6d,SAAW,KAChB7d,KAAK8d,QAAU,IAAItE,IACnBxZ,KAAK+d,UAAW,EAChB/d,KAAKge,eAAYnzB,CACnB,CACAozB,OAAAA,CAAQnb,EAAOob,EAAOC,EAAM38B,GAC1B,MAAM48B,EAAYF,EAAMtyB,UAAUpK,GAC5B68B,EAAWH,EAAMI,SACvBF,EAAUtyB,SAAQpJ,GAAMA,EAAG,CACzBogB,QACAyb,QAASL,EAAMK,QACfF,WACAG,YAAa33B,KAAK4B,IAAI01B,EAAOD,EAAMh0B,MAAOm0B,MAE9C,CACAI,QAAAA,GACMze,KAAK6d,WAGT7d,KAAK+d,UAAW,EAChB/d,KAAK6d,SAAWxxB,EAAiBzK,KAAK0K,QAAQ,KAC5C0T,KAAK0e,UACL1e,KAAK6d,SAAW,KACZ7d,KAAK+d,UACP/d,KAAKye,UACP,IAEJ,CACAC,OAAAA,GAA2B,IAAnBP,EAAIvzB,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG+zB,KAAKC,MACdC,EAAY,EAChB7e,KAAK8d,QAAQhyB,SAAQ,CAACoyB,EAAOpb,KAC3B,IAAKob,EAAMY,UAAYZ,EAAMlyB,MAAM5I,OACjC,OAEF,MAAM4I,EAAQkyB,EAAMlyB,MACpB,IAEItF,EAFAzD,EAAI+I,EAAM5I,OAAS,EACnB27B,GAAO,EAEX,KAAO97B,GAAK,IAAKA,EACfyD,EAAOsF,EAAM/I,GACTyD,EAAKs4B,SACHt4B,EAAKu4B,OAASf,EAAMI,WACtBJ,EAAMI,SAAW53B,EAAKu4B,QAExBv4B,EAAKw4B,KAAKf,GACVY,GAAO,IAEP/yB,EAAM/I,GAAK+I,EAAMA,EAAM5I,OAAS,GAChC4I,EAAMmzB,OAGNJ,IACFjc,EAAMic,OACN/e,KAAKie,QAAQnb,EAAOob,EAAOC,EAAM,aAE9BnyB,EAAM5I,SACT86B,EAAMY,SAAU,EAChB9e,KAAKie,QAAQnb,EAAOob,EAAOC,EAAM,YACjCD,EAAMK,SAAU,GAElBM,GAAa7yB,EAAM5I,MAAM,IAE3B4c,KAAKge,UAAYG,EACC,IAAdU,IACF7e,KAAK+d,UAAW,EAEpB,CACAqB,SAAAA,CAAUtc,GACR,MAAMuc,EAASrf,KAAK8d,QACpB,IAAII,EAAQmB,EAAOza,IAAI9B,GAavB,OAZKob,IACHA,EAAQ,CACNY,SAAS,EACTP,SAAS,EACTvyB,MAAO,GACPJ,UAAW,CACT0zB,SAAU,GACVC,SAAU,KAGdF,EAAOpzB,IAAI6W,EAAOob,IAEbA,CACT,CACAsB,MAAAA,CAAO1c,EAAO2c,EAAOC,GACnB1f,KAAKof,UAAUtc,GAAOlX,UAAU6zB,GAAO55B,KAAK65B,EAC9C,CACAvzB,GAAAA,CAAI2W,EAAO9W,GACJA,GAAUA,EAAM5I,QAGrB4c,KAAKof,UAAUtc,GAAO9W,MAAMnG,QAAQmG,EACtC,CACArF,GAAAA,CAAImc,GACF,OAAO9C,KAAKof,UAAUtc,GAAO9W,MAAM5I,OAAS,CAC9C,CACA8G,KAAAA,CAAM4Y,GACJ,MAAMob,EAAQle,KAAK8d,QAAQlZ,IAAI9B,GAC1Bob,IAGLA,EAAMY,SAAU,EAChBZ,EAAMh0B,MAAQy0B,KAAKC,MACnBV,EAAMI,SAAWJ,EAAMlyB,MAAM2zB,QAAO,CAACC,EAAKC,IAAQh5B,KAAK6B,IAAIk3B,EAAKC,EAAIC,YAAY,GAChF9f,KAAKye,WACP,CACAK,OAAAA,CAAQhc,GACN,IAAK9C,KAAK+d,SACR,OAAO,EAET,MAAMG,EAAQle,KAAK8d,QAAQlZ,IAAI9B,GAC/B,SAAKob,GAAUA,EAAMY,SAAYZ,EAAMlyB,MAAM5I,OAI/C,CACA28B,IAAAA,CAAKjd,GACH,MAAMob,EAAQle,KAAK8d,QAAQlZ,IAAI9B,GAC/B,IAAKob,IAAUA,EAAMlyB,MAAM5I,OACzB,OAEF,MAAM4I,EAAQkyB,EAAMlyB,MACpB,IAAI/I,EAAI+I,EAAM5I,OAAS,EACvB,KAAOH,GAAK,IAAKA,EACf+I,EAAM/I,GAAG+8B,SAEX9B,EAAMlyB,MAAQ,GACdgU,KAAKie,QAAQnb,EAAOob,EAAOS,KAAKC,MAAO,WACzC,CACAqB,MAAAA,CAAOnd,GACL,OAAO9C,KAAK8d,QAAQtN,OAAO1N,EAC7B,GAIF,MAAM9D,GAAc,cACdkhB,GAAgB,CACpBC,QAAOA,CAAC/zB,EAAM+S,EAAIihB,IACTA,EAAS,GAAMjhB,EAAK/S,EAE7BoU,KAAAA,CAAMpU,EAAM+S,EAAIihB,GACd,MAAMC,EAAK7f,GAAMpU,GAAQ4S,IACnB0B,EAAK2f,EAAGlgB,OAASK,GAAMrB,GAAMH,IACnC,OAAO0B,GAAMA,EAAGP,MACZO,EAAGH,IAAI8f,EAAID,GAAQ7tB,YACnB4M,CACN,EACAmhB,OAAMA,CAACl0B,EAAM+S,EAAIihB,IACRh0B,GAAQ+S,EAAK/S,GAAQg0B,GAGhC,MAAMG,GACJ1gB,WAAAA,CAAY2gB,EAAKx8B,EAAQ+oB,EAAM5N,GAC7B,MAAMshB,EAAez8B,EAAO+oB,GAC5B5N,EAAKqO,GAAQ,CAACgT,EAAIrhB,GAAIA,EAAIshB,EAAcD,EAAIp0B,OAC5C,MAAMA,EAAOohB,GAAQ,CAACgT,EAAIp0B,KAAMq0B,EAActhB,IAC9Ca,KAAKgf,SAAU,EACfhf,KAAK0gB,IAAMF,EAAI99B,IAAMw9B,GAAcM,EAAIh/B,aAAe4K,GACtD4T,KAAK2gB,QAAU3xB,GAAQwxB,EAAII,SAAW5xB,GAAQC,OAC9C+Q,KAAK6gB,OAASh6B,KAAKkB,MAAM42B,KAAKC,OAAS4B,EAAIM,OAAS,IACpD9gB,KAAK8f,UAAY9f,KAAKif,OAASp4B,KAAKkB,MAAMy4B,EAAIlC,UAC9Cte,KAAK+gB,QAAUP,EAAIjM,KACnBvU,KAAKghB,QAAUh9B,EACfgc,KAAKihB,MAAQlU,EACb/M,KAAKkhB,MAAQ90B,EACb4T,KAAKmhB,IAAMhiB,EACXa,KAAKohB,eAAYv2B,CACnB,CACAw2B,MAAAA,GACE,OAAOrhB,KAAKgf,OACd,CACAsC,MAAAA,CAAOd,EAAKrhB,EAAIgf,GACd,GAAIne,KAAKgf,QAAS,CAChBhf,KAAKie,SAAQ,GACb,MAAMwC,EAAezgB,KAAKghB,QAAQhhB,KAAKihB,OACjCM,EAAUpD,EAAOne,KAAK6gB,OACtBW,EAASxhB,KAAK8f,UAAYyB,EAChCvhB,KAAK6gB,OAAS1C,EACdne,KAAK8f,UAAYj5B,KAAKkB,MAAMlB,KAAK6B,IAAI84B,EAAQhB,EAAIlC,WACjDte,KAAKif,QAAUsC,EACfvhB,KAAK+gB,QAAUP,EAAIjM,KACnBvU,KAAKmhB,IAAM3T,GAAQ,CAACgT,EAAIrhB,GAAIA,EAAIshB,EAAcD,EAAIp0B,OAClD4T,KAAKkhB,MAAQ1T,GAAQ,CAACgT,EAAIp0B,KAAMq0B,EAActhB,GAChD,CACF,CACA6gB,MAAAA,GACMhgB,KAAKgf,UACPhf,KAAKkf,KAAKP,KAAKC,OACf5e,KAAKgf,SAAU,EACfhf,KAAKie,SAAQ,GAEjB,CACAiB,IAAAA,CAAKf,GACH,MAAMoD,EAAUpD,EAAOne,KAAK6gB,OACtBvC,EAAWte,KAAK8f,UAChB/S,EAAO/M,KAAKihB,MACZ70B,EAAO4T,KAAKkhB,MACZ3M,EAAOvU,KAAK+gB,MACZ5hB,EAAKa,KAAKmhB,IAChB,IAAIf,EAEJ,GADApgB,KAAKgf,QAAU5yB,IAAS+S,IAAOoV,GAASgN,EAAUjD,IAC7Cte,KAAKgf,QAGR,OAFAhf,KAAKghB,QAAQjU,GAAQ5N,OACrBa,KAAKie,SAAQ,GAGXsD,EAAU,EACZvhB,KAAKghB,QAAQjU,GAAQ3gB,GAGvBg0B,EAAUmB,EAAUjD,EAAY,EAChC8B,EAAS7L,GAAQ6L,EAAS,EAAI,EAAIA,EAASA,EAC3CA,EAASpgB,KAAK2gB,QAAQ95B,KAAK4B,IAAI,EAAG5B,KAAK6B,IAAI,EAAG03B,KAC9CpgB,KAAKghB,QAAQjU,GAAQ/M,KAAK0gB,IAAIt0B,EAAM+S,EAAIihB,GAC1C,CACAqB,IAAAA,GACE,MAAMC,EAAW1hB,KAAKohB,YAAcphB,KAAKohB,UAAY,IACrD,OAAO,IAAIO,SAAQ,CAACC,EAAKC,KACvBH,EAAS77B,KAAK,CAAC+7B,MAAKC,OAAK,GAE7B,CACA5D,OAAAA,CAAQ6D,GACN,MAAMC,EAASD,EAAW,MAAQ,MAC5BJ,EAAW1hB,KAAKohB,WAAa,GACnC,IAAK,IAAIn+B,EAAI,EAAGA,EAAIy+B,EAASt+B,OAAQH,IACnCy+B,EAASz+B,GAAG8+B,IAEhB,EAKFzf,GAASrW,IAAI,YAAa,CACxB60B,WAAOj2B,EACPyzB,SAAU,IACVsC,OAAQ,eACRl+B,QAAImI,EACJuB,UAAMvB,EACN0pB,UAAM1pB,EACNsU,QAAItU,EACJrJ,UAAMqJ,IAER,MAAMm3B,GAAmBvgC,OAAO0B,KAAKmf,GAASE,WAC9CF,GAASqC,SAAS,YAAa,CAC7BiB,WAAW,EACXD,YAAY,EACZF,YAAcV,GAAkB,eAATA,GAAkC,eAATA,GAAkC,OAATA,IAE3EzC,GAASrW,IAAI,aAAc,CACzBg2B,OAAQ,CACNzgC,KAAM,QACN0gC,WApBW,CAAC,QAAS,cAAe,oBAsBtCC,QAAS,CACP3gC,KAAM,SACN0gC,WAzBY,CAAC,IAAK,IAAK,cAAe,SAAU,cA4BpD5f,GAASqC,SAAS,aAAc,CAC9BiB,UAAW,cAEbtD,GAASrW,IAAI,cAAe,CAC1Bo1B,OAAQ,CACN7e,UAAW,CACT8b,SAAU,MAGd8D,OAAQ,CACN5f,UAAW,CACT8b,SAAU,IAGd+D,KAAM,CACJC,WAAY,CACVL,OAAQ,CACN71B,KAAM,eAERm2B,QAAS,CACP/gC,KAAM,UACN88B,SAAU,KAIhBkE,KAAM,CACJF,WAAY,CACVL,OAAQ,CACN9iB,GAAI,eAENojB,QAAS,CACP/gC,KAAM,UACNo/B,OAAQ,SACRl+B,GAAIwC,GAAS,EAAJA,OAKjB,MAAMu9B,GACJ5iB,WAAAA,CAAYiD,EAAO4f,GACjB1iB,KAAK2c,OAAS7Z,EACd9C,KAAK2iB,YAAc,IAAInJ,IACvBxZ,KAAK4iB,UAAUF,EACjB,CACAE,SAAAA,CAAUF,GACR,IAAK5gC,EAAS4gC,GACZ,OAEF,MAAMG,EAAgB7iB,KAAK2iB,YAC3BlhC,OAAOqhC,oBAAoBJ,GAAQ52B,SAAQzH,IACzC,MAAMm8B,EAAMkC,EAAOr+B,GACnB,IAAKvC,EAAS0+B,GACZ,OAEF,MAAMsB,EAAW,CAAC,EAClB,IAAK,MAAMiB,KAAUf,GACnBF,EAASiB,GAAUvC,EAAIuC,IAExBzhC,EAAQk/B,EAAI0B,aAAe1B,EAAI0B,YAAc,CAAC79B,IAAMyH,SAASihB,IACxDA,IAAS1oB,GAAQw+B,EAAcl8B,IAAIomB,IACrC8V,EAAc52B,IAAI8gB,EAAM+U,EAC1B,GACA,GAEN,CACAkB,eAAAA,CAAgBh/B,EAAQqe,GACtB,MAAM4gB,EAAa5gB,EAAO7d,QACpBA,EAwEV,SAA8BR,EAAQi/B,GACpC,IAAKA,EACH,OAEF,IAAIz+B,EAAUR,EAAOQ,QACrB,IAAKA,EAEH,YADAR,EAAOQ,QAAUy+B,GAGfz+B,EAAQ0+B,UACVl/B,EAAOQ,QAAUA,EAAU/C,OAAOiN,OAAO,CAAC,EAAGlK,EAAS,CAAC0+B,SAAS,EAAOC,YAAa,CAAC,KAEvF,OAAO3+B,CACT,CArFoB4+B,CAAqBp/B,EAAQi/B,GAC7C,IAAKz+B,EACH,MAAO,GAET,MAAM89B,EAAatiB,KAAKqjB,kBAAkB7+B,EAASy+B,GAOnD,OANIA,EAAWC,SAwDnB,SAAkBZ,EAAYJ,GAC5B,MAAMpD,EAAU,GACV37B,EAAO1B,OAAO0B,KAAK++B,GACzB,IAAK,IAAIj/B,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAAK,CACpC,MAAMqgC,EAAOhB,EAAWn/B,EAAKF,IACzBqgC,GAAQA,EAAKjC,UACfvC,EAAQj5B,KAAKy9B,EAAK7B,OAEtB,CACA,OAAOE,QAAQ4B,IAAIzE,EACrB,CAjEM0E,CAASx/B,EAAOQ,QAAQ2+B,YAAaF,GAAYQ,MAAK,KACpDz/B,EAAOQ,QAAUy+B,CAAU,IAC1B,SAGEX,CACT,CACAe,iBAAAA,CAAkBr/B,EAAQqe,GACxB,MAAMwgB,EAAgB7iB,KAAK2iB,YACrBL,EAAa,GACbxD,EAAU96B,EAAOm/B,cAAgBn/B,EAAOm/B,YAAc,CAAC,GACvDvW,EAAQnrB,OAAO0B,KAAKkf,GACpB8b,EAAOQ,KAAKC,MAClB,IAAI37B,EACJ,IAAKA,EAAI2pB,EAAMxpB,OAAS,EAAGH,GAAK,IAAKA,EAAG,CACtC,MAAM8pB,EAAOH,EAAM3pB,GACnB,GAAuB,MAAnB8pB,EAAK7mB,OAAO,GACd,SAEF,GAAa,YAAT6mB,EAAoB,CACtBuV,EAAWz8B,QAAQma,KAAKgjB,gBAAgBh/B,EAAQqe,IAChD,QACF,CACA,MAAMhhB,EAAQghB,EAAO0K,GACrB,IAAIvK,EAAYsc,EAAQ/R,GACxB,MAAMyT,EAAMqC,EAAcje,IAAImI,GAC9B,GAAIvK,EAAW,CACb,GAAIge,GAAOhe,EAAU6e,SAAU,CAC7B7e,EAAU8e,OAAOd,EAAKn/B,EAAO88B,GAC7B,QACF,CACE3b,EAAUwd,QAEd,CACKQ,GAAQA,EAAIlC,UAIjBQ,EAAQ/R,GAAQvK,EAAY,IAAI+d,GAAUC,EAAKx8B,EAAQ+oB,EAAM1rB,GAC7DihC,EAAWz8B,KAAK2c,IAJdxe,EAAO+oB,GAAQ1rB,CAKnB,CACA,OAAOihC,CACT,CACAhB,MAAAA,CAAOt9B,EAAQqe,GACb,GAA8B,IAA1BrC,KAAK2iB,YAAYl8B,KAEnB,YADAhF,OAAOiN,OAAO1K,EAAQqe,GAGxB,MAAMigB,EAAatiB,KAAKqjB,kBAAkBr/B,EAAQqe,GAClD,OAAIigB,EAAWl/B,QACbw6B,GAASzxB,IAAI6T,KAAK2c,OAAQ2F,IACnB,QAFT,CAIF,EA4BF,SAASoB,GAAUnf,EAAOof,GACxB,MAAMrZ,EAAO/F,GAASA,EAAM/f,SAAW,CAAC,EAClCxB,EAAUsnB,EAAKtnB,QACfyF,OAAmBoC,IAAbyf,EAAK7hB,IAAoBk7B,EAAkB,EACjDj7B,OAAmBmC,IAAbyf,EAAK5hB,IAAoBi7B,EAAkB,EACvD,MAAO,CACLz5B,MAAOlH,EAAU0F,EAAMD,EACvB0B,IAAKnH,EAAUyF,EAAMC,EAEzB,CAgCA,SAASk7B,GAAwB9gB,EAAO+gB,GACtC,MAAM1gC,EAAO,GACP2gC,EAAWhhB,EAAMihB,uBAAuBF,GAC9C,IAAI5gC,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAOsgC,EAAS1gC,OAAQH,EAAIO,IAAQP,EAC9CE,EAAK0C,KAAKi+B,EAAS7gC,GAAGW,OAExB,OAAOT,CACT,CACA,SAAS6gC,GAAWC,EAAO5iC,EAAO6iC,GAAuB,IAAd1/B,EAAOoG,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpD,MAAMzH,EAAO8gC,EAAM9gC,KACbghC,EAA8B,WAAjB3/B,EAAQsf,KAC3B,IAAI7gB,EAAGO,EAAMG,EAAcygC,EAC3B,GAAc,OAAV/iC,EAAJ,CAGA,IAAK4B,EAAI,EAAGO,EAAOL,EAAKC,OAAQH,EAAIO,IAAQP,EAAG,CAE7C,GADAU,GAAgBR,EAAKF,GACjBU,IAAiBugC,EAAS,CAC5B,GAAI1/B,EAAQ++B,IACV,SAEF,KACF,CACAa,EAAaH,EAAM5hB,OAAO1e,GACtB5B,EAAeqiC,KAAgBD,GAAyB,IAAV9iC,GAAekG,EAAKlG,KAAWkG,EAAK68B,MACpF/iC,GAAS+iC,EAEb,CACA,OAAO/iC,CAdP,CAeF,CAcA,SAASgjC,GAAU9f,EAAOpX,GACxB,MAAMm3B,EAAU/f,GAASA,EAAM/f,QAAQ8/B,QACvC,OAAOA,QAAwBz5B,IAAZy5B,QAAwCz5B,IAAfsC,EAAK82B,KACnD,CAWA,SAASM,GAAiBC,EAAQC,EAAUC,GAC1C,MAAMC,EAAWH,EAAOC,KAAcD,EAAOC,GAAY,CAAC,GAC1D,OAAOE,EAASD,KAAgBC,EAASD,GAAc,CAAC,EAC1D,CACA,SAASE,GAAoBX,EAAOY,EAAQC,EAAUtjC,GACpD,IAAK,MAAM2L,KAAQ03B,EAAOE,wBAAwBvjC,GAAMwB,UAAW,CACjE,MAAM3B,EAAQ4iC,EAAM92B,EAAKvJ,OACzB,GAAKkhC,GAAYzjC,EAAQ,IAAQyjC,GAAYzjC,EAAQ,EACnD,OAAO8L,EAAKvJ,KAEhB,CACA,OAAO,IACT,CACA,SAASohC,GAAaC,EAAYjT,GAChC,MAAM,MAAClP,EAAOoiB,YAAa/3B,GAAQ83B,EAC7BT,EAAS1hB,EAAMqiB,UAAYriB,EAAMqiB,QAAU,CAAC,IAC5C,OAAC13B,EAAM,OAAEo3B,EAAQjhC,MAAOD,GAAgBwJ,EACxCi4B,EAAQ33B,EAAOE,KACf03B,EAAQR,EAAOl3B,KACftJ,EA7BR,SAAqBihC,EAAYC,EAAYp4B,GAC3C,MAAO,GAAPkT,OAAUilB,EAAWnkC,GAAE,KAAAkf,OAAIklB,EAAWpkC,GAAE,KAAAkf,OAAIlT,EAAK82B,OAAS92B,EAAK3L,KACjE,CA2BcgkC,CAAY/3B,EAAQo3B,EAAQ13B,GAClC3J,EAAOwuB,EAAO5uB,OACpB,IAAI6gC,EACJ,IAAK,IAAIhhC,EAAI,EAAGA,EAAIO,IAAQP,EAAG,CAC7B,MAAMyD,EAAOsrB,EAAO/uB,IACb,CAACmiC,GAAQxhC,EAAO,CAACyhC,GAAQhkC,GAASqF,EAEzCu9B,GADmBv9B,EAAKy+B,UAAYz+B,EAAKy+B,QAAU,CAAC,IACjCE,GAASd,GAAiBC,EAAQngC,EAAKT,GAC1DqgC,EAAMtgC,GAAgBtC,EACtB4iC,EAAMwB,KAAOb,GAAoBX,EAAOY,GAAQ,EAAM13B,EAAK3L,MAC3DyiC,EAAMyB,QAAUd,GAAoBX,EAAOY,GAAQ,EAAO13B,EAAK3L,KACjE,CACF,CACA,SAASmkC,GAAgB7iB,EAAOnV,GAC9B,MAAM6W,EAAS1B,EAAM0B,OACrB,OAAO/iB,OAAO0B,KAAKqhB,GAAQoM,QAAOvsB,GAAOmgB,EAAOngB,GAAKsJ,OAASA,IAAMi4B,OACtE,CAyBA,SAASC,GAAY14B,EAAMnB,GACzB,MAAMrI,EAAewJ,EAAK83B,WAAWrhC,MAC/B+J,EAAOR,EAAK03B,QAAU13B,EAAK03B,OAAOl3B,KACxC,GAAKA,EAAL,CAGA3B,EAAQA,GAASmB,EAAKO,QACtB,IAAK,MAAMskB,KAAUhmB,EAAO,CAC1B,MAAMw4B,EAASxS,EAAOmT,QACtB,IAAKX,QAA2B35B,IAAjB25B,EAAO72B,SAAsD9C,IAA/B25B,EAAO72B,GAAMhK,GACxD,cAEK6gC,EAAO72B,GAAMhK,EACtB,CARA,CASF,CACA,MAAMmiC,GAAsBhiB,GAAkB,UAATA,GAA6B,SAATA,EACnDiiB,GAAmBA,CAACC,EAAQC,IAAWA,EAASD,EAASvkC,OAAOiN,OAAO,CAAC,EAAGs3B,GAGjF,MAAME,GACJrmB,WAAAA,CAAYiD,EAAOnf,GACjBqc,KAAK8C,MAAQA,EACb9C,KAAKmmB,KAAOrjB,EAAMW,IAClBzD,KAAKpc,MAAQD,EACbqc,KAAKomB,gBAAkB,CAAC,EACxBpmB,KAAKklB,YAAcllB,KAAKqmB,UACxBrmB,KAAKsmB,MAAQtmB,KAAKklB,YAAY1jC,KAC9Bwe,KAAKxb,aAAUqG,EACfmV,KAAK+R,UAAW,EAChB/R,KAAKumB,WAAQ17B,EACbmV,KAAKwmB,iBAAc37B,EACnBmV,KAAKymB,oBAAiB57B,EACtBmV,KAAK0mB,gBAAa77B,EAClBmV,KAAK2mB,gBAAa97B,EAClBmV,KAAK4mB,qBAAsB,EAC3B5mB,KAAK6mB,oBAAqB,EAC1B7mB,KAAK8mB,cAAWj8B,EAChBmV,KAAK+mB,UAAY,GACjB/mB,KAAKgnB,YACP,CACAA,UAAAA,GACE,MAAM75B,EAAO6S,KAAKklB,YAClBllB,KAAK4iB,YACL5iB,KAAKinB,aACL95B,EAAK+5B,SAAW7C,GAAUl3B,EAAK03B,OAAQ13B,GACvC6S,KAAKmnB,aACP,CACAC,WAAAA,CAAYzjC,GACNqc,KAAKpc,QAAUD,GACjBkiC,GAAY7lB,KAAKklB,aAEnBllB,KAAKpc,MAAQD,CACf,CACAsjC,UAAAA,GACE,MAAMnkB,EAAQ9C,KAAK8C,MACb3V,EAAO6S,KAAKklB,YACZmC,EAAUrnB,KAAKsnB,aACfC,EAAWA,CAAC55B,EAAMxI,EAAGE,EAAGmN,IAAe,MAAT7E,EAAexI,EAAa,MAATwI,EAAe6E,EAAInN,EACpEmiC,EAAMr6B,EAAKs6B,QAAUrlC,EAAeilC,EAAQI,QAAS9B,GAAgB7iB,EAAO,MAC5E4kB,EAAMv6B,EAAKw6B,QAAUvlC,EAAeilC,EAAQM,QAAShC,GAAgB7iB,EAAO,MAC5E8kB,EAAMz6B,EAAK06B,QAAUzlC,EAAeilC,EAAQQ,QAASlC,GAAgB7iB,EAAO,MAC5Ec,EAAYzW,EAAKyW,UACjBkkB,EAAM36B,EAAK46B,QAAUR,EAAS3jB,EAAW4jB,EAAKE,EAAKE,GACnDI,EAAM76B,EAAK86B,QAAUV,EAAS3jB,EAAW8jB,EAAKF,EAAKI,GACzDz6B,EAAKc,OAAS+R,KAAKkoB,cAAcV,GACjCr6B,EAAKe,OAAS8R,KAAKkoB,cAAcR,GACjCv6B,EAAKg7B,OAASnoB,KAAKkoB,cAAcN,GACjCz6B,EAAKM,OAASuS,KAAKkoB,cAAcJ,GACjC36B,EAAK03B,OAAS7kB,KAAKkoB,cAAcF,EACnC,CACAV,UAAAA,GACE,OAAOtnB,KAAK8C,MAAMgD,KAAKnD,SAAS3C,KAAKpc,MACvC,CACAyiC,OAAAA,GACE,OAAOrmB,KAAK8C,MAAMslB,eAAepoB,KAAKpc,MACxC,CACAskC,aAAAA,CAAcG,GACZ,OAAOroB,KAAK8C,MAAM0B,OAAO6jB,EAC3B,CACAC,cAAAA,CAAe/jB,GACb,MAAMpX,EAAO6S,KAAKklB,YAClB,OAAO3gB,IAAUpX,EAAKM,OAClBN,EAAK03B,OACL13B,EAAKM,MACX,CACA86B,KAAAA,GACEvoB,KAAK0e,QAAQ,QACf,CACA8J,QAAAA,GACE,MAAMr7B,EAAO6S,KAAKklB,YACdllB,KAAKumB,OACP/6B,EAAoBwU,KAAKumB,MAAOvmB,MAE9B7S,EAAK+5B,UACPrB,GAAY14B,EAEhB,CACAs7B,UAAAA,GACE,MAAMpB,EAAUrnB,KAAKsnB,aACfxhB,EAAOuhB,EAAQvhB,OAASuhB,EAAQvhB,KAAO,IACvCygB,EAAQvmB,KAAKumB,MACnB,GAAIzkC,EAASgkB,GACX9F,KAAKumB,MA7LX,SAAkCzgB,GAChC,MAAM3iB,EAAO1B,OAAO0B,KAAK2iB,GACnB4iB,EAAQ,IAAInnC,MAAM4B,EAAKC,QAC7B,IAAIH,EAAGO,EAAMa,EACb,IAAKpB,EAAI,EAAGO,EAAOL,EAAKC,OAAQH,EAAIO,IAAQP,EAC1CoB,EAAMlB,EAAKF,GACXylC,EAAMzlC,GAAK,CACTkC,EAAGd,EACHgB,EAAGygB,EAAKzhB,IAGZ,OAAOqkC,CACT,CAiLmBC,CAAyB7iB,QACjC,GAAIygB,IAAUzgB,EAAM,CACzB,GAAIygB,EAAO,CACT/6B,EAAoB+6B,EAAOvmB,MAC3B,MAAM7S,EAAO6S,KAAKklB,YAClBW,GAAY14B,GACZA,EAAKO,QAAU,EACjB,CACIoY,GAAQrkB,OAAOmnC,aAAa9iB,KD1UJra,EC2UFuU,MD3ULzX,EC2UDud,GD1Udna,SACRpD,EAAMoD,SAASC,UAAU/F,KAAK4F,IAGhChK,OAAOonC,eAAetgC,EAAO,WAAY,CACvCyoB,cAAc,EACdzL,YAAY,EACZlkB,MAAO,CACLuK,UAAW,CAACH,MAGhBF,EAAYO,SAASzH,IACnB,MAAM09B,EAAS,UAAY/7B,EAAY3B,GACjCykC,EAAOvgC,EAAMlE,GACnB5C,OAAOonC,eAAetgC,EAAOlE,EAAK,CAChC2sB,cAAc,EACdzL,YAAY,EACZlkB,KAAAA,GAAe,QAAA0nC,EAAAn+B,UAAAxH,OAANT,EAAI,IAAApB,MAAAwnC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJrmC,EAAIqmC,GAAAp+B,UAAAo+B,GACX,MAAMpH,EAAMkH,EAAKjmC,MAAMmd,KAAMrd,GAM7B,OALA4F,EAAMoD,SAASC,UAAUE,SAASm9B,IACF,oBAAnBA,EAAOlH,IAChBkH,EAAOlH,MAAWp/B,EACpB,IAEKi/B,CACT,GACA,MCkTA5hB,KAAK+mB,UAAY,GACjB/mB,KAAKumB,MAAQzgB,CACf,CD/UJ,IAA2Bvd,EAAOkD,CCgVhC,CACA07B,WAAAA,GACE,MAAMh6B,EAAO6S,KAAKklB,YAClBllB,KAAKyoB,aACDzoB,KAAKkpB,qBACP/7B,EAAKk6B,QAAU,IAAIrnB,KAAKkpB,mBAE5B,CACAC,qBAAAA,CAAsBC,GACpB,MAAMj8B,EAAO6S,KAAKklB,YACZmC,EAAUrnB,KAAKsnB,aACrB,IAAI+B,GAAe,EACnBrpB,KAAKyoB,aACL,MAAMa,EAAan8B,EAAK+5B,SACxB/5B,EAAK+5B,SAAW7C,GAAUl3B,EAAK03B,OAAQ13B,GACnCA,EAAK82B,QAAUoD,EAAQpD,QACzBoF,GAAe,EACfxD,GAAY14B,GACZA,EAAK82B,MAAQoD,EAAQpD,OAEvBjkB,KAAKupB,gBAAgBH,IACjBC,GAAgBC,IAAen8B,EAAK+5B,WACtClC,GAAahlB,KAAM7S,EAAKO,QAE5B,CACAk1B,SAAAA,GACE,MAAMF,EAAS1iB,KAAK8C,MAAM4f,OACpB8G,EAAY9G,EAAO+G,iBAAiBzpB,KAAKsmB,OACzCvY,EAAS2U,EAAOgH,gBAAgB1pB,KAAKsnB,aAAckC,GAAW,GACpExpB,KAAKxb,QAAUk+B,EAAOiH,eAAe5b,EAAQ/N,KAAKqH,cAClDrH,KAAK+R,SAAW/R,KAAKxb,QAAQ4f,QAC7BpE,KAAKomB,gBAAkB,CAAC,CAC1B,CACAnU,KAAAA,CAAM/nB,EAAOqD,GACX,MAAO23B,YAAa/3B,EAAMo5B,MAAOzgB,GAAQ9F,MACnC,OAACvS,EAAM,SAAEy5B,GAAY/5B,EACrBi4B,EAAQ33B,EAAOE,KACrB,IAEI1K,EAAG48B,EAAK7N,EAFR4X,EAAmB,IAAV1/B,GAAeqD,IAAUuY,EAAK1iB,QAAgB+J,EAAKK,QAC5DmnB,EAAOzqB,EAAQ,GAAKiD,EAAKO,QAAQxD,EAAQ,GAE7C,IAAsB,IAAlB8V,KAAK+R,SACP5kB,EAAKO,QAAUoY,EACf3Y,EAAKK,SAAU,EACfwkB,EAASlM,MACJ,CAEHkM,EADE1wB,EAAQwkB,EAAK5b,IACN8V,KAAK6pB,eAAe18B,EAAM2Y,EAAM5b,EAAOqD,GACvCzL,EAASgkB,EAAK5b,IACd8V,KAAK8pB,gBAAgB38B,EAAM2Y,EAAM5b,EAAOqD,GAExCyS,KAAK+pB,mBAAmB58B,EAAM2Y,EAAM5b,EAAOqD,GAEtD,MAAMy8B,EAA6BA,IAAqB,OAAfnK,EAAIuF,IAAoBzQ,GAAQkL,EAAIuF,GAASzQ,EAAKyQ,GAC3F,IAAKniC,EAAI,EAAGA,EAAIsK,IAAStK,EACvBkK,EAAKO,QAAQzK,EAAIiH,GAAS21B,EAAM7N,EAAO/uB,GACnC2mC,IACEI,MACFJ,GAAS,GAEXjV,EAAOkL,GAGX1yB,EAAKK,QAAUo8B,CACjB,CACI1C,GACFlC,GAAahlB,KAAMgS,EAEvB,CACA+X,kBAAAA,CAAmB58B,EAAM2Y,EAAM5b,EAAOqD,GACpC,MAAM,OAACE,EAAM,OAAEo3B,GAAU13B,EACnBi4B,EAAQ33B,EAAOE,KACf03B,EAAQR,EAAOl3B,KACfs8B,EAASx8B,EAAOy8B,YAChBC,EAAc18B,IAAWo3B,EACzB7S,EAAS,IAAIzwB,MAAMgM,GACzB,IAAItK,EAAGO,EAAMI,EACb,IAAKX,EAAI,EAAGO,EAAO+J,EAAOtK,EAAIO,IAAQP,EACpCW,EAAQX,EAAIiH,EACZ8nB,EAAO/uB,GAAK,CACV,CAACmiC,GAAQ+E,GAAe18B,EAAOwkB,MAAMgY,EAAOrmC,GAAQA,GACpD,CAACyhC,GAAQR,EAAO5S,MAAMnM,EAAKliB,GAAQA,IAGvC,OAAOouB,CACT,CACA6X,cAAAA,CAAe18B,EAAM2Y,EAAM5b,EAAOqD,GAChC,MAAM,OAACU,EAAM,OAAEC,GAAUf,EACnB6kB,EAAS,IAAIzwB,MAAMgM,GACzB,IAAItK,EAAGO,EAAMI,EAAO8C,EACpB,IAAKzD,EAAI,EAAGO,EAAO+J,EAAOtK,EAAIO,IAAQP,EACpCW,EAAQX,EAAIiH,EACZxD,EAAOof,EAAKliB,GACZouB,EAAO/uB,GAAK,CACVkC,EAAG8I,EAAOgkB,MAAMvrB,EAAK,GAAI9C,GACzByB,EAAG6I,EAAO+jB,MAAMvrB,EAAK,GAAI9C,IAG7B,OAAOouB,CACT,CACA8X,eAAAA,CAAgB38B,EAAM2Y,EAAM5b,EAAOqD,GACjC,MAAM,OAACU,EAAM,OAAEC,GAAUf,GACnB,SAACi9B,EAAW,IAAG,SAAEC,EAAW,KAAOrqB,KAAK+R,SACxCC,EAAS,IAAIzwB,MAAMgM,GACzB,IAAItK,EAAGO,EAAMI,EAAO8C,EACpB,IAAKzD,EAAI,EAAGO,EAAO+J,EAAOtK,EAAIO,IAAQP,EACpCW,EAAQX,EAAIiH,EACZxD,EAAOof,EAAKliB,GACZouB,EAAO/uB,GAAK,CACVkC,EAAG8I,EAAOgkB,MAAM3sB,EAAiBoB,EAAM0jC,GAAWxmC,GAClDyB,EAAG6I,EAAO+jB,MAAM3sB,EAAiBoB,EAAM2jC,GAAWzmC,IAGtD,OAAOouB,CACT,CACAsY,SAAAA,CAAU1mC,GACR,OAAOoc,KAAKklB,YAAYx3B,QAAQ9J,EAClC,CACA2mC,cAAAA,CAAe3mC,GACb,OAAOoc,KAAKklB,YAAYpf,KAAKliB,EAC/B,CACAogC,UAAAA,CAAWzf,EAAOyN,EAAQlO,GACxB,MAAMhB,EAAQ9C,KAAK8C,MACb3V,EAAO6S,KAAKklB,YACZ7jC,EAAQ2wB,EAAOzN,EAAM5W,MAK3B,OAAOq2B,GAJO,CACZ7gC,KAAMygC,GAAwB9gB,GAAO,GACrCT,OAAQ2P,EAAOmT,QAAQ5gB,EAAM5W,OAENtM,EAAO8L,EAAKvJ,MAAO,CAACkgB,QAC/C,CACA0mB,qBAAAA,CAAsB/iC,EAAO8c,EAAOyN,EAAQiS,GAC1C,MAAMwG,EAAczY,EAAOzN,EAAM5W,MACjC,IAAItM,EAAwB,OAAhBopC,EAAuBC,IAAMD,EACzC,MAAMpoB,EAAS4hB,GAASjS,EAAOmT,QAAQ5gB,EAAM5W,MACzCs2B,GAAS5hB,IACX4hB,EAAM5hB,OAASA,EACfhhB,EAAQ2iC,GAAWC,EAAOwG,EAAazqB,KAAKklB,YAAYthC,QAE1D6D,EAAMgB,IAAM5B,KAAK4B,IAAIhB,EAAMgB,IAAKpH,GAChCoG,EAAMiB,IAAM7B,KAAK6B,IAAIjB,EAAMiB,IAAKrH,EAClC,CACAspC,SAAAA,CAAUpmB,EAAOqmB,GACf,MAAMz9B,EAAO6S,KAAKklB,YACZx3B,EAAUP,EAAKO,QACfk8B,EAASz8B,EAAKK,SAAW+W,IAAUpX,EAAKM,OACxCjK,EAAOkK,EAAQtK,OACfynC,EAAa7qB,KAAKsoB,eAAe/jB,GACjC0f,EAtPU6G,EAACF,EAAUz9B,EAAM2V,IAAU8nB,IAAaz9B,EAAK49B,QAAU59B,EAAK+5B,UAC3E,CAAC/jC,KAAMygC,GAAwB9gB,GAAO,GAAOT,OAAQ,MAqPxCyoB,CAAYF,EAAUz9B,EAAM6S,KAAK8C,OACzCrb,EAAQ,CAACgB,IAAKzG,OAAOiF,kBAAmByB,IAAK1G,OAAOgpC,oBACnDviC,IAAKwiC,EAAUviC,IAAKwiC,GA5U/B,SAAuB3mB,GACrB,MAAM,IAAC9b,EAAG,IAAEC,EAAG,WAAEkF,EAAU,WAAEC,GAAc0W,EAAMzW,gBACjD,MAAO,CACLrF,IAAKmF,EAAanF,EAAMzG,OAAOgpC,kBAC/BtiC,IAAKmF,EAAanF,EAAM1G,OAAOiF,kBAEnC,CAsU2C6G,CAAc+8B,GACrD,IAAI5nC,EAAG+uB,EACP,SAASmZ,IACPnZ,EAAStkB,EAAQzK,GACjB,MAAMmhC,EAAapS,EAAO6Y,EAAWl9B,MACrC,OAAQ5L,EAAeiwB,EAAOzN,EAAM5W,QAAUs9B,EAAW7G,GAAc8G,EAAW9G,CACpF,CACA,IAAKnhC,EAAI,EAAGA,EAAIO,IACV2nC,MAGJnrB,KAAKwqB,sBAAsB/iC,EAAO8c,EAAOyN,EAAQiS,IAC7C2F,MALkB3mC,GASxB,GAAI2mC,EACF,IAAK3mC,EAAIO,EAAO,EAAGP,GAAK,IAAKA,EAC3B,IAAIkoC,IAAJ,CAGAnrB,KAAKwqB,sBAAsB/iC,EAAO8c,EAAOyN,EAAQiS,GACjD,KAFA,CAKJ,OAAOx8B,CACT,CACA2jC,kBAAAA,CAAmB7mB,GACjB,MAAMyN,EAAShS,KAAKklB,YAAYx3B,QAC1B2U,EAAS,GACf,IAAIpf,EAAGO,EAAMnC,EACb,IAAK4B,EAAI,EAAGO,EAAOwuB,EAAO5uB,OAAQH,EAAIO,IAAQP,EAC5C5B,EAAQ2wB,EAAO/uB,GAAGshB,EAAM5W,MACpB5L,EAAeV,IACjBghB,EAAOxc,KAAKxE,GAGhB,OAAOghB,CACT,CACAgpB,cAAAA,GACE,OAAO,CACT,CACAC,gBAAAA,CAAiB1nC,GACf,MAAMuJ,EAAO6S,KAAKklB,YACZz3B,EAASN,EAAKM,OACdo3B,EAAS13B,EAAK03B,OACd7S,EAAShS,KAAKsqB,UAAU1mC,GAC9B,MAAO,CACL2nC,MAAO99B,EAAS,GAAKA,EAAO+9B,iBAAiBxZ,EAAOvkB,EAAOE,OAAS,GACpEtM,MAAOwjC,EAAS,GAAKA,EAAO2G,iBAAiBxZ,EAAO6S,EAAOl3B,OAAS,GAExE,CACA+wB,OAAAA,CAAQ5a,GACN,MAAM3W,EAAO6S,KAAKklB,YAClBllB,KAAKshB,OAAOxd,GAAQ,WACpB3W,EAAKs+B,MAxcT,SAAgBpqC,GACd,IAAIuN,EAAG4D,EAAGhM,EAAG4K,EASb,OARItP,EAAST,IACXuN,EAAIvN,EAAMgoB,IACV7W,EAAInR,EAAM+nB,MACV5iB,EAAInF,EAAMioB,OACVlY,EAAI/P,EAAM8nB,MAEVva,EAAI4D,EAAIhM,EAAI4K,EAAI/P,EAEX,CACLgoB,IAAKza,EACLwa,MAAO5W,EACP8W,OAAQ9iB,EACR2iB,KAAM/X,EACNs6B,UAAoB,IAAVrqC,EAEd,CAubiBsqC,CAAOvpC,EAAe4d,KAAKxb,QAAQglB,KArdpD,SAAqBvb,EAAQC,EAAQy1B,GACnC,IAAwB,IAApBA,EACF,OAAO,EAET,MAAMx+B,EAAIu+B,GAAUz1B,EAAQ01B,GACtBt+B,EAAIq+B,GAAUx1B,EAAQy1B,GAC5B,MAAO,CACLta,IAAKhkB,EAAE8E,IACPif,MAAOjkB,EAAEgF,IACTmf,OAAQjkB,EAAE6E,MACVif,KAAMhkB,EAAE+E,MAEZ,CAyc0D0hC,CAAYz+B,EAAKc,OAAQd,EAAKe,OAAQ8R,KAAKqrB,mBACnG,CACA/J,MAAAA,CAAOxd,GAAO,CACdib,IAAAA,GACE,MAAMtb,EAAMzD,KAAKmmB,KACXrjB,EAAQ9C,KAAK8C,MACb3V,EAAO6S,KAAKklB,YACZjiB,EAAW9V,EAAK2Y,MAAQ,GACxBmD,EAAOnG,EAAM+oB,UACbxK,EAAS,GACTn3B,EAAQ8V,KAAK0mB,YAAc,EAC3Bn5B,EAAQyS,KAAK2mB,YAAe1jB,EAAS7f,OAAS8G,EAC9Cwa,EAA0B1E,KAAKxb,QAAQkgB,wBAC7C,IAAIzhB,EAIJ,IAHIkK,EAAKk6B,SACPl6B,EAAKk6B,QAAQtI,KAAKtb,EAAKwF,EAAM/e,EAAOqD,GAEjCtK,EAAIiH,EAAOjH,EAAIiH,EAAQqD,IAAStK,EAAG,CACtC,MAAM2yB,EAAU3S,EAAShgB,GACrB2yB,EAAQmV,SAGRnV,EAAQyL,QAAU3c,EACpB2c,EAAOx7B,KAAK+vB,GAEZA,EAAQmJ,KAAKtb,EAAKwF,GAEtB,CACA,IAAKhmB,EAAI,EAAGA,EAAIo+B,EAAOj+B,SAAUH,EAC/Bo+B,EAAOp+B,GAAG87B,KAAKtb,EAAKwF,EAExB,CACAgQ,QAAAA,CAASr1B,EAAOy9B,GACd,MAAMvd,EAAOud,EAAS,SAAW,UACjC,YAAiBx2B,IAAVjH,GAAuBoc,KAAKklB,YAAYmC,QAC3CrnB,KAAK8rB,6BAA6BhoB,GAClC9D,KAAK+rB,0BAA0BnoC,GAAS,EAAGkgB,EACjD,CACAuD,UAAAA,CAAWzjB,EAAOy9B,EAAQvd,GACxB,MAAMujB,EAAUrnB,KAAKsnB,aACrB,IAAIzkB,EACJ,GAAIjf,GAAS,GAAKA,EAAQoc,KAAKklB,YAAYpf,KAAK1iB,OAAQ,CACtD,MAAMwyB,EAAU5V,KAAKklB,YAAYpf,KAAKliB,GACtCif,EAAU+S,EAAQkR,WACflR,EAAQkR,SAxXjB,SAA2BxV,EAAQ1tB,EAAOgyB,GACxC,OAAOhI,GAAc0D,EAAQ,CAC3B+P,QAAQ,EACR2K,UAAWpoC,EACXouB,YAAQnnB,EACRohC,SAAKphC,EACL+qB,UACAhyB,QACAkgB,KAAM,UACNtiB,KAAM,QAEV,CA6W4B0qC,CAAkBlsB,KAAKqH,aAAczjB,EAAOgyB,IAClE/S,EAAQmP,OAAShS,KAAKsqB,UAAU1mC,GAChCif,EAAQopB,IAAM5E,EAAQvhB,KAAKliB,GAC3Bif,EAAQjf,MAAQif,EAAQmpB,UAAYpoC,CACtC,MACEif,EAAU7C,KAAK8mB,WACZ9mB,KAAK8mB,SA1Yd,SAA8BxV,EAAQ1tB,GACpC,OAAOgqB,GAAc0D,EACnB,CACE+P,QAAQ,EACRgG,aAASx8B,EACTlH,aAAcC,EACdA,QACAkgB,KAAM,UACNtiB,KAAM,WAGZ,CA+XyB2qC,CAAqBnsB,KAAK8C,MAAMuE,aAAcrH,KAAKpc,QACtEif,EAAQwkB,QAAUA,EAClBxkB,EAAQjf,MAAQif,EAAQlf,aAAeqc,KAAKpc,MAI9C,OAFAif,EAAQwe,SAAWA,EACnBxe,EAAQiB,KAAOA,EACRjB,CACT,CACAipB,4BAAAA,CAA6BhoB,GAC3B,OAAO9D,KAAKosB,uBAAuBpsB,KAAKkpB,mBAAmB/nC,GAAI2iB,EACjE,CACAioB,yBAAAA,CAA0BnoC,EAAOkgB,GAC/B,OAAO9D,KAAKosB,uBAAuBpsB,KAAKqsB,gBAAgBlrC,GAAI2iB,EAAMlgB,EACpE,CACAwoC,sBAAAA,CAAuBE,GAAsC,IAAzBxoB,EAAIlZ,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,UAAWhH,EAAKgH,UAAAxH,OAAA,EAAAwH,UAAA,QAAAC,EACzD,MAAMw2B,EAAkB,WAATvd,EACTyC,EAAQvG,KAAKomB,gBACbxM,EAAW0S,EAAc,IAAMxoB,EAC/BkiB,EAASzf,EAAMqT,GACf2S,EAAUvsB,KAAK4mB,qBAAuBxgC,EAAQxC,GACpD,GAAIoiC,EACF,OAAOD,GAAiBC,EAAQuG,GAElC,MAAM7J,EAAS1iB,KAAK8C,MAAM4f,OACpB8G,EAAY9G,EAAO8J,wBAAwBxsB,KAAKsmB,MAAOgG,GACvDte,EAAWqT,EAAS,CAAC,GAADhhB,OAAIisB,EAAW,SAAS,QAASA,EAAa,IAAM,CAACA,EAAa,IACtFve,EAAS2U,EAAOgH,gBAAgB1pB,KAAKsnB,aAAckC,GACnDlrB,EAAQ7c,OAAO0B,KAAKmf,GAASW,SAASqpB,IAEtCjqB,EAASqgB,EAAO+J,oBAAoB1e,EAAQzP,GADlCuE,IAAM7C,KAAKqH,WAAWzjB,EAAOy9B,IACqBrT,GAKlE,OAJI3L,EAAO6gB,UACT7gB,EAAO6gB,QAAUqJ,EACjBhmB,EAAMqT,GAAYn4B,OAAOirC,OAAO3G,GAAiB1jB,EAAQkqB,KAEpDlqB,CACT,CACAsqB,kBAAAA,CAAmB/oC,EAAOgpC,EAAYvL,GACpC,MAAMve,EAAQ9C,KAAK8C,MACbyD,EAAQvG,KAAKomB,gBACbxM,EAAW,aAAHvZ,OAAgBusB,GACxB5G,EAASzf,EAAMqT,GACrB,GAAIoM,EACF,OAAOA,EAET,IAAIxhC,EACJ,IAAgC,IAA5Bse,EAAMte,QAAQge,UAAqB,CACrC,MAAMkgB,EAAS1iB,KAAK8C,MAAM4f,OACpB8G,EAAY9G,EAAOmK,0BAA0B7sB,KAAKsmB,MAAOsG,GACzD7e,EAAS2U,EAAOgH,gBAAgB1pB,KAAKsnB,aAAckC,GACzDhlC,EAAUk+B,EAAOiH,eAAe5b,EAAQ/N,KAAKqH,WAAWzjB,EAAOy9B,EAAQuL,GACzE,CACA,MAAMtK,EAAa,IAAIG,GAAW3f,EAAOte,GAAWA,EAAQ89B,YAI5D,OAHI99B,GAAWA,EAAQ8pB,aACrB/H,EAAMqT,GAAYn4B,OAAOirC,OAAOpK,IAE3BA,CACT,CACAwK,gBAAAA,CAAiBtoC,GACf,GAAKA,EAAQ0+B,QAGb,OAAOljB,KAAKymB,iBAAmBzmB,KAAKymB,eAAiBhlC,OAAOiN,OAAO,CAAC,EAAGlK,GACzE,CACAuoC,cAAAA,CAAejpB,EAAMkpB,GACnB,OAAQA,GAAiBlH,GAAmBhiB,IAAS9D,KAAK8C,MAAMmqB,mBAClE,CACAC,iBAAAA,CAAkBhjC,EAAO4Z,GACvB,MAAMqpB,EAAYntB,KAAK+rB,0BAA0B7hC,EAAO4Z,GAClDspB,EAA0BptB,KAAKymB,eAC/BuG,EAAgBhtB,KAAK8sB,iBAAiBK,GACtCJ,EAAiB/sB,KAAK+sB,eAAejpB,EAAMkpB,IAAmBA,IAAkBI,EAEtF,OADAptB,KAAKqtB,oBAAoBL,EAAelpB,EAAMqpB,GACvC,CAACH,gBAAeD,iBACzB,CACAO,aAAAA,CAAc1X,EAAShyB,EAAOs+B,EAAYpe,GACpCgiB,GAAmBhiB,GACrBriB,OAAOiN,OAAOknB,EAASsM,GAEvBliB,KAAK2sB,mBAAmB/oC,EAAOkgB,GAAMwd,OAAO1L,EAASsM,EAEzD,CACAmL,mBAAAA,CAAoBL,EAAelpB,EAAMmf,GACnC+J,IAAkBlH,GAAmBhiB,IACvC9D,KAAK2sB,wBAAmB9hC,EAAWiZ,GAAMwd,OAAO0L,EAAe/J,EAEnE,CACAsK,SAAAA,CAAU3X,EAAShyB,EAAOkgB,EAAMud,GAC9BzL,EAAQyL,OAASA,EACjB,MAAM78B,EAAUwb,KAAKiZ,SAASr1B,EAAOy9B,GACrCrhB,KAAK2sB,mBAAmB/oC,EAAOkgB,EAAMud,GAAQC,OAAO1L,EAAS,CAC3DpxB,SAAW68B,GAAUrhB,KAAK8sB,iBAAiBtoC,IAAaA,GAE5D,CACAgpC,gBAAAA,CAAiB5X,EAASjyB,EAAcC,GACtCoc,KAAKutB,UAAU3X,EAAShyB,EAAO,UAAU,EAC3C,CACA6pC,aAAAA,CAAc7X,EAASjyB,EAAcC,GACnCoc,KAAKutB,UAAU3X,EAAShyB,EAAO,UAAU,EAC3C,CACA8pC,wBAAAA,GACE,MAAM9X,EAAU5V,KAAKklB,YAAYmC,QAC7BzR,GACF5V,KAAKutB,UAAU3X,OAAS/qB,EAAW,UAAU,EAEjD,CACA8iC,qBAAAA,GACE,MAAM/X,EAAU5V,KAAKklB,YAAYmC,QAC7BzR,GACF5V,KAAKutB,UAAU3X,OAAS/qB,EAAW,UAAU,EAEjD,CACA0+B,eAAAA,CAAgBH,GACd,MAAMtjB,EAAO9F,KAAKumB,MACZtjB,EAAWjD,KAAKklB,YAAYpf,KAClC,IAAK,MAAOic,EAAQ6L,EAAMC,KAAS7tB,KAAK+mB,UACtC/mB,KAAK+hB,GAAQ6L,EAAMC,GAErB7tB,KAAK+mB,UAAY,GACjB,MAAM+G,EAAU7qB,EAAS7f,OACnB2qC,EAAUjoB,EAAK1iB,OACfmK,EAAQ1G,KAAK4B,IAAIslC,EAASD,GAC5BvgC,GACFyS,KAAKiS,MAAM,EAAG1kB,GAEZwgC,EAAUD,EACZ9tB,KAAKguB,gBAAgBF,EAASC,EAAUD,EAAS1E,GACxC2E,EAAUD,GACnB9tB,KAAKiuB,gBAAgBF,EAASD,EAAUC,EAE5C,CACAC,eAAAA,CAAgB9jC,EAAOqD,GAAgC,IAAzB67B,IAAgBx+B,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,KAAAA,UAAA,GAC5C,MAAMuC,EAAO6S,KAAKklB,YACZpf,EAAO3Y,EAAK2Y,KACZ3b,EAAMD,EAAQqD,EACpB,IAAItK,EACJ,MAAMirC,EAAQvd,IAEZ,IADAA,EAAIvtB,QAAUmK,EACTtK,EAAI0tB,EAAIvtB,OAAS,EAAGH,GAAKkH,EAAKlH,IACjC0tB,EAAI1tB,GAAK0tB,EAAI1tB,EAAIsK,EACnB,EAGF,IADA2gC,EAAKpoB,GACA7iB,EAAIiH,EAAOjH,EAAIkH,IAAOlH,EACzB6iB,EAAK7iB,GAAK,IAAI+c,KAAKqsB,gBAEjBrsB,KAAK+R,UACPmc,EAAK/gC,EAAKO,SAEZsS,KAAKiS,MAAM/nB,EAAOqD,GACd67B,GACFppB,KAAKmuB,eAAeroB,EAAM5b,EAAOqD,EAAO,QAE5C,CACA4gC,cAAAA,CAAevY,EAAS1rB,EAAOqD,EAAOuW,GAAO,CAC7CmqB,eAAAA,CAAgB/jC,EAAOqD,GACrB,MAAMJ,EAAO6S,KAAKklB,YAClB,GAAIllB,KAAK+R,SAAU,CACjB,MAAMqc,EAAUjhC,EAAKO,QAAQ7B,OAAO3B,EAAOqD,GACvCJ,EAAK+5B,UACPrB,GAAY14B,EAAMihC,EAEtB,CACAjhC,EAAK2Y,KAAKja,OAAO3B,EAAOqD,EAC1B,CACA8gC,KAAAA,CAAM1rC,GACJ,GAAIqd,KAAK+R,SACP/R,KAAK+mB,UAAUlhC,KAAKlD,OACf,CACL,MAAOo/B,EAAQ6L,EAAMC,GAAQlrC,EAC7Bqd,KAAK+hB,GAAQ6L,EAAMC,EACrB,CACA7tB,KAAK8C,MAAMwrB,aAAazoC,KAAK,CAACma,KAAKpc,SAAUjB,GAC/C,CACA4rC,WAAAA,GACE,MAAMhhC,EAAQ3C,UAAUxH,OACxB4c,KAAKquB,MAAM,CAAC,kBAAmBruB,KAAKsnB,aAAaxhB,KAAK1iB,OAASmK,EAAOA,GACxE,CACAihC,UAAAA,GACExuB,KAAKquB,MAAM,CAAC,kBAAmBruB,KAAKklB,YAAYpf,KAAK1iB,OAAS,EAAG,GACnE,CACAqrC,YAAAA,GACEzuB,KAAKquB,MAAM,CAAC,kBAAmB,EAAG,GACpC,CACAK,aAAAA,CAAcxkC,EAAOqD,GACfA,GACFyS,KAAKquB,MAAM,CAAC,kBAAmBnkC,EAAOqD,IAExC,MAAMohC,EAAW/jC,UAAUxH,OAAS,EAChCurC,GACF3uB,KAAKquB,MAAM,CAAC,kBAAmBnkC,EAAOykC,GAE1C,CACAC,cAAAA,GACE5uB,KAAKquB,MAAM,CAAC,kBAAmB,EAAGzjC,UAAUxH,QAC9C,EAiBF,SAASyrC,GAAqB1hC,GAC5B,MAAMoX,EAAQpX,EAAKM,OACb4U,EAbR,SAA2BkC,EAAO/iB,GAChC,IAAK+iB,EAAMuqB,OAAOC,KAAM,CACtB,MAAMC,EAAezqB,EAAMwgB,wBAAwBvjC,GACnD,IAAI6gB,EAAS,GACb,IAAK,IAAIpf,EAAI,EAAGO,EAAOwrC,EAAa5rC,OAAQH,EAAIO,EAAMP,IACpDof,EAASA,EAAOhC,OAAO2uB,EAAa/rC,GAAGgiC,WAAWmG,mBAAmB7mB,IAEvEA,EAAMuqB,OAAOC,KAAOhjC,EAAasW,EAAO4sB,MAAK,CAAC1oC,EAAGC,IAAMD,EAAIC,IAC7D,CACA,OAAO+d,EAAMuqB,OAAOC,IACtB,CAGiBG,CAAkB3qB,EAAOpX,EAAK3L,MAC7C,IACIyB,EAAGO,EAAM2rC,EAAMxa,EADflsB,EAAM8b,EAAM6qB,QAEhB,MAAMC,EAAmBA,KACV,QAATF,IAA4B,QAAVA,IAGlB/oC,EAAQuuB,KACVlsB,EAAM5B,KAAK4B,IAAIA,EAAK5B,KAAKwB,IAAI8mC,EAAOxa,IAASlsB,IAE/CksB,EAAOwa,EAAI,EAEb,IAAKlsC,EAAI,EAAGO,EAAO6e,EAAOjf,OAAQH,EAAIO,IAAQP,EAC5CksC,EAAO5qB,EAAMxW,iBAAiBsU,EAAOpf,IACrCosC,IAGF,IADA1a,OAAO9pB,EACF5H,EAAI,EAAGO,EAAO+gB,EAAM+qB,MAAMlsC,OAAQH,EAAIO,IAAQP,EACjDksC,EAAO5qB,EAAMgrB,gBAAgBtsC,GAC7BosC,IAEF,OAAO5mC,CACT,CA0DA,SAAS+mC,GAAWC,EAAO/oC,EAAMm+B,EAAQ5hC,GAMvC,OALI3B,EAAQmuC,GAtBd,SAAuBA,EAAO/oC,EAAMm+B,EAAQ5hC,GAC1C,MAAMysC,EAAa7K,EAAO5S,MAAMwd,EAAM,GAAIxsC,GACpC0sC,EAAW9K,EAAO5S,MAAMwd,EAAM,GAAIxsC,GAClCwF,EAAM5B,KAAK4B,IAAIinC,EAAYC,GAC3BjnC,EAAM7B,KAAK6B,IAAIgnC,EAAYC,GACjC,IAAIC,EAAWnnC,EACXonC,EAASnnC,EACT7B,KAAKwB,IAAII,GAAO5B,KAAKwB,IAAIK,KAC3BknC,EAAWlnC,EACXmnC,EAASpnC,GAEX/B,EAAKm+B,EAAOl3B,MAAQkiC,EACpBnpC,EAAKopC,QAAU,CACbF,WACAC,SACA3lC,MAAOwlC,EACPvlC,IAAKwlC,EACLlnC,MACAC,MAEJ,CAGIqnC,CAAcN,EAAO/oC,EAAMm+B,EAAQ5hC,GAEnCyD,EAAKm+B,EAAOl3B,MAAQk3B,EAAO5S,MAAMwd,EAAOxsC,GAEnCyD,CACT,CACA,SAASspC,GAAsB7iC,EAAM2Y,EAAM5b,EAAOqD,GAChD,MAAME,EAASN,EAAKM,OACdo3B,EAAS13B,EAAK03B,OACdoF,EAASx8B,EAAOy8B,YAChBC,EAAc18B,IAAWo3B,EACzB7S,EAAS,GACf,IAAI/uB,EAAGO,EAAMkD,EAAM+oC,EACnB,IAAKxsC,EAAIiH,EAAO1G,EAAO0G,EAAQqD,EAAOtK,EAAIO,IAAQP,EAChDwsC,EAAQ3pB,EAAK7iB,GACbyD,EAAO,CAAC,EACRA,EAAK+G,EAAOE,MAAQw8B,GAAe18B,EAAOwkB,MAAMgY,EAAOhnC,GAAIA,GAC3D+uB,EAAOnsB,KAAK2pC,GAAWC,EAAO/oC,EAAMm+B,EAAQ5hC,IAE9C,OAAO+uB,CACT,CACA,SAASie,GAAWC,GAClB,OAAOA,QAA8BrlC,IAApBqlC,EAAON,eAA4C/kC,IAAlBqlC,EAAOL,MAC3D,CA2BA,SAASM,GAAiBjO,EAAY19B,EAASy/B,EAAOrgC,GACpD,IAAIwsC,EAAO5rC,EAAQ6rC,cACnB,MAAMzO,EAAM,CAAC,EACb,IAAKwO,EAEH,YADAlO,EAAWmO,cAAgBzO,GAG7B,IAAa,IAATwO,EAEF,YADAlO,EAAWmO,cAAgB,CAAChnB,KAAK,EAAMD,OAAO,EAAME,QAAQ,EAAMH,MAAM,IAG1E,MAAM,MAACjf,EAAK,IAAEC,EAAG,QAAEnH,EAAO,IAAEqmB,EAAG,OAAEC,GA/BnC,SAAqB4Y,GACnB,IAAIl/B,EAASkH,EAAOC,EAAKkf,EAAKC,EAiB9B,OAhBI4Y,EAAWoO,YACbttC,EAAUk/B,EAAW4G,KAAO5G,EAAW/8B,EACvC+E,EAAQ,OACRC,EAAM,UAENnH,EAAUk/B,EAAW4G,KAAO5G,EAAW78B,EACvC6E,EAAQ,SACRC,EAAM,OAEJnH,GACFqmB,EAAM,MACNC,EAAS,UAETD,EAAM,QACNC,EAAS,OAEJ,CAACpf,QAAOC,MAAKnH,UAASqmB,MAAKC,SACpC,CAY6CinB,CAAYrO,GAC1C,WAATkO,GAAqBnM,IACvB/B,EAAWsO,oBAAqB,GAC3BvM,EAAMwB,MAAQ,KAAO7hC,EACxBwsC,EAAO/mB,GACG4a,EAAMyB,SAAW,KAAO9hC,EAClCwsC,EAAO9mB,GAEPsY,EAAI6O,GAAUnnB,EAAQpf,EAAOC,EAAKnH,KAAY,EAC9CotC,EAAO/mB,IAGXuY,EAAI6O,GAAUL,EAAMlmC,EAAOC,EAAKnH,KAAY,EAC5Ck/B,EAAWmO,cAAgBzO,CAC7B,CACA,SAAS6O,GAAUL,EAAM7pC,EAAGC,EAAGxD,GAS/B,IAAc0tC,EAAMhtC,EAAIitC,EAFtB,OANI3tC,GAQkB2tC,EAPCnqC,EACrB4pC,EAAOQ,GADPR,GAOUM,EAPEN,MAOI1sC,EAPE6C,GAQCoqC,EAAKD,IAASC,EAAKjtC,EAAKgtC,EAPrBlqC,EAAGD,IAEzB6pC,EAAOQ,GAASR,EAAM7pC,EAAGC,GAEpB4pC,CACT,CAIA,SAASQ,GAAS1rC,EAAGgF,EAAOC,GAC1B,MAAa,UAANjF,EAAgBgF,EAAc,QAANhF,EAAciF,EAAMjF,CACrD,CACA,SAAS2rC,GAAiB3O,EAAUzG,EAAmBpc,GAAO,IAAxB,cAACyxB,GAAcrV,EACnDyG,EAAW4O,cAAkC,SAAlBA,EACb,IAAVzxB,EAAc,IAAO,EACrByxB,CACN,CAlMA5K,GAAkB5jB,SAAW,CAAC,EAC9B4jB,GAAkBxkC,UAAUwnC,mBAAqB,KACjDhD,GAAkBxkC,UAAU2qC,gBAAkB,KAiM9C,MAAM0E,WAAsB7K,GAC1B6D,kBAAAA,CAAmB58B,EAAM2Y,EAAM5b,EAAOqD,GACpC,OAAOyiC,GAAsB7iC,EAAM2Y,EAAM5b,EAAOqD,EAClD,CACAs8B,cAAAA,CAAe18B,EAAM2Y,EAAM5b,EAAOqD,GAChC,OAAOyiC,GAAsB7iC,EAAM2Y,EAAM5b,EAAOqD,EAClD,CACAu8B,eAAAA,CAAgB38B,EAAM2Y,EAAM5b,EAAOqD,GACjC,MAAM,OAACE,EAAM,OAAEo3B,GAAU13B,GACnB,SAACi9B,EAAW,IAAG,SAAEC,EAAW,KAAOrqB,KAAK+R,SACxCif,EAA2B,MAAhBvjC,EAAOE,KAAey8B,EAAWC,EAC5C4G,EAA2B,MAAhBpM,EAAOl3B,KAAey8B,EAAWC,EAC5CrY,EAAS,GACf,IAAI/uB,EAAGO,EAAMkD,EAAMnB,EACnB,IAAKtC,EAAIiH,EAAO1G,EAAO0G,EAAQqD,EAAOtK,EAAIO,IAAQP,EAChDsC,EAAMugB,EAAK7iB,GACXyD,EAAO,CAAC,EACRA,EAAK+G,EAAOE,MAAQF,EAAOwkB,MAAM3sB,EAAiBC,EAAKyrC,GAAW/tC,GAClE+uB,EAAOnsB,KAAK2pC,GAAWlqC,EAAiBC,EAAK0rC,GAAWvqC,EAAMm+B,EAAQ5hC,IAExE,OAAO+uB,CACT,CACAwY,qBAAAA,CAAsB/iC,EAAO8c,EAAOyN,EAAQiS,GAC1CiN,MAAM1G,sBAAsB/iC,EAAO8c,EAAOyN,EAAQiS,GAClD,MAAMiM,EAASle,EAAO8d,QAClBI,GAAU3rB,IAAUvE,KAAKklB,YAAYL,SACvCp9B,EAAMgB,IAAM5B,KAAK4B,IAAIhB,EAAMgB,IAAKynC,EAAOznC,KACvChB,EAAMiB,IAAM7B,KAAK6B,IAAIjB,EAAMiB,IAAKwnC,EAAOxnC,KAE3C,CACA2iC,cAAAA,GACE,OAAO,CACT,CACAC,gBAAAA,CAAiB1nC,GACf,MAAMuJ,EAAO6S,KAAKklB,aACZ,OAACz3B,EAAM,OAAEo3B,GAAU13B,EACnB6kB,EAAShS,KAAKsqB,UAAU1mC,GACxBssC,EAASle,EAAO8d,QAChBzuC,EAAQ4uC,GAAWC,GACrB,IAAMA,EAAOhmC,MAAQ,KAAOgmC,EAAO/lC,IAAM,IACzC,GAAK06B,EAAO2G,iBAAiBxZ,EAAO6S,EAAOl3B,OAC/C,MAAO,CACL49B,MAAO,GAAK99B,EAAO+9B,iBAAiBxZ,EAAOvkB,EAAOE,OAClDtM,QAEJ,CACA2lC,UAAAA,GACEhnB,KAAK4mB,qBAAsB,EAC3BsK,MAAMlK,aACOhnB,KAAKklB,YACbjB,MAAQjkB,KAAKsnB,aAAarD,KACjC,CACA3C,MAAAA,CAAOxd,GACL,MAAM3W,EAAO6S,KAAKklB,YAClBllB,KAAKmuB,eAAehhC,EAAK2Y,KAAM,EAAG3Y,EAAK2Y,KAAK1iB,OAAQ0gB,EACtD,CACAqqB,cAAAA,CAAegD,EAAMjnC,EAAOqD,EAAOuW,GACjC,MAAMykB,EAAiB,UAATzkB,GACR,MAAClgB,EAAOshC,aAAa,OAACL,IAAW7kB,KACjC8oB,EAAOjE,EAAOuM,eACdd,EAAazL,EAAOwM,eACpBC,EAAQtxB,KAAKuxB,aACb,cAACvE,EAAa,eAAED,GAAkB/sB,KAAKktB,kBAAkBhjC,EAAO4Z,GACtE,IAAK,IAAI7gB,EAAIiH,EAAOjH,EAAIiH,EAAQqD,EAAOtK,IAAK,CAC1C,MAAM+uB,EAAShS,KAAKsqB,UAAUrnC,GACxBuuC,EAAUjJ,GAASnnC,EAAc4wB,EAAO6S,EAAOl3B,OAAS,CAACm7B,OAAM2I,KAAM3I,GAAQ9oB,KAAK0xB,yBAAyBzuC,GAC3G0uC,EAAU3xB,KAAK4xB,yBAAyB3uC,EAAGquC,GAC3CrN,GAASjS,EAAOmT,SAAW,CAAC,GAAGN,EAAOl3B,MACtCu0B,EAAa,CACjBoO,aACAxH,KAAM0I,EAAQ1I,KACd0H,oBAAqBvM,GAASgM,GAAWje,EAAO8d,UAAalsC,IAAUqgC,EAAMwB,MAAQ7hC,IAAUqgC,EAAMyB,QACrGvgC,EAAGmrC,EAAakB,EAAQC,KAAOE,EAAQE,OACvCxsC,EAAGirC,EAAaqB,EAAQE,OAASL,EAAQC,KACzCjqB,OAAQ8oB,EAAaqB,EAAQlrC,KAAOI,KAAKwB,IAAImpC,EAAQ/qC,MACrD2f,MAAOkqB,EAAazpC,KAAKwB,IAAImpC,EAAQ/qC,MAAQkrC,EAAQlrC,MAEnDsmC,IACF7K,EAAW19B,QAAUwoC,GAAiBhtB,KAAK+rB,0BAA0B9oC,EAAGkuC,EAAKluC,GAAGo+B,OAAS,SAAWvd,IAEtG,MAAMtf,EAAU09B,EAAW19B,SAAW2sC,EAAKluC,GAAGuB,QAC9C2rC,GAAiBjO,EAAY19B,EAASy/B,EAAOrgC,GAC7CitC,GAAiB3O,EAAY19B,EAAS8sC,EAAMjyB,OAC5CW,KAAKstB,cAAc6D,EAAKluC,GAAIA,EAAGi/B,EAAYpe,EAC7C,CACF,CACAguB,UAAAA,CAAWzmC,EAAM2gC,GACf,MAAM,OAACv+B,GAAUuS,KAAKklB,YAChBpB,EAAWr2B,EAAOs3B,wBAAwB/kB,KAAKsmB,OAClD1V,QAAOzjB,GAAQA,EAAK83B,WAAWzgC,QAAQutC,UACpCzN,EAAU72B,EAAOjJ,QAAQ8/B,QACzBE,EAAS,GACTwN,EAAY7kC,IAChB,MAAM6kB,EAAS7kB,EAAK83B,WAAWqF,UAAU0B,GACnC7qB,EAAM6Q,GAAUA,EAAO7kB,EAAK03B,OAAOl3B,MACzC,GAAIvM,EAAc+f,IAAQhZ,MAAMgZ,GAC9B,OAAO,CACT,EAEF,IAAK,MAAMhU,KAAQ22B,EACjB,SAAkBj5B,IAAdmhC,IAA2BgG,EAAS7kC,QAGxB,IAAZm3B,IAAqD,IAAhCE,EAAOlgC,QAAQ6I,EAAK82B,aAClCp5B,IAAZy5B,QAAwCz5B,IAAfsC,EAAK82B,QAC3BO,EAAO3+B,KAAKsH,EAAK82B,OAEf92B,EAAKvJ,QAAUyH,GACjB,MAMJ,OAHKm5B,EAAOphC,QACVohC,EAAO3+B,UAAKgF,GAEP25B,CACT,CACAyN,cAAAA,CAAeruC,GACb,OAAOoc,KAAK8xB,gBAAWjnC,EAAWjH,GAAOR,MAC3C,CACA8uC,cAAAA,CAAevuC,EAAcohB,EAAMinB,GACjC,MAAMxH,EAASxkB,KAAK8xB,WAAWnuC,EAAcqoC,GACvCpoC,OAAkBiH,IAATka,EACXyf,EAAOlgC,QAAQygB,IACd,EACL,OAAmB,IAAXnhB,EACJ4gC,EAAOphC,OAAS,EAChBQ,CACN,CACA2tC,SAAAA,GACE,MAAMjnB,EAAOtK,KAAKxb,QACZ2I,EAAO6S,KAAKklB,YACZz3B,EAASN,EAAKM,OACd0kC,EAAS,GACf,IAAIlvC,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAO2J,EAAK2Y,KAAK1iB,OAAQH,EAAIO,IAAQP,EAC/CkvC,EAAOtsC,KAAK4H,EAAOM,iBAAiBiS,KAAKsqB,UAAUrnC,GAAGwK,EAAOE,MAAO1K,IAEtE,MAAMmvC,EAAe9nB,EAAK8nB,aAE1B,MAAO,CACL3pC,IAFU2pC,GAAgBvD,GAAqB1hC,GAG/CglC,SACAjoC,MAAOuD,EAAO4kC,YACdloC,IAAKsD,EAAO6kC,UACZC,WAAYvyB,KAAKiyB,iBACjB1tB,MAAO9W,EACPskC,QAASznB,EAAKynB,QACd1yB,MAAO+yB,EAAe,EAAI9nB,EAAKkoB,mBAAqBloB,EAAKmoB,cAE7D,CACAf,wBAAAA,CAAyB9tC,GACvB,MAAOshC,aAAa,OAACL,EAAM,SAAEqC,GAAW1iC,SAAUskC,KAAM4J,EAAS,aAAEC,IAAiB3yB,KAC9E4yB,EAAaF,GAAa,EAC1B1gB,EAAShS,KAAKsqB,UAAU1mC,GACxBssC,EAASle,EAAO8d,QAChB+C,EAAW5C,GAAWC,GAC5B,IAGIuB,EAAMhrC,EAHNpF,EAAQ2wB,EAAO6S,EAAOl3B,MACtBzD,EAAQ,EACR9G,EAAS8jC,EAAWlnB,KAAKgkB,WAAWa,EAAQ7S,EAAQkV,GAAY7lC,EAEhE+B,IAAW/B,IACb6I,EAAQ9G,EAAS/B,EACjB+B,EAAS/B,GAEPwxC,IACFxxC,EAAQ6uC,EAAON,SACfxsC,EAAS8sC,EAAOL,OAASK,EAAON,SAClB,IAAVvuC,GAAekG,EAAKlG,KAAWkG,EAAK2oC,EAAOL,UAC7C3lC,EAAQ,GAEVA,GAAS7I,GAEX,MAAMquC,EAActuC,EAAcsxC,IAAeG,EAAuB3oC,EAAZwoC,EAC5D,IAAI5J,EAAOjE,EAAO92B,iBAAiB2hC,GAOnC,GALE+B,EADEzxB,KAAK8C,MAAMgwB,kBAAkBlvC,GACxBihC,EAAO92B,iBAAiB7D,EAAQ9G,GAEhC0lC,EAETriC,EAAOgrC,EAAO3I,EACVjiC,KAAKwB,IAAI5B,GAAQksC,EAAc,CACjClsC,EA7PN,SAAiBA,EAAMo+B,EAAQ+N,GAC7B,OAAa,IAATnsC,EACKc,EAAKd,IAENo+B,EAAOwM,eAAiB,GAAK,IAAMxM,EAAOp8B,KAAOmqC,EAAa,GAAK,EAC7E,CAwPaG,CAAQtsC,EAAMo+B,EAAQ+N,GAAcD,EACvCtxC,IAAUuxC,IACZ9J,GAAQriC,EAAO,GAEjB,MAAMusC,EAAanO,EAAOoO,mBAAmB,GACvCC,EAAWrO,EAAOoO,mBAAmB,GACrCxqC,EAAM5B,KAAK4B,IAAIuqC,EAAYE,GAC3BxqC,EAAM7B,KAAK6B,IAAIsqC,EAAYE,GACjCpK,EAAOjiC,KAAK6B,IAAI7B,KAAK4B,IAAIqgC,EAAMpgC,GAAMD,GACrCgpC,EAAO3I,EAAOriC,CAChB,CACA,GAAIqiC,IAASjE,EAAO92B,iBAAiB6kC,GAAa,CAChD,MAAMO,EAAW5rC,EAAKd,GAAQo+B,EAAOuO,qBAAqBR,GAAc,EACxE9J,GAAQqK,EACR1sC,GAAQ0sC,CACV,CACA,MAAO,CACL1sC,OACAqiC,OACA2I,OACAI,OAAQJ,EAAOhrC,EAAO,EAE1B,CACAmrC,wBAAAA,CAAyBhuC,EAAO0tC,GAC9B,MAAM/sB,EAAQ+sB,EAAM/sB,MACd/f,EAAUwb,KAAKxb,QACfwtC,EAAWxtC,EAAQwtC,SACnBqB,EAAkBjxC,EAAeoC,EAAQ6uC,gBAAiBC,KAChE,IAAIzB,EAAQprC,EACZ,GAAI6qC,EAAMS,QAAS,CACjB,MAAMQ,EAAaP,EAAWhyB,KAAKiyB,eAAeruC,GAAS0tC,EAAMiB,WAC3D9qC,EAAiC,SAAzBjD,EAAQ4tC,aA/V5B,SAAmCxuC,EAAO0tC,EAAO9sC,EAAS+tC,GACxD,MAAMJ,EAASb,EAAMa,OACfhD,EAAOgD,EAAOvuC,GACpB,IAAI+wB,EAAO/wB,EAAQ,EAAIuuC,EAAOvuC,EAAQ,GAAK,KACvC+uB,EAAO/uB,EAAQuuC,EAAO/uC,OAAS,EAAI+uC,EAAOvuC,EAAQ,GAAK,KAC3D,MAAM2vC,EAAU/uC,EAAQguC,mBACX,OAAT7d,IACFA,EAAOwa,GAAiB,OAATxc,EAAgB2e,EAAMnnC,IAAMmnC,EAAMpnC,MAAQyoB,EAAOwc,IAErD,OAATxc,IACFA,EAAOwc,EAAOA,EAAOxa,GAEvB,MAAMzqB,EAAQilC,GAAQA,EAAOtoC,KAAK4B,IAAIksB,EAAMhC,IAAS,EAAI4gB,EAEzD,MAAO,CACLC,MAFW3sC,KAAKwB,IAAIsqB,EAAOgC,GAAQ,EAAI4e,EAEzBhB,EACdlzB,MAAO7a,EAAQiuC,cACfvoC,QAEJ,CA6UUupC,CAA0B7vC,EAAO0tC,EAAO9sC,EAAS+tC,GAhX3D,SAAkC3uC,EAAO0tC,EAAO9sC,EAAS+tC,GACvD,MAAMmB,EAAYlvC,EAAQ4tC,aAC1B,IAAI3rC,EAAM4Y,EAQV,OAPIje,EAAcsyC,IAChBjtC,EAAO6qC,EAAM7oC,IAAMjE,EAAQguC,mBAC3BnzB,EAAQ7a,EAAQiuC,gBAEhBhsC,EAAOitC,EAAYnB,EACnBlzB,EAAQ,GAEH,CACLm0B,MAAO/sC,EAAO8rC,EACdlzB,QACAnV,MAAOonC,EAAMa,OAAOvuC,GAAU6C,EAAO,EAEzC,CAkWUktC,CAAyB/vC,EAAO0tC,EAAO9sC,EAAS+tC,GAC9CqB,EAAa5zB,KAAKkyB,eAAelyB,KAAKpc,MAAOoc,KAAKklB,YAAYjB,MAAO+N,EAAWpuC,OAAQiH,GAC9FgnC,EAASpqC,EAAMyC,MAASzC,EAAM+rC,MAAQI,EAAensC,EAAM+rC,MAAQ,EACnE/sC,EAAOI,KAAK4B,IAAI4qC,EAAiB5rC,EAAM+rC,MAAQ/rC,EAAM4X,MACvD,MACEwyB,EAASttB,EAAMxW,iBAAiBiS,KAAKsqB,UAAU1mC,GAAO2gB,EAAM5W,MAAO/J,GACnE6C,EAAOI,KAAK4B,IAAI4qC,EAAiB/B,EAAM7oC,IAAM6oC,EAAMjyB,OAErD,MAAO,CACLypB,KAAM+I,EAASprC,EAAO,EACtBgrC,KAAMI,EAASprC,EAAO,EACtBorC,SACAprC,OAEJ,CACAs4B,IAAAA,GACE,MAAM5xB,EAAO6S,KAAKklB,YACZL,EAAS13B,EAAK03B,OACdgP,EAAQ1mC,EAAK2Y,KACbtiB,EAAOqwC,EAAMzwC,OACnB,IAAIH,EAAI,EACR,KAAOA,EAAIO,IAAQP,EACsB,OAAnC+c,KAAKsqB,UAAUrnC,GAAG4hC,EAAOl3B,OAC3BkmC,EAAM5wC,GAAG87B,KAAK/e,KAAKmmB,KAGzB,EAEF4K,GAAc5vC,GAAK,MACnB4vC,GAAczuB,SAAW,CACvB4mB,oBAAoB,EACpBmD,gBAAiB,MACjBmG,mBAAoB,GACpBC,cAAe,GACfV,SAAS,EACTzP,WAAY,CACVH,QAAS,CACP3gC,KAAM,SACN0gC,WAAY,CAAC,IAAK,IAAK,OAAQ,QAAS,aAI9C6O,GAAchvB,UAAY,CACxByC,OAAQ,CACNsvB,QAAS,CACPtyC,KAAM,WACNuyC,QAAQ,EACRC,KAAM,CACJD,QAAQ,IAGZE,QAAS,CACPzyC,KAAM,SACN0yC,aAAa,KAKnB,MAAMC,WAAyBjO,GAC7Bc,UAAAA,GACEhnB,KAAK4mB,qBAAsB,EAC3BsK,MAAMlK,YACR,CACA+C,kBAAAA,CAAmB58B,EAAM2Y,EAAM5b,EAAOqD,GACpC,MAAMykB,EAASkf,MAAMnH,mBAAmB58B,EAAM2Y,EAAM5b,EAAOqD,GAC3D,IAAK,IAAItK,EAAI,EAAGA,EAAI+uB,EAAO5uB,OAAQH,IACjC+uB,EAAO/uB,GAAG6sC,QAAU9vB,KAAK+rB,0BAA0B9oC,EAAIiH,GAAO8d,OAEhE,OAAOgK,CACT,CACA6X,cAAAA,CAAe18B,EAAM2Y,EAAM5b,EAAOqD,GAChC,MAAMykB,EAASkf,MAAMrH,eAAe18B,EAAM2Y,EAAM5b,EAAOqD,GACvD,IAAK,IAAItK,EAAI,EAAGA,EAAI+uB,EAAO5uB,OAAQH,IAAK,CACtC,MAAMyD,EAAOof,EAAK5b,EAAQjH,GAC1B+uB,EAAO/uB,GAAG6sC,QAAU1tC,EAAesE,EAAK,GAAIsZ,KAAK+rB,0BAA0B9oC,EAAIiH,GAAO8d,OACxF,CACA,OAAOgK,CACT,CACA8X,eAAAA,CAAgB38B,EAAM2Y,EAAM5b,EAAOqD,GACjC,MAAMykB,EAASkf,MAAMpH,gBAAgB38B,EAAM2Y,EAAM5b,EAAOqD,GACxD,IAAK,IAAItK,EAAI,EAAGA,EAAI+uB,EAAO5uB,OAAQH,IAAK,CACtC,MAAMyD,EAAOof,EAAK5b,EAAQjH,GAC1B+uB,EAAO/uB,GAAG6sC,QAAU1tC,EAAesE,GAAQA,EAAK8L,IAAM9L,EAAK8L,EAAGwN,KAAK+rB,0BAA0B9oC,EAAIiH,GAAO8d,OAC1G,CACA,OAAOgK,CACT,CACAqZ,cAAAA,GACE,MAAMvlB,EAAO9F,KAAKklB,YAAYpf,KAC9B,IAAIpd,EAAM,EACV,IAAK,IAAIzF,EAAI6iB,EAAK1iB,OAAS,EAAGH,GAAK,IAAKA,EACtCyF,EAAM7B,KAAK6B,IAAIA,EAAKod,EAAK7iB,GAAGwD,KAAKuZ,KAAK+rB,0BAA0B9oC,IAAM,GAExE,OAAOyF,EAAM,GAAKA,CACpB,CACA4iC,gBAAAA,CAAiB1nC,GACf,MAAMuJ,EAAO6S,KAAKklB,aACZ,OAACj3B,EAAM,OAAEC,GAAUf,EACnB6kB,EAAShS,KAAKsqB,UAAU1mC,GACxBuB,EAAI8I,EAAOu9B,iBAAiBxZ,EAAO7sB,GACnCE,EAAI6I,EAAOs9B,iBAAiBxZ,EAAO3sB,GACnCmN,EAAIwf,EAAO8d,QACjB,MAAO,CACLvE,MAAOp+B,EAAKo+B,MACZlqC,MAAO,IAAM8D,EAAI,KAAOE,GAAKmN,EAAI,KAAOA,EAAI,IAAM,IAEtD,CACA8uB,MAAAA,CAAOxd,GACL,MAAM1W,EAAS4S,KAAKklB,YAAYpf,KAChC9F,KAAKmuB,eAAe/gC,EAAQ,EAAGA,EAAOhK,OAAQ0gB,EAChD,CACAqqB,cAAAA,CAAe/gC,EAAQlD,EAAOqD,EAAOuW,GACnC,MAAMykB,EAAiB,UAATzkB,GACR,OAACrW,EAAM,OAAEo3B,GAAU7kB,KAAKklB,aACxB,cAAC8H,EAAa,eAAED,GAAkB/sB,KAAKktB,kBAAkBhjC,EAAO4Z,GAChEshB,EAAQ33B,EAAOE,KACf03B,EAAQR,EAAOl3B,KACrB,IAAK,IAAI1K,EAAIiH,EAAOjH,EAAIiH,EAAQqD,EAAOtK,IAAK,CAC1C,MAAM+lB,EAAQ5b,EAAOnK,GACf+uB,GAAUuW,GAASvoB,KAAKsqB,UAAUrnC,GAClCi/B,EAAa,CAAC,EACdjO,EAASiO,EAAWkD,GAASmD,EAAQ96B,EAAOwlC,mBAAmB,IAAOxlC,EAAOM,iBAAiBikB,EAAOoT,IACrGlR,EAASgO,EAAWmD,GAASkD,EAAQ1D,EAAOuM,eAAiBvM,EAAO92B,iBAAiBikB,EAAOqT,IAClGnD,EAAW9P,KAAOjqB,MAAM8rB,IAAW9rB,MAAM+rB,GACrC6Y,IACF7K,EAAW19B,QAAUwoC,GAAiBhtB,KAAK+rB,0BAA0B9oC,EAAG+lB,EAAMqY,OAAS,SAAWvd,GAC9FykB,IACFrG,EAAW19B,QAAQwjB,OAAS,IAGhChI,KAAKstB,cAActkB,EAAO/lB,EAAGi/B,EAAYpe,EAC3C,CACF,CACAioB,yBAAAA,CAA0BnoC,EAAOkgB,GAC/B,MAAMkO,EAAShS,KAAKsqB,UAAU1mC,GAC9B,IAAIye,EAAS6uB,MAAMnF,0BAA0BnoC,EAAOkgB,GAChDzB,EAAO6gB,UACT7gB,EAAS5gB,OAAOiN,OAAO,CAAC,EAAG2T,EAAQ,CAAC6gB,SAAS,KAE/C,MAAMlb,EAAS3F,EAAO2F,OAKtB,MAJa,WAATlE,IACFzB,EAAO2F,OAAS,GAElB3F,EAAO2F,QAAU5lB,EAAe4vB,GAAUA,EAAO8d,QAAS9nB,GACnD3F,CACT,EAEF8xB,GAAiBhzC,GAAK,SACtBgzC,GAAiB7xB,SAAW,CAC1B4mB,oBAAoB,EACpBmD,gBAAiB,QACjB/J,WAAY,CACVH,QAAS,CACP3gC,KAAM,SACN0gC,WAAY,CAAC,IAAK,IAAK,cAAe,aAI5CiS,GAAiBpyB,UAAY,CAC3ByC,OAAQ,CACNrf,EAAG,CACD3D,KAAM,UAER6D,EAAG,CACD7D,KAAM,WAGV6iB,QAAS,CACP+vB,QAAS,CACPhW,UAAW,CACTiW,MAAKA,IACI,OAgCjB,MAAMC,WAA2BpO,GAC/BrmB,WAAAA,CAAYiD,EAAOnf,GACjButC,MAAMpuB,EAAOnf,GACbqc,KAAK4mB,qBAAsB,EAC3B5mB,KAAKu0B,iBAAc1pC,EACnBmV,KAAKw0B,iBAAc3pC,EACnBmV,KAAK6W,aAAUhsB,EACfmV,KAAK8W,aAAUjsB,CACjB,CACAo8B,UAAAA,GAAc,CACdhV,KAAAA,CAAM/nB,EAAOqD,GACX,MAAMuY,EAAO9F,KAAKsnB,aAAaxhB,KACzB3Y,EAAO6S,KAAKklB,YAClB,IAAsB,IAAlBllB,KAAK+R,SACP5kB,EAAKO,QAAUoY,MACV,CACL,IAKI7iB,EAAGO,EALHixC,EAAUxxC,IAAO6iB,EAAK7iB,GAC1B,GAAInB,EAASgkB,EAAK5b,IAAS,CACzB,MAAM,IAAC7F,EAAM,SAAW2b,KAAK+R,SAC7B0iB,EAAUxxC,IAAOqC,EAAiBwgB,EAAK7iB,GAAIoB,EAC7C,CAEA,IAAKpB,EAAIiH,EAAO1G,EAAO0G,EAAQqD,EAAOtK,EAAIO,IAAQP,EAChDkK,EAAKO,QAAQzK,GAAKwxC,EAAOxxC,EAE7B,CACF,CACAyxC,YAAAA,GACE,OAAO/rC,EAAUqX,KAAKxb,QAAQujB,SAAW,GAC3C,CACA4sB,iBAAAA,GACE,OAAOhsC,EAAUqX,KAAKxb,QAAQowC,cAChC,CACAC,mBAAAA,GACE,IAAIpsC,EAAM3B,EACN4B,GAAO5B,EACX,IAAK,IAAI7D,EAAI,EAAGA,EAAI+c,KAAK8C,MAAMgD,KAAKnD,SAASvf,SAAUH,EACrD,GAAI+c,KAAK8C,MAAMgyB,iBAAiB7xC,GAAI,CAClC,MAAMgiC,EAAajlB,KAAK8C,MAAMslB,eAAenlC,GAAGgiC,WAC1Cld,EAAWkd,EAAWyP,eACtBE,EAAgB3P,EAAW0P,oBACjClsC,EAAM5B,KAAK4B,IAAIA,EAAKsf,GACpBrf,EAAM7B,KAAK6B,IAAIA,EAAKqf,EAAW6sB,EACjC,CAEF,MAAO,CACL7sB,SAAUtf,EACVmsC,cAAelsC,EAAMD,EAEzB,CACA64B,MAAAA,CAAOxd,GACL,MAAMhB,EAAQ9C,KAAK8C,OACb,UAAC+oB,GAAa/oB,EACd3V,EAAO6S,KAAKklB,YACZ6P,EAAO5nC,EAAK2Y,KACZkvB,EAAUh1B,KAAKi1B,oBAAsBj1B,KAAKk1B,aAAaH,GAAQ/0B,KAAKxb,QAAQwwC,QAC5EG,EAAUtuC,KAAK6B,KAAK7B,KAAK4B,IAAIojC,EAAUzlB,MAAOylB,EAAUrkB,QAAUwtB,GAAW,EAAG,GAChFI,EAASvuC,KAAK4B,KDpvDFpH,ECovDmB2e,KAAKxb,QAAQ4wC,ODpvDzB9yC,ECovDiC6yC,EDnvD3C,kBAAV9zC,GAAsBA,EAAMkB,SAAS,KAC1CC,WAAWnB,GAAS,IAClBA,EAAQiB,GCivD0D,GDpvDnD+yC,IAACh0C,EAAOiB,ECqvDzB,MAAMgzC,EAAct1B,KAAKu1B,eAAev1B,KAAKpc,QACvC,cAACgxC,EAAa,SAAE7sB,GAAY/H,KAAK60B,uBACjC,OAACW,EAAM,OAAEC,EAAM,QAAE5e,EAAO,QAAEC,GArFpC,SAA2B/O,EAAU6sB,EAAeQ,GAClD,IAAII,EAAS,EACTC,EAAS,EACT5e,EAAU,EACVC,EAAU,EACd,GAAI8d,EAAgB9tC,EAAK,CACvB,MAAM4uC,EAAa3tB,EACb4tB,EAAWD,EAAad,EACxBgB,EAAS/uC,KAAKkJ,IAAI2lC,GAClBG,EAAShvC,KAAKiI,IAAI4mC,GAClBI,EAAOjvC,KAAKkJ,IAAI4lC,GAChBI,EAAOlvC,KAAKiI,IAAI6mC,GAChBK,EAAUA,CAACvsC,EAAOlD,EAAGC,IAAMyD,EAAcR,EAAOisC,EAAYC,GAAU,GAAQ,EAAI9uC,KAAK6B,IAAInC,EAAGA,EAAI6uC,EAAQ5uC,EAAGA,EAAI4uC,GACjHa,EAAUA,CAACxsC,EAAOlD,EAAGC,IAAMyD,EAAcR,EAAOisC,EAAYC,GAAU,IAAS,EAAI9uC,KAAK4B,IAAIlC,EAAGA,EAAI6uC,EAAQ5uC,EAAGA,EAAI4uC,GAClHc,EAAOF,EAAQ,EAAGJ,EAAQE,GAC1BK,EAAOH,EAAQ7uC,EAAS0uC,EAAQE,GAChCK,EAAOH,EAAQrvC,EAAIgvC,EAAQE,GAC3BO,EAAOJ,EAAQrvC,EAAKO,EAAS0uC,EAAQE,GAC3CP,GAAUU,EAAOE,GAAQ,EACzBX,GAAUU,EAAOE,GAAQ,EACzBxf,IAAYqf,EAAOE,GAAQ,EAC3Btf,IAAYqf,EAAOE,GAAQ,CAC7B,CACA,MAAO,CAACb,SAAQC,SAAQ5e,UAASC,UACnC,CA6D+Cwf,CAAkBvuB,EAAU6sB,EAAeQ,GAChFjqB,GAAY0gB,EAAUzlB,MAAQ4uB,GAAWQ,EACzC/d,GAAaoU,EAAUrkB,OAASwtB,GAAWS,EAC3Cc,EAAY1vC,KAAK6B,IAAI7B,KAAK4B,IAAI0iB,EAAUsM,GAAa,EAAG,GACxD+c,EAAcnyC,EAAY2d,KAAKxb,QAAQwjB,OAAQuuB,GAE/CC,GAAgBhC,EADF3tC,KAAK6B,IAAI8rC,EAAcY,EAAQ,IACAp1B,KAAKy2B,gCACxDz2B,KAAK6W,QAAUA,EAAU2d,EACzBx0B,KAAK8W,QAAUA,EAAU0d,EACzBrnC,EAAKupC,MAAQ12B,KAAK22B,iBAClB32B,KAAKw0B,YAAcA,EAAcgC,EAAex2B,KAAK42B,qBAAqB52B,KAAKpc,OAC/Eoc,KAAKu0B,YAAc1tC,KAAK6B,IAAIsX,KAAKw0B,YAAcgC,EAAelB,EAAa,GAC3Et1B,KAAKmuB,eAAe4G,EAAM,EAAGA,EAAK3xC,OAAQ0gB,EAC5C,CACA+yB,cAAAA,CAAe5zC,EAAGslC,GAChB,MAAMje,EAAOtK,KAAKxb,QACZ2I,EAAO6S,KAAKklB,YACZ0P,EAAgB50B,KAAK20B,oBAC3B,OAAKpM,GAASje,EAAK9H,UAAUs0B,gBAAmB92B,KAAK8C,MAAMgwB,kBAAkB7vC,IAA0B,OAApBkK,EAAKO,QAAQzK,IAAekK,EAAK2Y,KAAK7iB,GAAG8nC,OACnH,EAEF/qB,KAAK+2B,uBAAuB5pC,EAAKO,QAAQzK,GAAK2xC,EAAgB9tC,EACvE,CACAqnC,cAAAA,CAAe4G,EAAM7qC,EAAOqD,EAAOuW,GACjC,MAAMykB,EAAiB,UAATzkB,EACRhB,EAAQ9C,KAAK8C,MACb+oB,EAAY/oB,EAAM+oB,UAElBmL,EADOl0B,EAAMte,QACQge,UACrBy0B,GAAWpL,EAAU1iB,KAAO0iB,EAAUziB,OAAS,EAC/C8tB,GAAWrL,EAAUxiB,IAAMwiB,EAAUviB,QAAU,EAC/C6tB,EAAe5O,GAASyO,EAAcG,aACtC5C,EAAc4C,EAAe,EAAIn3B,KAAKu0B,YACtCC,EAAc2C,EAAe,EAAIn3B,KAAKw0B,aACtC,cAACxH,EAAa,eAAED,GAAkB/sB,KAAKktB,kBAAkBhjC,EAAO4Z,GACtE,IACI7gB,EADAyyC,EAAa11B,KAAK00B,eAEtB,IAAKzxC,EAAI,EAAGA,EAAIiH,IAASjH,EACvByyC,GAAc11B,KAAK62B,eAAe5zC,EAAGslC,GAEvC,IAAKtlC,EAAIiH,EAAOjH,EAAIiH,EAAQqD,IAAStK,EAAG,CACtC,MAAM2xC,EAAgB50B,KAAK62B,eAAe5zC,EAAGslC,GACvCjgB,EAAMysB,EAAK9xC,GACXi/B,EAAa,CACjB/8B,EAAG8xC,EAAUj3B,KAAK6W,QAClBxxB,EAAG6xC,EAAUl3B,KAAK8W,QAClB4e,aACAC,SAAUD,EAAad,EACvBA,gBACAJ,cACAD,eAEExH,IACF7K,EAAW19B,QAAUwoC,GAAiBhtB,KAAK+rB,0BAA0B9oC,EAAGqlB,EAAI+Y,OAAS,SAAWvd,IAElG4xB,GAAcd,EACd50B,KAAKstB,cAAchlB,EAAKrlB,EAAGi/B,EAAYpe,EACzC,CACF,CACA6yB,cAAAA,GACE,MAAMxpC,EAAO6S,KAAKklB,YACZkS,EAAWjqC,EAAK2Y,KACtB,IACI7iB,EADAyzC,EAAQ,EAEZ,IAAKzzC,EAAI,EAAGA,EAAIm0C,EAASh0C,OAAQH,IAAK,CACpC,MAAM5B,EAAQ8L,EAAKO,QAAQzK,GACb,OAAV5B,GAAmB8G,MAAM9G,KAAU2e,KAAK8C,MAAMgwB,kBAAkB7vC,IAAOm0C,EAASn0C,GAAG8nC,SACrF2L,GAAS7vC,KAAKwB,IAAIhH,GAEtB,CACA,OAAOq1C,CACT,CACAK,sBAAAA,CAAuB11C,GACrB,MAAMq1C,EAAQ12B,KAAKklB,YAAYwR,MAC/B,OAAIA,EAAQ,IAAMvuC,MAAM9G,GACfyF,GAAOD,KAAKwB,IAAIhH,GAASq1C,GAE3B,CACT,CACApL,gBAAAA,CAAiB1nC,GACf,MAAMuJ,EAAO6S,KAAKklB,YACZpiB,EAAQ9C,KAAK8C,MACbmnB,EAASnnB,EAAMgD,KAAKmkB,QAAU,GAC9B5oC,EAAQo4B,GAAatsB,EAAKO,QAAQ9J,GAAQkf,EAAMte,QAAQm1B,QAC9D,MAAO,CACL4R,MAAOtB,EAAOrmC,IAAU,GACxBvC,QAEJ,CACA4zC,iBAAAA,CAAkBF,GAChB,IAAIrsC,EAAM,EACV,MAAMoa,EAAQ9C,KAAK8C,MACnB,IAAI7f,EAAGO,EAAM2J,EAAM83B,EAAYzgC,EAC/B,IAAKuwC,EACH,IAAK9xC,EAAI,EAAGO,EAAOsf,EAAMgD,KAAKnD,SAASvf,OAAQH,EAAIO,IAAQP,EACzD,GAAI6f,EAAMgyB,iBAAiB7xC,GAAI,CAC7BkK,EAAO2V,EAAMslB,eAAenlC,GAC5B8xC,EAAO5nC,EAAK2Y,KACZmf,EAAa93B,EAAK83B,WAClB,KACF,CAGJ,IAAK8P,EACH,OAAO,EAET,IAAK9xC,EAAI,EAAGO,EAAOuxC,EAAK3xC,OAAQH,EAAIO,IAAQP,EAC1CuB,EAAUygC,EAAW8G,0BAA0B9oC,GACnB,UAAxBuB,EAAQ6yC,cACV3uC,EAAM7B,KAAK6B,IAAIA,EAAKlE,EAAQqkB,aAAe,EAAGrkB,EAAQ8yC,kBAAoB,IAG9E,OAAO5uC,CACT,CACAwsC,YAAAA,CAAaH,GACX,IAAIrsC,EAAM,EACV,IAAK,IAAIzF,EAAI,EAAGO,EAAOuxC,EAAK3xC,OAAQH,EAAIO,IAAQP,EAAG,CACjD,MAAMuB,EAAUwb,KAAK+rB,0BAA0B9oC,GAC/CyF,EAAM7B,KAAK6B,IAAIA,EAAKlE,EAAQuvC,QAAU,EAAGvvC,EAAQ+yC,aAAe,EAClE,CACA,OAAO7uC,CACT,CACAkuC,oBAAAA,CAAqBjzC,GACnB,IAAI6zC,EAAmB,EACvB,IAAK,IAAIv0C,EAAI,EAAGA,EAAIU,IAAgBV,EAC9B+c,KAAK8C,MAAMgyB,iBAAiB7xC,KAC9Bu0C,GAAoBx3B,KAAKu1B,eAAetyC,IAG5C,OAAOu0C,CACT,CACAjC,cAAAA,CAAe5xC,GACb,OAAOkD,KAAK6B,IAAItG,EAAe4d,KAAK8C,MAAMgD,KAAKnD,SAAShf,GAAc8c,OAAQ,GAAI,EACpF,CACAg2B,6BAAAA,GACE,OAAOz2B,KAAK42B,qBAAqB52B,KAAK8C,MAAMgD,KAAKnD,SAASvf,SAAW,CACvE,EAEFkxC,GAAmBnzC,GAAK,WACxBmzC,GAAmBhyB,SAAW,CAC5B4mB,oBAAoB,EACpBmD,gBAAiB,MACjB7pB,UAAW,CACTs0B,eAAe,EACfK,cAAc,GAEhB7U,WAAY,CACVH,QAAS,CACP3gC,KAAM,SACN0gC,WAAY,CAAC,gBAAiB,WAAY,cAAe,cAAe,aAAc,IAAK,IAAK,SAAU,cAAe,aAG7HkT,OAAQ,MACRrtB,SAAU,EACV6sB,cAAe,IACf5sB,OAAQ,OACRgtB,QAAS,EACTpxB,UAAW,KAEb0wB,GAAmBtyB,YAAc,CAC/ByD,YAAcV,GAAkB,YAATA,EACvBY,WAAaZ,GAAkB,YAATA,GAExBuvB,GAAmBvyB,UAAY,CAC7BwV,YAAa,EACblT,QAAS,CACPozB,OAAQ,CACNxN,OAAQ,CACNyN,cAAAA,CAAe50B,GACb,MAAMgD,EAAOhD,EAAMgD,KACnB,GAAIA,EAAKmkB,OAAO7mC,QAAU0iB,EAAKnD,SAASvf,OAAQ,CAC9C,MAAO6mC,QAAQ,WAACniB,IAAehF,EAAM20B,OAAOjzC,QAC5C,OAAOshB,EAAKmkB,OAAOlmC,KAAI,CAACwnC,EAAOtoC,KAC7B,MACMogB,EADOP,EAAMslB,eAAe,GACfnD,WAAWhM,SAASh2B,GACvC,MAAO,CACLonB,KAAMkhB,EACN3gB,UAAWvH,EAAMZ,gBACjBuI,YAAa3H,EAAMX,YACnBuI,UAAW5H,EAAMwF,YACjBf,WAAYA,EACZijB,QAASjoB,EAAMgwB,kBAAkB7vC,GACjCW,MAAOX,EACR,GAEL,CACA,MAAO,EACT,GAEFkhB,OAAAA,CAAQnb,EAAG2uC,EAAYF,GACrBA,EAAO30B,MAAM80B,qBAAqBD,EAAW/zC,OAC7C6zC,EAAO30B,MAAMwe,QACf,GAEF8S,QAAS,CACPhW,UAAW,CACTiW,MAAKA,IACI,GAET9I,KAAAA,CAAMsM,GACJ,IAAIC,EAAYD,EAAYtM,MAC5B,MAAMlqC,EAAQ,KAAOw2C,EAAYE,eAOjC,OANIz2C,EAAQw2C,IACVA,EAAYA,EAAUj2C,QACtBi2C,EAAU,IAAMz2C,GAEhBy2C,GAAaz2C,EAERy2C,CACT,MAMR,MAAME,WAAuB9R,GAC3Bc,UAAAA,GACEhnB,KAAK4mB,qBAAsB,EAC3B5mB,KAAK6mB,oBAAqB,EAC1BqK,MAAMlK,YACR,CACA1F,MAAAA,CAAOxd,GACL,MAAM3W,EAAO6S,KAAKklB,aACXmC,QAAS3c,EAAM5E,KAAM1Y,EAAS,GAAE,SAAE6qC,GAAY9qC,EAC/CE,EAAqB2S,KAAK8C,MAAMmqB,oBACtC,IAAI,MAAC/iC,EAAK,MAAEqD,GAASL,GAAiCC,EAAMC,EAAQC,GACpE2S,KAAK0mB,WAAax8B,EAClB8V,KAAK2mB,WAAap5B,EACdS,GAAoBb,KACtBjD,EAAQ,EACRqD,EAAQH,EAAOhK,QAEjBsnB,EAAKiS,OAAS3c,KAAK8C,MACnB4H,EAAKoS,cAAgB9c,KAAKpc,MAC1B8mB,EAAKwtB,aAAeD,EAASC,WAC7BxtB,EAAKtd,OAASA,EACd,MAAM5I,EAAUwb,KAAK8rB,6BAA6BhoB,GAC7C9D,KAAKxb,QAAQigB,WAChBjgB,EAAQqkB,YAAc,GAExBrkB,EAAQm3B,QAAU3b,KAAKxb,QAAQm3B,QAC/B3b,KAAKstB,cAAc5iB,OAAM7f,EAAW,CAClCstC,UAAW9qC,EACX7I,WACCsf,GACH9D,KAAKmuB,eAAe/gC,EAAQlD,EAAOqD,EAAOuW,EAC5C,CACAqqB,cAAAA,CAAe/gC,EAAQlD,EAAOqD,EAAOuW,GACnC,MAAMykB,EAAiB,UAATzkB,GACR,OAACrW,EAAM,OAAEo3B,EAAM,SAAEqC,EAAQ,SAAE+Q,GAAYj4B,KAAKklB,aAC5C,cAAC8H,EAAa,eAAED,GAAkB/sB,KAAKktB,kBAAkBhjC,EAAO4Z,GAChEshB,EAAQ33B,EAAOE,KACf03B,EAAQR,EAAOl3B,MACf,SAAC8mB,EAAQ,QAAEkH,GAAW3b,KAAKxb,QAC3B4zC,EAAenwC,EAASwsB,GAAYA,EAAWzyB,OAAOiF,kBACtDoxC,EAAer4B,KAAK8C,MAAMmqB,qBAAuB1E,GAAkB,SAATzkB,EAChE,IAAIw0B,EAAapuC,EAAQ,GAAK8V,KAAKsqB,UAAUpgC,EAAQ,GACrD,IAAK,IAAIjH,EAAIiH,EAAOjH,EAAIiH,EAAQqD,IAAStK,EAAG,CAC1C,MAAM+lB,EAAQ5b,EAAOnK,GACf+uB,EAAShS,KAAKsqB,UAAUrnC,GACxBi/B,EAAamW,EAAervB,EAAQ,CAAC,EACrCuvB,EAAWn3C,EAAc4wB,EAAOqT,IAChCpR,EAASiO,EAAWkD,GAAS33B,EAAOM,iBAAiBikB,EAAOoT,GAAQniC,GACpEixB,EAASgO,EAAWmD,GAASkD,GAASgQ,EAAW1T,EAAOuM,eAAiBvM,EAAO92B,iBAAiBm5B,EAAWlnB,KAAKgkB,WAAWa,EAAQ7S,EAAQkV,GAAYlV,EAAOqT,GAAQpiC,GAC7Ki/B,EAAW9P,KAAOjqB,MAAM8rB,IAAW9rB,MAAM+rB,IAAWqkB,EACpDrW,EAAWnC,KAAO98B,EAAI,GAAM4D,KAAKwB,IAAI2pB,EAAOoT,GAASkT,EAAWlT,IAAWgT,EACvEzc,IACFuG,EAAWlQ,OAASA,EACpBkQ,EAAW+J,IAAMgM,EAASnyB,KAAK7iB,IAE7B8pC,IACF7K,EAAW19B,QAAUwoC,GAAiBhtB,KAAK+rB,0BAA0B9oC,EAAG+lB,EAAMqY,OAAS,SAAWvd,IAE/Fu0B,GACHr4B,KAAKstB,cAActkB,EAAO/lB,EAAGi/B,EAAYpe,GAE3Cw0B,EAAatmB,CACf,CACF,CACAqZ,cAAAA,GACE,MAAMl+B,EAAO6S,KAAKklB,YACZmC,EAAUl6B,EAAKk6B,QACfmR,EAASnR,EAAQ7iC,SAAW6iC,EAAQ7iC,QAAQqkB,aAAe,EAC3D/C,EAAO3Y,EAAK2Y,MAAQ,GAC1B,IAAKA,EAAK1iB,OACR,OAAOo1C,EAET,MAAMjmB,EAAazM,EAAK,GAAGrf,KAAKuZ,KAAK+rB,0BAA0B,IACzD0M,EAAY3yB,EAAKA,EAAK1iB,OAAS,GAAGqD,KAAKuZ,KAAK+rB,0BAA0BjmB,EAAK1iB,OAAS,IAC1F,OAAOyD,KAAK6B,IAAI8vC,EAAQjmB,EAAYkmB,GAAa,CACnD,CACA1Z,IAAAA,GACE,MAAM5xB,EAAO6S,KAAKklB,YAClB/3B,EAAKk6B,QAAQqR,oBAAoB14B,KAAK8C,MAAM+oB,UAAW1+B,EAAKM,OAAOE,MACnEujC,MAAMnS,MACR,EAEFiZ,GAAe72C,GAAK,OACpB62C,GAAe11B,SAAW,CACxB4mB,mBAAoB,OACpBmD,gBAAiB,QACjB5nB,UAAU,EACVgQ,UAAU,GAEZujB,GAAej2B,UAAY,CACzByC,OAAQ,CACNsvB,QAAS,CACPtyC,KAAM,YAERyyC,QAAS,CACPzyC,KAAM,YAKZ,MAAMm3C,WAA4BzS,GAChCrmB,WAAAA,CAAYiD,EAAOnf,GACjButC,MAAMpuB,EAAOnf,GACbqc,KAAKu0B,iBAAc1pC,EACnBmV,KAAKw0B,iBAAc3pC,CACrB,CACAygC,gBAAAA,CAAiB1nC,GACf,MAAMuJ,EAAO6S,KAAKklB,YACZpiB,EAAQ9C,KAAK8C,MACbmnB,EAASnnB,EAAMgD,KAAKmkB,QAAU,GAC9B5oC,EAAQo4B,GAAatsB,EAAKO,QAAQ9J,GAAO4O,EAAGsQ,EAAMte,QAAQm1B,QAChE,MAAO,CACL4R,MAAOtB,EAAOrmC,IAAU,GACxBvC,QAEJ,CACAyoC,eAAAA,CAAgB38B,EAAM2Y,EAAM5b,EAAOqD,GACjC,OAAOukB,GAA4B8mB,KAAK54B,KAAjC8R,CAAuC3kB,EAAM2Y,EAAM5b,EAAOqD,EACnE,CACA+zB,MAAAA,CAAOxd,GACL,MAAMixB,EAAO/0B,KAAKklB,YAAYpf,KAC9B9F,KAAK64B,gBACL74B,KAAKmuB,eAAe4G,EAAM,EAAGA,EAAK3xC,OAAQ0gB,EAC5C,CACA6mB,SAAAA,GACE,MAAMx9B,EAAO6S,KAAKklB,YACZz9B,EAAQ,CAACgB,IAAKzG,OAAOiF,kBAAmByB,IAAK1G,OAAOgpC,mBAY1D,OAXA79B,EAAK2Y,KAAKha,SAAQ,CAAC8pB,EAAShyB,KAC1B,MAAMouB,EAAShS,KAAKsqB,UAAU1mC,GAAO4O,GAChCrK,MAAM6pB,IAAWhS,KAAK8C,MAAMgwB,kBAAkBlvC,KAC7CouB,EAASvqB,EAAMgB,MACjBhB,EAAMgB,IAAMupB,GAEVA,EAASvqB,EAAMiB,MACjBjB,EAAMiB,IAAMspB,GAEhB,IAEKvqB,CACT,CACAoxC,aAAAA,GACE,MAAM/1B,EAAQ9C,KAAK8C,MACb+oB,EAAY/oB,EAAM+oB,UAClBvhB,EAAOxH,EAAMte,QACbs0C,EAAUjyC,KAAK4B,IAAIojC,EAAUziB,MAAQyiB,EAAU1iB,KAAM0iB,EAAUviB,OAASuiB,EAAUxiB,KAClFmrB,EAAc3tC,KAAK6B,IAAIowC,EAAU,EAAG,GAEpCtC,GAAgBhC,EADF3tC,KAAK6B,IAAI4hB,EAAKyuB,iBAAoBvE,EAAc,IAAQlqB,EAAKyuB,iBAAoB,EAAG,IACrDj2B,EAAMk2B,yBACzDh5B,KAAKw0B,YAAcA,EAAegC,EAAex2B,KAAKpc,MACtDoc,KAAKu0B,YAAcv0B,KAAKw0B,YAAcgC,CACxC,CACArI,cAAAA,CAAe4G,EAAM7qC,EAAOqD,EAAOuW,GACjC,MAAMykB,EAAiB,UAATzkB,EACRhB,EAAQ9C,KAAK8C,MAEbk0B,EADOl0B,EAAMte,QACQge,UACrB+B,EAAQvE,KAAKklB,YAAYiD,OACzB8O,EAAU1yB,EAAM00B,QAChB/B,EAAU3yB,EAAM20B,QAChBC,EAAoB50B,EAAM60B,cAAc,GAAK,GAAMxyC,EACzD,IACI3D,EADAwG,EAAQ0vC,EAEZ,MAAME,EAAe,IAAMr5B,KAAKs5B,uBAChC,IAAKr2C,EAAI,EAAGA,EAAIiH,IAASjH,EACvBwG,GAASuW,KAAKu5B,cAAct2C,EAAG6gB,EAAMu1B,GAEvC,IAAKp2C,EAAIiH,EAAOjH,EAAIiH,EAAQqD,EAAOtK,IAAK,CACtC,MAAMqlB,EAAMysB,EAAK9xC,GACjB,IAAIyyC,EAAajsC,EACbksC,EAAWlsC,EAAQuW,KAAKu5B,cAAct2C,EAAG6gB,EAAMu1B,GAC/C7E,EAAc1xB,EAAMgwB,kBAAkB7vC,GAAKshB,EAAMi1B,8BAA8Bx5B,KAAKsqB,UAAUrnC,GAAGuP,GAAK,EAC1G/I,EAAQksC,EACJpN,IACEyO,EAAcG,eAChB3C,EAAc,GAEZwC,EAAcF,gBAChBpB,EAAaC,EAAWwD,IAG5B,MAAMjX,EAAa,CACjB/8B,EAAG8xC,EACH5xC,EAAG6xC,EACH3C,YAAa,EACbC,cACAkB,aACAC,WACAnxC,QAASwb,KAAK+rB,0BAA0B9oC,EAAGqlB,EAAI+Y,OAAS,SAAWvd,IAErE9D,KAAKstB,cAAchlB,EAAKrlB,EAAGi/B,EAAYpe,EACzC,CACF,CACAw1B,oBAAAA,GACE,MAAMnsC,EAAO6S,KAAKklB,YAClB,IAAI33B,EAAQ,EAMZ,OALAJ,EAAK2Y,KAAKha,SAAQ,CAAC8pB,EAAShyB,MACrBuE,MAAM6X,KAAKsqB,UAAU1mC,GAAO4O,IAAMwN,KAAK8C,MAAMgwB,kBAAkBlvC,IAClE2J,GACF,IAEKA,CACT,CACAgsC,aAAAA,CAAc31C,EAAOkgB,EAAMu1B,GACzB,OAAOr5B,KAAK8C,MAAMgwB,kBAAkBlvC,GAChC+E,EAAUqX,KAAK+rB,0BAA0BnoC,EAAOkgB,GAAMra,OAAS4vC,GAC/D,CACN,EAEFV,GAAoBx3C,GAAK,YACzBw3C,GAAoBr2B,SAAW,CAC7B+pB,gBAAiB,MACjB7pB,UAAW,CACTs0B,eAAe,EACfK,cAAc,GAEhB7U,WAAY,CACVH,QAAS,CACP3gC,KAAM,SACN0gC,WAAY,CAAC,IAAK,IAAK,aAAc,WAAY,cAAe,iBAGpEte,UAAW,IACX8xB,WAAY,GAEdiD,GAAoB52B,UAAY,CAC9BwV,YAAa,EACblT,QAAS,CACPozB,OAAQ,CACNxN,OAAQ,CACNyN,cAAAA,CAAe50B,GACb,MAAMgD,EAAOhD,EAAMgD,KACnB,GAAIA,EAAKmkB,OAAO7mC,QAAU0iB,EAAKnD,SAASvf,OAAQ,CAC9C,MAAO6mC,QAAQ,WAACniB,IAAehF,EAAM20B,OAAOjzC,QAC5C,OAAOshB,EAAKmkB,OAAOlmC,KAAI,CAACwnC,EAAOtoC,KAC7B,MACMogB,EADOP,EAAMslB,eAAe,GACfnD,WAAWhM,SAASh2B,GACvC,MAAO,CACLonB,KAAMkhB,EACN3gB,UAAWvH,EAAMZ,gBACjBuI,YAAa3H,EAAMX,YACnBuI,UAAW5H,EAAMwF,YACjBf,WAAYA,EACZijB,QAASjoB,EAAMgwB,kBAAkB7vC,GACjCW,MAAOX,EACR,GAEL,CACA,MAAO,EACT,GAEFkhB,OAAAA,CAAQnb,EAAG2uC,EAAYF,GACrBA,EAAO30B,MAAM80B,qBAAqBD,EAAW/zC,OAC7C6zC,EAAO30B,MAAMwe,QACf,GAEF8S,QAAS,CACPhW,UAAW,CACTiW,MAAKA,IACI,GAET9I,MAAM1oB,GACGA,EAAQC,MAAMgD,KAAKmkB,OAAOpnB,EAAQmpB,WAAa,KAAOnpB,EAAQk1B,kBAK7EvzB,OAAQ,CACNhS,EAAG,CACDhR,KAAM,eACNi4C,WAAY,CACVC,SAAS,GAEXxF,aAAa,EACbF,KAAM,CACJ2F,UAAU,GAEZC,YAAa,CACXF,SAAS,GAEXhE,WAAY,KAKlB,MAAMmE,WAAsBvF,IAE5BuF,GAAc14C,GAAK,MACnB04C,GAAcv3B,SAAW,CACvB8yB,OAAQ,EACRrtB,SAAU,EACV6sB,cAAe,IACf5sB,OAAQ,QAGV,MAAM8xB,WAAwB5T,GAC5BoF,gBAAAA,CAAiB1nC,GACf,MAAMihC,EAAS7kB,KAAKklB,YAAYL,OAC1B7S,EAAShS,KAAKsqB,UAAU1mC,GAC9B,MAAO,CACL2nC,MAAO1G,EAAOqF,YAAYtmC,GAC1BvC,MAAO,GAAKwjC,EAAO2G,iBAAiBxZ,EAAO6S,EAAOl3B,OAEtD,CACAm8B,eAAAA,CAAgB38B,EAAM2Y,EAAM5b,EAAOqD,GACjC,OAAOukB,GAA4B8mB,KAAK54B,KAAjC8R,CAAuC3kB,EAAM2Y,EAAM5b,EAAOqD,EACnE,CACA+zB,MAAAA,CAAOxd,GACL,MAAM3W,EAAO6S,KAAKklB,YACZxa,EAAOvd,EAAKk6B,QACZj6B,EAASD,EAAK2Y,MAAQ,GACtBmkB,EAAS98B,EAAKM,OAAOy8B,YAE3B,GADAxf,EAAKtd,OAASA,EACD,WAAT0W,EAAmB,CACrB,MAAMtf,EAAUwb,KAAK8rB,6BAA6BhoB,GAC7C9D,KAAKxb,QAAQigB,WAChBjgB,EAAQqkB,YAAc,GAExB,MAAMqZ,EAAa,CACjBnB,OAAO,EACPgZ,UAAW9P,EAAO7mC,SAAWgK,EAAOhK,OACpCoB,WAEFwb,KAAKstB,cAAc5iB,OAAM7f,EAAWq3B,EAAYpe,EAClD,CACA9D,KAAKmuB,eAAe/gC,EAAQ,EAAGA,EAAOhK,OAAQ0gB,EAChD,CACAqqB,cAAAA,CAAe/gC,EAAQlD,EAAOqD,EAAOuW,GACnC,MAAMS,EAAQvE,KAAKklB,YAAYiD,OACzBI,EAAiB,UAATzkB,EACd,IAAK,IAAI7gB,EAAIiH,EAAOjH,EAAIiH,EAAQqD,EAAOtK,IAAK,CAC1C,MAAM+lB,EAAQ5b,EAAOnK,GACfuB,EAAUwb,KAAK+rB,0BAA0B9oC,EAAG+lB,EAAMqY,OAAS,SAAWvd,GACtEk2B,EAAgBz1B,EAAM01B,yBAAyBh3C,EAAG+c,KAAKsqB,UAAUrnC,GAAGuP,GACpErN,EAAIojC,EAAQhkB,EAAM00B,QAAUe,EAAc70C,EAC1CE,EAAIkjC,EAAQhkB,EAAM20B,QAAUc,EAAc30C,EAC1C68B,EAAa,CACjB/8B,IACAE,IACAoE,MAAOuwC,EAAcvwC,MACrB2oB,KAAMjqB,MAAMhD,IAAMgD,MAAM9C,GACxBb,WAEFwb,KAAKstB,cAActkB,EAAO/lB,EAAGi/B,EAAYpe,EAC3C,CACF,EAEFg2B,GAAgB34C,GAAK,QACrB24C,GAAgBx3B,SAAW,CACzB4mB,mBAAoB,OACpBmD,gBAAiB,QACjBzoB,UAAW,IACXa,UAAU,EACVxB,SAAU,CACRyH,KAAM,CACJ9B,KAAM,WAIZkxB,GAAgB/3B,UAAY,CAC1BwV,YAAa,EACb/S,OAAQ,CACNhS,EAAG,CACDhR,KAAM,kBAKZ,MAAM04C,GACJr6B,WAAAA,GACEG,KAAK7a,OAAI0F,EACTmV,KAAK3a,OAAIwF,EACTmV,KAAKqhB,QAAS,EACdrhB,KAAKxb,aAAUqG,EACfmV,KAAKmjB,iBAAct4B,CACrB,CACAsvC,eAAAA,CAAgBC,GACd,MAAM,EAACj1C,EAAC,EAAEE,GAAK2a,KAAKq6B,SAAS,CAAC,IAAK,KAAMD,GACzC,MAAO,CAACj1C,IAAGE,IACb,CACAi1C,QAAAA,GACE,OAAOryC,EAAS+X,KAAK7a,IAAM8C,EAAS+X,KAAK3a,EAC3C,CACAg1C,QAAAA,CAASztB,EAAO2tB,GACd,MAAMrc,EAAQle,KAAKmjB,YACnB,IAAKoX,IAAUrc,EACb,OAAOle,KAET,MAAMF,EAAM,CAAC,EAIb,OAHA8M,EAAM9gB,SAAQihB,IACZjN,EAAIiN,GAAQmR,EAAMnR,IAASmR,EAAMnR,GAAMsU,SAAWnD,EAAMnR,GAAMoU,IAAMnhB,KAAK+M,EAAK,IAEzEjN,CACT,EAEFo6B,GAAQ53B,SAAW,CAAC,EACpB43B,GAAQM,mBAAgB3vC,EAExB,MAAM4vC,GAAa,CACjBp4B,OAAOhhB,GACEC,EAAQD,GAASA,EAAQ,GAAKA,EAEvCq5C,OAAAA,CAAQC,EAAW/2C,EAAO0rC,GACxB,GAAkB,IAAdqL,EACF,MAAO,IAET,MAAMhhB,EAAS3Z,KAAK8C,MAAMte,QAAQm1B,OAClC,IAAIihB,EACA5mB,EAAQ2mB,EACZ,GAAIrL,EAAMlsC,OAAS,EAAG,CACpB,MAAMy3C,EAAUh0C,KAAK6B,IAAI7B,KAAKwB,IAAIinC,EAAM,GAAGjuC,OAAQwF,KAAKwB,IAAIinC,EAAMA,EAAMlsC,OAAS,GAAG/B,SAChFw5C,EAAU,MAAQA,EAAU,QAC9BD,EAAW,cAEb5mB,EAmBN,SAAwB2mB,EAAWrL,GACjC,IAAItb,EAAQsb,EAAMlsC,OAAS,EAAIksC,EAAM,GAAGjuC,MAAQiuC,EAAM,GAAGjuC,MAAQiuC,EAAM,GAAGjuC,MAAQiuC,EAAM,GAAGjuC,MACvFwF,KAAKwB,IAAI2rB,IAAU,GAAK2mB,IAAc9zC,KAAKkB,MAAM4yC,KACnD3mB,EAAQ2mB,EAAY9zC,KAAKkB,MAAM4yC,IAEjC,OAAO3mB,CACT,CAzBc8mB,CAAeH,EAAWrL,EACpC,CACA,MAAMyL,EAAWzzC,EAAMT,KAAKwB,IAAI2rB,IAC1BgnB,EAAan0C,KAAK6B,IAAI7B,KAAK4B,KAAK,EAAI5B,KAAKkB,MAAMgzC,GAAW,IAAK,GAC/Dv2C,EAAU,CAACo2C,WAAUK,sBAAuBD,EAAYE,sBAAuBF,GAErF,OADAv5C,OAAOiN,OAAOlK,EAASwb,KAAKxb,QAAQ8qC,MAAMnV,QACnCV,GAAakhB,EAAWhhB,EAAQn1B,EACzC,EACA22C,WAAAA,CAAYR,EAAW/2C,EAAO0rC,GAC5B,GAAkB,IAAdqL,EACF,MAAO,IAET,MAAMnZ,EAASmZ,EAAa9zC,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMqzC,KAC1D,OAAe,IAAXnZ,GAA2B,IAAXA,GAA2B,IAAXA,EAC3BiZ,GAAWC,QAAQ94C,KAAKoe,KAAM26B,EAAW/2C,EAAO0rC,GAElD,EACT,GASF,IAAI8L,GAAQ,CAACX,eAqEb,SAASY,GAAS92B,EAAO+qB,GACvB,MAAMgM,EAAW/2B,EAAM/f,QAAQ8qC,MACzBiM,EAAaD,EAASE,eAwB9B,SAA2Bj3B,GACzB,MAAMwvB,EAASxvB,EAAM/f,QAAQuvC,OACvB0H,EAAal3B,EAAMm3B,YACnBC,EAAWp3B,EAAM6qB,QAAUqM,GAAc1H,EAAS,EAAI,GACtD6H,EAAWr3B,EAAMs3B,WAAaJ,EACpC,OAAO50C,KAAKkB,MAAMlB,KAAK4B,IAAIkzC,EAAUC,GACvC,CA9B+CE,CAAkBv3B,GACzDw3B,EAAeT,EAASU,MAAMC,QA6CtC,SAAyB3M,GACvB,MAAMrZ,EAAS,GACf,IAAIhzB,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAO8rC,EAAMlsC,OAAQH,EAAIO,EAAMP,IACrCqsC,EAAMrsC,GAAG+4C,OACX/lB,EAAOpwB,KAAK5C,GAGhB,OAAOgzB,CACT,CAtDgDimB,CAAgB5M,GAAS,GACjE6M,EAAkBJ,EAAa34C,OAC/Bg5C,EAAQL,EAAa,GACrB1wC,EAAO0wC,EAAaI,EAAkB,GACtCE,EAAW,GACjB,GAAIF,EAAkBZ,EAEpB,OAgDJ,SAAoBjM,EAAO+M,EAAUN,EAAc/G,GACjD,IAEI/xC,EAFAsK,EAAQ,EACRolB,EAAOopB,EAAa,GAGxB,IADA/G,EAAUnuC,KAAKy1C,KAAKtH,GACf/xC,EAAI,EAAGA,EAAIqsC,EAAMlsC,OAAQH,IACxBA,IAAM0vB,IACR0pB,EAASx2C,KAAKypC,EAAMrsC,IACpBsK,IACAolB,EAAOopB,EAAaxuC,EAAQynC,GAGlC,CA7DIuH,CAAWjN,EAAO+M,EAAUN,EAAcI,EAAkBZ,GACrDc,EAET,MAAMrH,EAqBR,SAA0B+G,EAAczM,EAAOiM,GAC7C,MAAMiB,EA4DR,SAAwB7rB,GACtB,MAAMztB,EAAMytB,EAAIvtB,OAChB,IAAIH,EAAGw5C,EACP,GAAIv5C,EAAM,EACR,OAAO,EAET,IAAKu5C,EAAO9rB,EAAI,GAAI1tB,EAAI,EAAGA,EAAIC,IAAOD,EACpC,GAAI0tB,EAAI1tB,GAAK0tB,EAAI1tB,EAAI,KAAOw5C,EAC1B,OAAO,EAGX,OAAOA,CACT,CAxE2BC,CAAeX,GAClC/G,EAAU1F,EAAMlsC,OAASm4C,EAC/B,IAAKiB,EACH,OAAO31C,KAAK6B,IAAIssC,EAAS,GAE3B,MAAM2H,ED/yER,SAAoBt7C,GAClB,MAAM40B,EAAS,GACTzsB,EAAO3C,KAAK2C,KAAKnI,GACvB,IAAI4B,EACJ,IAAKA,EAAI,EAAGA,EAAIuG,EAAMvG,IAChB5B,EAAQ4B,IAAM,IAChBgzB,EAAOpwB,KAAK5C,GACZgzB,EAAOpwB,KAAKxE,EAAQ4B,IAOxB,OAJIuG,KAAiB,EAAPA,IACZysB,EAAOpwB,KAAK2D,GAEdysB,EAAOgZ,MAAK,CAAC1oC,EAAGC,IAAMD,EAAIC,IAAG24B,MACtBlJ,CACT,CCgyEkB2mB,CAAWJ,GAC3B,IAAK,IAAIv5C,EAAI,EAAGO,EAAOm5C,EAAQv5C,OAAS,EAAGH,EAAIO,EAAMP,IAAK,CACxD,MAAMm9B,EAASuc,EAAQ15C,GACvB,GAAIm9B,EAAS4U,EACX,OAAO5U,CAEX,CACA,OAAOv5B,KAAK6B,IAAIssC,EAAS,EAC3B,CAnCkB6H,CAAiBd,EAAczM,EAAOiM,GACtD,GAAIY,EAAkB,EAAG,CACvB,IAAIl5C,EAAGO,EACP,MAAMs5C,EAAkBX,EAAkB,EAAIt1C,KAAKc,OAAO0D,EAAO+wC,IAAUD,EAAkB,IAAM,KAEnG,IADA/pB,GAAKkd,EAAO+M,EAAUrH,EAAS5zC,EAAc07C,GAAmB,EAAIV,EAAQU,EAAiBV,GACxFn5C,EAAI,EAAGO,EAAO24C,EAAkB,EAAGl5C,EAAIO,EAAMP,IAChDmvB,GAAKkd,EAAO+M,EAAUrH,EAAS+G,EAAa94C,GAAI84C,EAAa94C,EAAI,IAGnE,OADAmvB,GAAKkd,EAAO+M,EAAUrH,EAAS3pC,EAAMjK,EAAc07C,GAAmBxN,EAAMlsC,OAASiI,EAAOyxC,GACrFT,CACT,CAEA,OADAjqB,GAAKkd,EAAO+M,EAAUrH,GACfqH,CACT,CA8CA,SAASjqB,GAAKkd,EAAO+M,EAAUrH,EAAS+H,EAAYC,GAClD,MAAM9yC,EAAQ9H,EAAe26C,EAAY,GACnC5yC,EAAMtD,KAAK4B,IAAIrG,EAAe46C,EAAU1N,EAAMlsC,QAASksC,EAAMlsC,QACnE,IACIA,EAAQH,EAAG0vB,EADXplB,EAAQ,EAQZ,IANAynC,EAAUnuC,KAAKy1C,KAAKtH,GAChBgI,IACF55C,EAAS45C,EAAWD,EACpB/H,EAAU5xC,EAASyD,KAAKkB,MAAM3E,EAAS4xC,IAEzCriB,EAAOzoB,EACAyoB,EAAO,GACZplB,IACAolB,EAAO9rB,KAAKc,MAAMuC,EAAQqD,EAAQynC,GAEpC,IAAK/xC,EAAI4D,KAAK6B,IAAIwB,EAAO,GAAIjH,EAAIkH,EAAKlH,IAChCA,IAAM0vB,IACR0pB,EAASx2C,KAAKypC,EAAMrsC,IACpBsK,IACAolB,EAAO9rB,KAAKc,MAAMuC,EAAQqD,EAAQynC,GAGxC,CAhKA1yB,GAASrW,IAAI,QAAS,CACpBytC,SAAS,EACT3F,QAAQ,EACR/wC,SAAS,EACTkxC,aAAa,EACbtY,OAAQ,QACRqhB,MAAO,EACPjJ,KAAM,CACJ0F,SAAS,EACTzuB,UAAW,EACXiyB,YAAY,EACZC,iBAAiB,EACjBC,WAAW,EACX3B,WAAY,EACZ4B,UAAWA,CAAClX,EAAM3hC,IAAYA,EAAQymB,UACtCqyB,UAAWA,CAACnX,EAAM3hC,IAAYA,EAAQgc,MACtCuzB,QAAQ,EACRtW,WAAY,GACZC,iBAAkB,EAClB7U,YAAa,GAEfwrB,MAAO,CACLqF,SAAS,EACTrvB,KAAM,GACNkzB,QAAS,CACPl0B,IAAK,EACLC,OAAQ,IAGZgmB,MAAO,CACLkO,YAAa,EACbC,YAAa,GACbC,QAAQ,EACRC,gBAAiB,EACjBC,gBAAiB,GACjBL,QAAS,EACT7D,SAAS,EACT2B,UAAU,EACVwC,gBAAiB,EACjBC,YAAa,EACbr7C,SAAU24C,GAAMX,WAAWp4B,OAC3B07B,MAAO,CAAC,EACR/B,MAAO,CAAC,EACRhvC,MAAO,SACPgxC,WAAY,OACZC,mBAAmB,EACnBC,cAAe,4BACfC,gBAAiB,KAGrB77B,GAASwC,MAAM,cAAe,QAAS,GAAI,SAC3CxC,GAASwC,MAAM,aAAc,QAAS,GAAI,eAC1CxC,GAASwC,MAAM,aAAc,cAAe,GAAI,eAChDxC,GAASwC,MAAM,cAAe,QAAS,GAAI,SAC3CxC,GAASqC,SAAS,QAAS,CACzBiB,WAAW,EACXH,YAAcV,IAAUA,EAAKW,WAAW,YAAcX,EAAKW,WAAW,UAAqB,aAATX,GAAgC,WAATA,EACzGY,WAAaZ,GAAkB,eAATA,GAAkC,mBAATA,IAEjDzC,GAASqC,SAAS,SAAU,CAC1BiB,UAAW,UAEbtD,GAASqC,SAAS,cAAe,CAC/Bc,YAAcV,GAAkB,oBAATA,GAAuC,aAATA,EACrDY,WAAaZ,GAAkB,oBAATA,IA+GxB,MACMq5B,GAAiBA,CAAC75B,EAAO6rB,EAAM2D,IAAoB,QAAT3D,GAA2B,SAATA,EAAkB7rB,EAAM6rB,GAAQ2D,EAASxvB,EAAM6rB,GAAQ2D,EACzH,SAASsK,GAAO1tB,EAAK2tB,GACnB,MAAMroB,EAAS,GACTsoB,EAAY5tB,EAAIvtB,OAASk7C,EACzBp7C,EAAMytB,EAAIvtB,OAChB,IAAIH,EAAI,EACR,KAAOA,EAAIC,EAAKD,GAAKs7C,EACnBtoB,EAAOpwB,KAAK8qB,EAAI9pB,KAAKkB,MAAM9E,KAE7B,OAAOgzB,CACT,CACA,SAASuoB,GAAoBj6B,EAAO3gB,EAAO66C,GACzC,MAAMr7C,EAASmhB,EAAM+qB,MAAMlsC,OACrBs7C,EAAa73C,KAAK4B,IAAI7E,EAAOR,EAAS,GACtC8G,EAAQqa,EAAM8tB,YACdloC,EAAMoa,EAAM+tB,UACZlqC,EAAU,KAChB,IACI2rC,EADA4K,EAAYp6B,EAAMgrB,gBAAgBmP,GAEtC,KAAID,IAEA1K,EADa,IAAX3wC,EACOyD,KAAK6B,IAAIi2C,EAAYz0C,EAAOC,EAAMw0C,GACxB,IAAV/6C,GACC2gB,EAAMgrB,gBAAgB,GAAKoP,GAAa,GAExCA,EAAYp6B,EAAMgrB,gBAAgBmP,EAAa,IAAM,EAEjEC,GAAaD,EAAa96C,EAAQmwC,GAAUA,EACxC4K,EAAYz0C,EAAQ9B,GAAWu2C,EAAYx0C,EAAM/B,IAIvD,OAAOu2C,CACT,CAcA,SAASC,GAAkBp6C,GACzB,OAAOA,EAAQ44C,UAAY54C,EAAQi3C,WAAa,CAClD,CACA,SAASoD,GAAer6C,EAAS4oB,GAC/B,IAAK5oB,EAAQk1C,QACX,OAAO,EAET,MAAMv2B,EAAOgK,GAAO3oB,EAAQ2e,KAAMiK,GAC5BmwB,EAAUrwB,GAAU1oB,EAAQ+4C,SAElC,OADcj8C,EAAQkD,EAAQ6lB,MAAQ7lB,EAAQ6lB,KAAKjnB,OAAS,GAC5C+f,EAAKG,WAAci6B,EAAQ/1B,MAC7C,CAcA,SAASs3B,GAAW9xC,EAAO+xC,EAAU/7C,GACnC,IAAI8c,EAAM/S,GAAmBC,GAI7B,OAHKhK,GAAwB,UAAb+7C,IAA2B/7C,GAAwB,UAAb+7C,KACpDj/B,EA5EkB9S,IAAoB,SAAVA,EAAmB,QAAoB,UAAVA,EAAoB,OAASA,EA4EhFgyC,CAAal/B,IAEdA,CACT,CAmCA,MAAMm/B,WAAc/E,GAClBr6B,WAAAA,CAAY2gB,GACV0Q,QACAlxB,KAAK7e,GAAKq/B,EAAIr/B,GACd6e,KAAKxe,KAAOg/B,EAAIh/B,KAChBwe,KAAKxb,aAAUqG,EACfmV,KAAKyD,IAAM+c,EAAI/c,IACfzD,KAAK8C,MAAQ0d,EAAI1d,MACjB9C,KAAKqJ,SAAMxe,EACXmV,KAAKsJ,YAASze,EACdmV,KAAKmJ,UAAOte,EACZmV,KAAKoJ,WAAQve,EACbmV,KAAKoG,WAAQvb,EACbmV,KAAKwH,YAAS3c,EACdmV,KAAKk/B,SAAW,CACd/1B,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,GAEVtJ,KAAKmL,cAAWtgB,EAChBmV,KAAKyX,eAAY5sB,EACjBmV,KAAKm/B,gBAAat0C,EAClBmV,KAAKo/B,mBAAgBv0C,EACrBmV,KAAKq/B,iBAAcx0C,EACnBmV,KAAKs/B,kBAAez0C,EACpBmV,KAAKrS,UAAO9C,EACZmV,KAAKu/B,mBAAgB10C,EACrBmV,KAAKvX,SAAMoC,EACXmV,KAAKtX,SAAMmC,EACXmV,KAAKw/B,YAAS30C,EACdmV,KAAKsvB,MAAQ,GACbtvB,KAAKy/B,eAAiB,KACtBz/B,KAAK0/B,YAAc,KACnB1/B,KAAK2/B,YAAc,KACnB3/B,KAAKovB,QAAU,EACfpvB,KAAK67B,WAAa,EAClB77B,KAAK4/B,kBAAoB,CAAC,EAC1B5/B,KAAKqyB,iBAAcxnC,EACnBmV,KAAKsyB,eAAYznC,EACjBmV,KAAK6/B,gBAAiB,EACtB7/B,KAAK8/B,cAAWj1C,EAChBmV,KAAK+/B,cAAWl1C,EAChBmV,KAAKggC,mBAAgBn1C,EACrBmV,KAAKigC,mBAAgBp1C,EACrBmV,KAAKkgC,aAAe,EACpBlgC,KAAKmgC,aAAe,EACpBngC,KAAK8uB,OAAS,CAAC,EACf9uB,KAAKogC,mBAAoB,EACzBpgC,KAAK8mB,cAAWj8B,CAClB,CACAw1C,IAAAA,CAAK77C,GACHwb,KAAKxb,QAAUA,EAAQ2rB,WAAWnQ,KAAKqH,cACvCrH,KAAKrS,KAAOnJ,EAAQmJ,KACpBqS,KAAK+/B,SAAW//B,KAAKiS,MAAMztB,EAAQiE,KACnCuX,KAAK8/B,SAAW9/B,KAAKiS,MAAMztB,EAAQkE,KACnCsX,KAAKigC,cAAgBjgC,KAAKiS,MAAMztB,EAAQ87C,cACxCtgC,KAAKggC,cAAgBhgC,KAAKiS,MAAMztB,EAAQ+7C,aAC1C,CACAtuB,KAAAA,CAAMga,EAAKroC,GACT,OAAOqoC,CACT,CACAn+B,aAAAA,GACE,IAAI,SAACiyC,EAAQ,SAAED,EAAQ,cAAEG,EAAa,cAAED,GAAiBhgC,KAKzD,OAJA+/B,EAAW79C,EAAgB69C,EAAU/9C,OAAOiF,mBAC5C64C,EAAW59C,EAAgB49C,EAAU99C,OAAOgpC,mBAC5CiV,EAAgB/9C,EAAgB+9C,EAAej+C,OAAOiF,mBACtD+4C,EAAgB99C,EAAgB89C,EAAeh+C,OAAOgpC,mBAC/C,CACLviC,IAAKvG,EAAgB69C,EAAUE,GAC/Bv3C,IAAKxG,EAAgB49C,EAAUE,GAC/BpyC,WAAY7L,EAAeg+C,GAC3BlyC,WAAY9L,EAAe+9C,GAE/B,CACAnV,SAAAA,CAAUC,GACR,IACInjC,GADA,IAACgB,EAAG,IAAEC,EAAG,WAAEkF,EAAU,WAAEC,GAAcmS,KAAKlS,gBAE9C,GAAIF,GAAcC,EAChB,MAAO,CAACpF,MAAKC,OAEf,MAAM83C,EAAQxgC,KAAK+kB,0BACnB,IAAK,IAAI9hC,EAAI,EAAGO,EAAOg9C,EAAMp9C,OAAQH,EAAIO,IAAQP,EAC/CwE,EAAQ+4C,EAAMv9C,GAAGgiC,WAAW0F,UAAU3qB,KAAM4qB,GACvCh9B,IACHnF,EAAM5B,KAAK4B,IAAIA,EAAKhB,EAAMgB,MAEvBoF,IACHnF,EAAM7B,KAAK6B,IAAIA,EAAKjB,EAAMiB,MAK9B,OAFAD,EAAMoF,GAAcpF,EAAMC,EAAMA,EAAMD,EACtCC,EAAMkF,GAAcnF,EAAMC,EAAMD,EAAMC,EAC/B,CACLD,IAAKvG,EAAgBuG,EAAKvG,EAAgBwG,EAAKD,IAC/CC,IAAKxG,EAAgBwG,EAAKxG,EAAgBuG,EAAKC,IAEnD,CACA+3C,UAAAA,GACE,MAAO,CACLt3B,KAAMnJ,KAAKq/B,aAAe,EAC1Bh2B,IAAKrJ,KAAKm/B,YAAc,EACxB/1B,MAAOpJ,KAAKs/B,cAAgB,EAC5Bh2B,OAAQtJ,KAAKo/B,eAAiB,EAElC,CACAsB,QAAAA,GACE,OAAO1gC,KAAKsvB,KACd,CACApF,SAAAA,GACE,MAAMpkB,EAAO9F,KAAK8C,MAAMgD,KACxB,OAAO9F,KAAKxb,QAAQylC,SAAWjqB,KAAKqxB,eAAiBvrB,EAAK66B,QAAU76B,EAAK86B,UAAY96B,EAAKmkB,QAAU,EACtG,CACA4W,YAAAA,GACE7gC,KAAK8uB,OAAS,CAAC,EACf9uB,KAAKogC,mBAAoB,CAC3B,CACAU,YAAAA,GACEr+C,EAASud,KAAKxb,QAAQs8C,aAAc,CAAC9gC,MACvC,CACAshB,MAAAA,CAAOnW,EAAUsM,EAAWD,GAC1B,MAAM,YAAC0c,EAAW,MAAE+I,EAAO3N,MAAOgM,GAAYt7B,KAAKxb,QAC7Cu8C,EAAazF,EAASyF,WAC5B/gC,KAAK8gC,eACL9gC,KAAKmL,SAAWA,EAChBnL,KAAKyX,UAAYA,EACjBzX,KAAKk/B,SAAW1nB,EAAU/1B,OAAOiN,OAAO,CACtCya,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,GACPkO,GACHxX,KAAKsvB,MAAQ,KACbtvB,KAAK2/B,YAAc,KACnB3/B,KAAKy/B,eAAiB,KACtBz/B,KAAK0/B,YAAc,KACnB1/B,KAAKghC,sBACLhhC,KAAKihC,gBACLjhC,KAAKkhC,qBACLlhC,KAAK67B,WAAa77B,KAAKqxB,eACnBrxB,KAAKoG,MAAQoR,EAAQrO,KAAOqO,EAAQpO,MACpCpJ,KAAKwH,OAASgQ,EAAQnO,IAAMmO,EAAQlO,OACnCtJ,KAAKogC,oBACRpgC,KAAKmhC,mBACLnhC,KAAKohC,sBACLphC,KAAKqhC,kBACLrhC,KAAKw/B,OD7sCX,SAAmB8B,EAAQrE,EAAO/I,GAChC,MAAM,IAACzrC,EAAG,IAAEC,GAAO44C,EACbC,EAASl/C,EAAY46C,GAAQv0C,EAAMD,GAAO,GAC1C+4C,EAAWA,CAACngD,EAAO8K,IAAQ+nC,GAAyB,IAAV7yC,EAAc,EAAIA,EAAQ8K,EAC1E,MAAO,CACL1D,IAAK+4C,EAAS/4C,GAAM5B,KAAKwB,IAAIk5C,IAC7B74C,IAAK84C,EAAS94C,EAAK64C,GAEvB,CCqsCoBE,CAAUzhC,KAAMi9B,EAAO/I,GACrCl0B,KAAKogC,mBAAoB,GAE3BpgC,KAAK0hC,mBACL1hC,KAAKsvB,MAAQtvB,KAAK2hC,cAAgB,GAClC3hC,KAAK4hC,kBACL,MAAMC,EAAkBd,EAAa/gC,KAAKsvB,MAAMlsC,OAChD4c,KAAK8hC,sBAAsBD,EAAkBxD,GAAOr+B,KAAKsvB,MAAOyR,GAAc/gC,KAAKsvB,OACnFtvB,KAAK4iB,YACL5iB,KAAK+hC,+BACL/hC,KAAKgiC,yBACLhiC,KAAKiiC,8BACD3G,EAAS5B,UAAY4B,EAASD,UAAgC,SAApBC,EAASx3C,UACrDkc,KAAKsvB,MAAQ+L,GAASr7B,KAAMA,KAAKsvB,OACjCtvB,KAAK2/B,YAAc,KACnB3/B,KAAKkiC,iBAEHL,GACF7hC,KAAK8hC,sBAAsB9hC,KAAKsvB,OAElCtvB,KAAKmiC,YACLniC,KAAKoiC,MACLpiC,KAAKqiC,WACLriC,KAAKsiC,aACP,CACA1f,SAAAA,GACE,IACIoQ,EAAYE,EADZqP,EAAgBviC,KAAKxb,QAAQxB,QAE7Bgd,KAAKqxB,gBACP2B,EAAahzB,KAAKmJ,KAClB+pB,EAAWlzB,KAAKoJ,QAEhB4pB,EAAahzB,KAAKqJ,IAClB6pB,EAAWlzB,KAAKsJ,OAChBi5B,GAAiBA,GAEnBviC,KAAKqyB,YAAcW,EACnBhzB,KAAKsyB,UAAYY,EACjBlzB,KAAK6/B,eAAiB0C,EACtBviC,KAAKovB,QAAU8D,EAAWF,EAC1BhzB,KAAKwiC,eAAiBxiC,KAAKxb,QAAQi+C,aACrC,CACAH,WAAAA,GACE7/C,EAASud,KAAKxb,QAAQ89C,YAAa,CAACtiC,MACtC,CACAghC,mBAAAA,GACEv+C,EAASud,KAAKxb,QAAQw8C,oBAAqB,CAAChhC,MAC9C,CACAihC,aAAAA,GACMjhC,KAAKqxB,gBACPrxB,KAAKoG,MAAQpG,KAAKmL,SAClBnL,KAAKmJ,KAAO,EACZnJ,KAAKoJ,MAAQpJ,KAAKoG,QAElBpG,KAAKwH,OAASxH,KAAKyX,UACnBzX,KAAKqJ,IAAM,EACXrJ,KAAKsJ,OAAStJ,KAAKwH,QAErBxH,KAAKq/B,YAAc,EACnBr/B,KAAKm/B,WAAa,EAClBn/B,KAAKs/B,aAAe,EACpBt/B,KAAKo/B,cAAgB,CACvB,CACA8B,kBAAAA,GACEz+C,EAASud,KAAKxb,QAAQ08C,mBAAoB,CAAClhC,MAC7C,CACA0iC,UAAAA,CAAW39B,GACT/E,KAAK8C,MAAM6/B,cAAc59B,EAAM/E,KAAKqH,cACpC5kB,EAASud,KAAKxb,QAAQugB,GAAO,CAAC/E,MAChC,CACAmhC,gBAAAA,GACEnhC,KAAK0iC,WAAW,mBAClB,CACAtB,mBAAAA,GAAuB,CACvBC,eAAAA,GACErhC,KAAK0iC,WAAW,kBAClB,CACAhB,gBAAAA,GACE1hC,KAAK0iC,WAAW,mBAClB,CACAf,UAAAA,GACE,MAAO,EACT,CACAC,eAAAA,GACE5hC,KAAK0iC,WAAW,kBAClB,CACAE,2BAAAA,GACEngD,EAASud,KAAKxb,QAAQo+C,4BAA6B,CAAC5iC,MACtD,CACA6iC,kBAAAA,CAAmBvT,GACjB,MAAMgM,EAAWt7B,KAAKxb,QAAQ8qC,MAC9B,IAAIrsC,EAAGO,EAAM07B,EACb,IAAKj8B,EAAI,EAAGO,EAAO8rC,EAAMlsC,OAAQH,EAAIO,EAAMP,IACzCi8B,EAAOoQ,EAAMrsC,GACbi8B,EAAKqM,MAAQ9oC,EAAS64C,EAAS74C,SAAU,CAACy8B,EAAK79B,MAAO4B,EAAGqsC,GAAQtvB,KAErE,CACA8iC,0BAAAA,GACErgD,EAASud,KAAKxb,QAAQs+C,2BAA4B,CAAC9iC,MACrD,CACA+hC,4BAAAA,GACEt/C,EAASud,KAAKxb,QAAQu9C,6BAA8B,CAAC/hC,MACvD,CACAgiC,sBAAAA,GACE,MAAMx9C,EAAUwb,KAAKxb,QACf82C,EAAW92C,EAAQ8qC,MACnByT,EAAW/iC,KAAKsvB,MAAMlsC,OACtBo6C,EAAclC,EAASkC,aAAe,EACtCC,EAAcnC,EAASmC,YAC7B,IACIJ,EAAW5lB,EAAWurB,EADtBzD,EAAgB/B,EAEpB,IAAKx9B,KAAKijC,eAAiB3H,EAAS5B,SAAW8D,GAAeC,GAAesF,GAAY,IAAM/iC,KAAKqxB,eAElG,YADArxB,KAAKu/B,cAAgB/B,GAGvB,MAAM0F,EAAaljC,KAAKmjC,iBAClBC,EAAgBF,EAAWG,OAAOj9B,MAClCk9B,EAAiBJ,EAAWK,QAAQ/7B,OACpC2D,EAAWzgB,EAAYsV,KAAK8C,MAAMsD,MAAQg9B,EAAe,EAAGpjC,KAAKmL,UACvEkyB,EAAY74C,EAAQuvC,OAAS/zB,KAAKmL,SAAW43B,EAAW53B,GAAY43B,EAAW,GAC3EK,EAAgB,EAAI/F,IACtBA,EAAYlyB,GAAY43B,GAAYv+C,EAAQuvC,OAAS,GAAM,IAC3Dtc,EAAYzX,KAAKyX,UAAYmnB,GAAkBp6C,EAAQwvC,MACvDsH,EAASiC,QAAUsB,GAAer6C,EAAQ6vC,MAAOr0B,KAAK8C,MAAMte,QAAQ2e,MACpE6/B,EAAmBn8C,KAAK2C,KAAK45C,EAAgBA,EAAgBE,EAAiBA,GAC9E/D,EAAgB12C,EAAUhC,KAAK4B,IAC7B5B,KAAK28C,KAAK94C,GAAaw4C,EAAWK,QAAQ/7B,OAAS,GAAK61B,GAAY,EAAG,IACvEx2C,KAAK28C,KAAK94C,EAAY+sB,EAAYurB,GAAmB,EAAG,IAAMn8C,KAAK28C,KAAK94C,EAAY44C,EAAiBN,GAAmB,EAAG,MAE7HzD,EAAgB14C,KAAK6B,IAAI80C,EAAa32C,KAAK4B,IAAIg1C,EAAa8B,KAE9Dv/B,KAAKu/B,cAAgBA,CACvB,CACA0C,2BAAAA,GACEx/C,EAASud,KAAKxb,QAAQy9C,4BAA6B,CAACjiC,MACtD,CACAkiC,aAAAA,GAAiB,CACjBC,SAAAA,GACE1/C,EAASud,KAAKxb,QAAQ29C,UAAW,CAACniC,MACpC,CACAoiC,GAAAA,GACE,MAAMtJ,EAAU,CACd1yB,MAAO,EACPoB,OAAQ,IAEJ,MAAC1E,EAAOte,SAAU8qC,MAAOgM,EAAUjH,MAAOoP,EAAWzP,KAAM0P,IAAa1jC,KACxE05B,EAAU15B,KAAKijC,aACf5R,EAAerxB,KAAKqxB,eAC1B,GAAIqI,EAAS,CACX,MAAMiK,EAAc9E,GAAe4E,EAAW3gC,EAAMte,QAAQ2e,MAQ5D,GAPIkuB,GACFyH,EAAQ1yB,MAAQpG,KAAKmL,SACrB2tB,EAAQtxB,OAASo3B,GAAkB8E,GAAYC,IAE/C7K,EAAQtxB,OAASxH,KAAKyX,UACtBqhB,EAAQ1yB,MAAQw4B,GAAkB8E,GAAYC,GAE5CrI,EAAS5B,SAAW15B,KAAKsvB,MAAMlsC,OAAQ,CACzC,MAAM,MAACg5C,EAAK,KAAE/wC,EAAI,OAAEg4C,EAAM,QAAEE,GAAWvjC,KAAKmjC,iBACtCS,EAAiC,EAAnBtI,EAASiC,QACvBsG,EAAel7C,EAAUqX,KAAKu/B,eAC9BxvC,EAAMlJ,KAAKkJ,IAAI8zC,GACf/0C,EAAMjI,KAAKiI,IAAI+0C,GACrB,GAAIxS,EAAc,CAChB,MAAMyS,EAAcxI,EAASoC,OAAS,EAAI5uC,EAAMu0C,EAAOj9B,MAAQrW,EAAMwzC,EAAQ/7B,OAC7EsxB,EAAQtxB,OAAS3gB,KAAK4B,IAAIuX,KAAKyX,UAAWqhB,EAAQtxB,OAASs8B,EAAcF,EAC3E,KAAO,CACL,MAAMG,EAAazI,EAASoC,OAAS,EAAI3tC,EAAMszC,EAAOj9B,MAAQtX,EAAMy0C,EAAQ/7B,OAC5EsxB,EAAQ1yB,MAAQvf,KAAK4B,IAAIuX,KAAKmL,SAAU2tB,EAAQ1yB,MAAQ29B,EAAaH,EACvE,CACA5jC,KAAKgkC,kBAAkB5H,EAAO/wC,EAAMyD,EAAKiB,EAC3C,CACF,CACAiQ,KAAKikC,iBACD5S,GACFrxB,KAAKoG,MAAQpG,KAAKovB,QAAUtsB,EAAMsD,MAAQpG,KAAKk/B,SAAS/1B,KAAOnJ,KAAKk/B,SAAS91B,MAC7EpJ,KAAKwH,OAASsxB,EAAQtxB,SAEtBxH,KAAKoG,MAAQ0yB,EAAQ1yB,MACrBpG,KAAKwH,OAASxH,KAAKovB,QAAUtsB,EAAM0E,OAASxH,KAAKk/B,SAAS71B,IAAMrJ,KAAKk/B,SAAS51B,OAElF,CACA06B,iBAAAA,CAAkB5H,EAAO/wC,EAAMyD,EAAKiB,GAClC,MAAOu/B,OAAO,MAACtiC,EAAK,QAAEuwC,GAAQ,SAAEwB,GAAY/+B,KAAKxb,QAC3C0/C,EAAmC,IAAvBlkC,KAAKu/B,cACjB4E,EAAgC,QAAbpF,GAAoC,MAAd/+B,KAAKrS,KACpD,GAAIqS,KAAKqxB,eAAgB,CACvB,MAAM+S,EAAapkC,KAAKuvB,gBAAgB,GAAKvvB,KAAKmJ,KAC5Ck7B,EAAcrkC,KAAKoJ,MAAQpJ,KAAKuvB,gBAAgBvvB,KAAKsvB,MAAMlsC,OAAS,GAC1E,IAAIi8C,EAAc,EACdC,EAAe,EACf4E,EACEC,GACF9E,EAActvC,EAAMqsC,EAAMh2B,MAC1Bk5B,EAAexwC,EAAMzD,EAAKmc,SAE1B63B,EAAcvwC,EAAMstC,EAAM50B,OAC1B83B,EAAevvC,EAAM1E,EAAK+a,OAET,UAAVpZ,EACTsyC,EAAej0C,EAAK+a,MACD,QAAVpZ,EACTqyC,EAAcjD,EAAMh2B,MACD,UAAVpZ,IACTqyC,EAAcjD,EAAMh2B,MAAQ,EAC5Bk5B,EAAej0C,EAAK+a,MAAQ,GAE9BpG,KAAKq/B,YAAcx4C,KAAK6B,KAAK22C,EAAc+E,EAAa7G,GAAWv9B,KAAKoG,OAASpG,KAAKoG,MAAQg+B,GAAa,GAC3GpkC,KAAKs/B,aAAez4C,KAAK6B,KAAK42C,EAAe+E,EAAc9G,GAAWv9B,KAAKoG,OAASpG,KAAKoG,MAAQi+B,GAAc,EACjH,KAAO,CACL,IAAIlF,EAAa9zC,EAAKmc,OAAS,EAC3B43B,EAAgBhD,EAAM50B,OAAS,EACrB,UAAVxa,GACFmyC,EAAa,EACbC,EAAgBhD,EAAM50B,QACH,QAAVxa,IACTmyC,EAAa9zC,EAAKmc,OAClB43B,EAAgB,GAElBp/B,KAAKm/B,WAAaA,EAAa5B,EAC/Bv9B,KAAKo/B,cAAgBA,EAAgB7B,CACvC,CACF,CACA0G,cAAAA,GACMjkC,KAAKk/B,WACPl/B,KAAKk/B,SAAS/1B,KAAOtiB,KAAK6B,IAAIsX,KAAKq/B,YAAar/B,KAAKk/B,SAAS/1B,MAC9DnJ,KAAKk/B,SAAS71B,IAAMxiB,KAAK6B,IAAIsX,KAAKm/B,WAAYn/B,KAAKk/B,SAAS71B,KAC5DrJ,KAAKk/B,SAAS91B,MAAQviB,KAAK6B,IAAIsX,KAAKs/B,aAAct/B,KAAKk/B,SAAS91B,OAChEpJ,KAAKk/B,SAAS51B,OAASziB,KAAK6B,IAAIsX,KAAKo/B,cAAep/B,KAAKk/B,SAAS51B,QAEtE,CACA+4B,QAAAA,GACE5/C,EAASud,KAAKxb,QAAQ69C,SAAU,CAACriC,MACnC,CACAqxB,YAAAA,GACE,MAAM,KAAC1jC,EAAI,SAAEoxC,GAAY/+B,KAAKxb,QAC9B,MAAoB,QAAbu6C,GAAmC,WAAbA,GAAkC,MAATpxC,CACxD,CACA22C,UAAAA,GACE,OAAOtkC,KAAKxb,QAAQ+/C,QACtB,CACAzC,qBAAAA,CAAsBxS,GAGpB,IAAIrsC,EAAGO,EACP,IAHAwc,KAAK4iC,8BACL5iC,KAAK6iC,mBAAmBvT,GAEnBrsC,EAAI,EAAGO,EAAO8rC,EAAMlsC,OAAQH,EAAIO,EAAMP,IACrC7B,EAAckuC,EAAMrsC,GAAGsoC,SACzB+D,EAAMzjC,OAAO5I,EAAG,GAChBO,IACAP,KAGJ+c,KAAK8iC,4BACP,CACAK,cAAAA,GACE,IAAID,EAAaljC,KAAK2/B,YACtB,IAAKuD,EAAY,CACf,MAAMnC,EAAa/gC,KAAKxb,QAAQ8qC,MAAMyR,WACtC,IAAIzR,EAAQtvB,KAAKsvB,MACbyR,EAAazR,EAAMlsC,SACrBksC,EAAQ+O,GAAO/O,EAAOyR,IAExB/gC,KAAK2/B,YAAcuD,EAAaljC,KAAKwkC,mBAAmBlV,EAAOA,EAAMlsC,OACvE,CACA,OAAO8/C,CACT,CACAsB,kBAAAA,CAAmBlV,EAAOlsC,GACxB,MAAM,IAACqgB,EAAKm8B,kBAAmB6E,GAAUzkC,KACnC0kC,EAAS,GACTC,EAAU,GAChB,IAEI1hD,EAAGyb,EAAGgI,EAAM6kB,EAAOqZ,EAAUC,EAAYt+B,EAAOjD,EAAY8C,EAAOoB,EAAQs9B,EAF3EC,EAAkB,EAClBC,EAAmB,EAEvB,IAAK/hD,EAAI,EAAGA,EAAIG,IAAUH,EAAG,CAO3B,GANAsoC,EAAQ+D,EAAMrsC,GAAGsoC,MACjBqZ,EAAW5kC,KAAKilC,wBAAwBhiD,GACxCwgB,EAAIN,KAAO0hC,EAAaD,EAAS3+B,OACjCM,EAAQk+B,EAAOI,GAAcJ,EAAOI,IAAe,CAAC/+B,KAAM,CAAC,EAAGC,GAAI,IAClEzC,EAAashC,EAASthC,WACtB8C,EAAQoB,EAAS,EACZpmB,EAAcmqC,IAAWjqC,EAAQiqC,IAG/B,GAAIjqC,EAAQiqC,GACjB,IAAK7sB,EAAI,EAAGgI,EAAO6kB,EAAMnoC,OAAQsb,EAAIgI,IAAQhI,EAC3ComC,EAAcvZ,EAAM7sB,GACftd,EAAc0jD,IAAiBxjD,EAAQwjD,KAC1C1+B,EAAQP,GAAapC,EAAK8C,EAAMT,KAAMS,EAAMR,GAAIK,EAAO0+B,GACvDt9B,GAAUlE,QAPd8C,EAAQP,GAAapC,EAAK8C,EAAMT,KAAMS,EAAMR,GAAIK,EAAOmlB,GACvD/jB,EAASlE,EAUXohC,EAAO7+C,KAAKugB,GACZu+B,EAAQ9+C,KAAK2hB,GACbu9B,EAAkBl+C,KAAK6B,IAAI0d,EAAO2+B,GAClCC,EAAmBn+C,KAAK6B,IAAI8e,EAAQw9B,EACtC,EAzgBJ,SAAwBP,EAAQrhD,GAC9BN,EAAK2hD,GAASl+B,IACZ,MAAMR,EAAKQ,EAAMR,GACXe,EAAQf,EAAG3iB,OAAS,EAC1B,IAAIH,EACJ,GAAI6jB,EAAQ1jB,EAAQ,CAClB,IAAKH,EAAI,EAAGA,EAAI6jB,IAAS7jB,SAChBsjB,EAAMT,KAAKC,EAAG9iB,IAEvB8iB,EAAGla,OAAO,EAAGib,EACf,IAEJ,CA8fIN,CAAei+B,EAAQrhD,GACvB,MAAMigD,EAASqB,EAAOpgD,QAAQygD,GACxBxB,EAAUoB,EAAQrgD,QAAQ0gD,GAC1BE,EAAWC,IAAG,CAAO/+B,MAAOs+B,EAAOS,IAAQ,EAAG39B,OAAQm9B,EAAQQ,IAAQ,IAC5E,MAAO,CACL/I,MAAO8I,EAAQ,GACf75C,KAAM65C,EAAQ9hD,EAAS,GACvBigD,OAAQ6B,EAAQ7B,GAChBE,QAAS2B,EAAQ3B,GACjBmB,SACAC,UAEJ,CACAnZ,gBAAAA,CAAiBnqC,GACf,OAAOA,CACT,CACA0M,gBAAAA,CAAiB1M,EAAOuC,GACtB,OAAO8mC,GACT,CACA0a,gBAAAA,CAAiBp+B,GAAQ,CACzBuoB,eAAAA,CAAgB3rC,GACd,MAAM0rC,EAAQtvB,KAAKsvB,MACnB,OAAI1rC,EAAQ,GAAKA,EAAQ0rC,EAAMlsC,OAAS,EAC/B,KAEF4c,KAAKjS,iBAAiBuhC,EAAM1rC,GAAOvC,MAC5C,CACA4xC,kBAAAA,CAAmBoS,GACbrlC,KAAK6/B,iBACPwF,EAAU,EAAIA,GAEhB,MAAMr+B,EAAQhH,KAAKqyB,YAAcgT,EAAUrlC,KAAKovB,QAChD,ODt2FK1kC,ECs2FcsV,KAAKwiC,eAAiBz7B,GAAY/G,KAAK8C,MAAOkE,EAAO,GAAKA,GDt2FpD,MAAO,MCu2FlC,CACAs+B,kBAAAA,CAAmBt+B,GACjB,MAAMq+B,GAAWr+B,EAAQhH,KAAKqyB,aAAeryB,KAAKovB,QAClD,OAAOpvB,KAAK6/B,eAAiB,EAAIwF,EAAUA,CAC7C,CACAjU,YAAAA,GACE,OAAOpxB,KAAKjS,iBAAiBiS,KAAKulC,eACpC,CACAA,YAAAA,GACE,MAAM,IAAC98C,EAAG,IAAEC,GAAOsX,KACnB,OAAOvX,EAAM,GAAKC,EAAM,EAAIA,EAC1BD,EAAM,GAAKC,EAAM,EAAID,EACrB,CACJ,CACA4e,UAAAA,CAAWzjB,GACT,MAAM0rC,EAAQtvB,KAAKsvB,OAAS,GAC5B,GAAI1rC,GAAS,GAAKA,EAAQ0rC,EAAMlsC,OAAQ,CACtC,MAAM87B,EAAOoQ,EAAM1rC,GACnB,OAAOs7B,EAAK4H,WACb5H,EAAK4H,SA/hBV,SAA2BxV,EAAQ1tB,EAAOs7B,GACxC,OAAOtR,GAAc0D,EAAQ,CAC3B4N,OACAt7B,QACApC,KAAM,QAEV,CAyhBqBgkD,CAAkBxlC,KAAKqH,aAAczjB,EAAOs7B,GAC7D,CACA,OAAOlf,KAAK8mB,WACZ9mB,KAAK8mB,SAviBAlZ,GAuiB8B5N,KAAK8C,MAAMuE,aAviBnB,CAC3B9C,MAsiB4DvE,KAriB5Dxe,KAAM,UAsiBR,CACAk6C,SAAAA,GACE,MAAM+J,EAAczlC,KAAKxb,QAAQ8qC,MAC3BoW,EAAM/8C,EAAUqX,KAAKu/B,eACrBxvC,EAAMlJ,KAAKwB,IAAIxB,KAAKkJ,IAAI21C,IACxB52C,EAAMjI,KAAKwB,IAAIxB,KAAKiI,IAAI42C,IACxBxC,EAAaljC,KAAKmjC,iBAClB5F,EAAUkI,EAAY5H,iBAAmB,EACzC7qC,EAAIkwC,EAAaA,EAAWG,OAAOj9B,MAAQm3B,EAAU,EACrDlsC,EAAI6xC,EAAaA,EAAWK,QAAQ/7B,OAAS+1B,EAAU,EAC7D,OAAOv9B,KAAKqxB,eACRhgC,EAAItB,EAAMiD,EAAIlE,EAAMkE,EAAIjD,EAAMsB,EAAIvC,EAClCuC,EAAIvC,EAAMkE,EAAIjD,EAAMsB,EAAItB,EAAMiD,EAAIlE,CACxC,CACAm0C,UAAAA,GACE,MAAMvJ,EAAU15B,KAAKxb,QAAQk1C,QAC7B,MAAgB,SAAZA,IACOA,EAEJ15B,KAAK+kB,0BAA0B3hC,OAAS,CACjD,CACAuiD,qBAAAA,CAAsB9Z,GACpB,MAAMl+B,EAAOqS,KAAKrS,KACZmV,EAAQ9C,KAAK8C,MACbte,EAAUwb,KAAKxb,SACf,KAACwvC,EAAI,SAAE+K,GAAYv6C,EACnBuvC,EAASC,EAAKD,OACd1C,EAAerxB,KAAKqxB,eAEpBuU,EADQ5lC,KAAKsvB,MACOlsC,QAAU2wC,EAAS,EAAI,GAC3C8R,EAAKjH,GAAkB5K,GACvBhoC,EAAQ,GACR85C,EAAa9R,EAAK7jB,WAAWnQ,KAAKqH,cAClC0+B,EAAYD,EAAW5I,WAAa4I,EAAWj9B,YAAc,EAC7Dm9B,EAAgBD,EAAY,EAC5BE,EAAmB,SAASj/B,GAChC,OAAOD,GAAYjE,EAAOkE,EAAO++B,EACnC,EACA,IAAIG,EAAajjD,EAAG07C,EAAWwH,EAC3BC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAAIC,EAAIC,EACpC,GAAiB,QAAb5H,EACFmH,EAAcD,EAAiBjmC,KAAKsJ,QACpC+8B,EAAMrmC,KAAKsJ,OAASu8B,EACpBU,EAAML,EAAcF,EACpBS,EAAKR,EAAiBpa,EAAUxiB,KAAO28B,EACvCW,EAAK9a,EAAUviB,YACV,GAAiB,WAAby1B,EACTmH,EAAcD,EAAiBjmC,KAAKqJ,KACpCo9B,EAAK5a,EAAUxiB,IACfs9B,EAAKV,EAAiBpa,EAAUviB,QAAU08B,EAC1CK,EAAMH,EAAcF,EACpBO,EAAMvmC,KAAKqJ,IAAMw8B,OACZ,GAAiB,SAAb9G,EACTmH,EAAcD,EAAiBjmC,KAAKoJ,OACpCg9B,EAAMpmC,KAAKoJ,MAAQy8B,EACnBS,EAAMJ,EAAcF,EACpBQ,EAAKP,EAAiBpa,EAAU1iB,MAAQ68B,EACxCU,EAAK7a,EAAUziB,WACV,GAAiB,UAAb21B,EACTmH,EAAcD,EAAiBjmC,KAAKmJ,MACpCq9B,EAAK3a,EAAU1iB,KACfu9B,EAAKT,EAAiBpa,EAAUziB,OAAS48B,EACzCI,EAAMF,EAAcF,EACpBM,EAAMtmC,KAAKmJ,KAAO08B,OACb,GAAa,MAATl4C,EAAc,CACvB,GAAiB,WAAboxC,EACFmH,EAAcD,GAAkBpa,EAAUxiB,IAAMwiB,EAAUviB,QAAU,EAAI,SACnE,GAAIxnB,EAASi9C,GAAW,CAC7B,MAAM6H,EAAiBnlD,OAAO0B,KAAK47C,GAAU,GACvC19C,EAAQ09C,EAAS6H,GACvBV,EAAcD,EAAiBjmC,KAAK8C,MAAM0B,OAAOoiC,GAAgB74C,iBAAiB1M,GACpF,CACAolD,EAAK5a,EAAUxiB,IACfs9B,EAAK9a,EAAUviB,OACf+8B,EAAMH,EAAcF,EACpBO,EAAMF,EAAMR,CACd,MAAO,GAAa,MAATl4C,EAAc,CACvB,GAAiB,WAAboxC,EACFmH,EAAcD,GAAkBpa,EAAU1iB,KAAO0iB,EAAUziB,OAAS,QAC/D,GAAItnB,EAASi9C,GAAW,CAC7B,MAAM6H,EAAiBnlD,OAAO0B,KAAK47C,GAAU,GACvC19C,EAAQ09C,EAAS6H,GACvBV,EAAcD,EAAiBjmC,KAAK8C,MAAM0B,OAAOoiC,GAAgB74C,iBAAiB1M,GACpF,CACA+kD,EAAMF,EAAcF,EACpBM,EAAMF,EAAMP,EACZW,EAAK3a,EAAU1iB,KACfu9B,EAAK7a,EAAUziB,KACjB,CACA,MAAMy9B,EAAQzkD,EAAeoC,EAAQ8qC,MAAMkM,cAAeoK,GACpDkB,EAAOjgD,KAAK6B,IAAI,EAAG7B,KAAKy1C,KAAKsJ,EAAciB,IACjD,IAAK5jD,EAAI,EAAGA,EAAI2iD,EAAa3iD,GAAK6jD,EAAM,CACtC,MAAMC,EAAc/S,EAAK7jB,WAAWnQ,KAAKqH,WAAWpkB,IAC9CgoB,EAAY87B,EAAY97B,UACxB+7B,EAAYD,EAAYvmC,MACxBid,EAAaspB,EAAYtpB,YAAc,GACvCC,EAAmBqpB,EAAYrpB,iBAC/B2f,EAAY0J,EAAY1J,UACxBC,EAAYyJ,EAAYzJ,UACxB2J,EAAiBF,EAAYE,gBAAkB,GAC/CC,EAAuBH,EAAYG,qBACzCvI,EAAYH,GAAoBx+B,KAAM/c,EAAG8wC,QACvBlpC,IAAd8zC,IAGJwH,EAAmBp/B,GAAYjE,EAAO67B,EAAW1zB,GAC7ComB,EACF+U,EAAME,EAAME,EAAKE,EAAKP,EAEtBE,EAAME,EAAME,EAAKE,EAAKR,EAExBn6C,EAAMnG,KAAK,CACTugD,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACAC,KACAvgC,MAAO6E,EACPzK,MAAOwmC,EACPvpB,aACAC,mBACA2f,YACAC,YACA2J,iBACAC,yBAEJ,CAGA,OAFAlnC,KAAKkgC,aAAe0F,EACpB5lC,KAAKmgC,aAAe+F,EACbl6C,CACT,CACAm7C,kBAAAA,CAAmBtb,GACjB,MAAMl+B,EAAOqS,KAAKrS,KACZnJ,EAAUwb,KAAKxb,SACf,SAACu6C,EAAUzP,MAAOmW,GAAejhD,EACjC6sC,EAAerxB,KAAKqxB,eACpB/B,EAAQtvB,KAAKsvB,OACb,MAACtiC,EAAK,WAAEgxC,EAAU,QAAET,EAAO,OAAEG,GAAU+H,EACvCI,EAAKjH,GAAkBp6C,EAAQwvC,MAC/BoT,EAAiBvB,EAAKtI,EACtB8J,EAAkB3J,GAAUH,EAAU6J,EACtCr/B,GAAYpf,EAAUqX,KAAKu/B,eAC3BvzC,EAAQ,GACd,IAAI/I,EAAGO,EAAM07B,EAAMqM,EAAOpmC,EAAGE,EAAGwlB,EAAW7D,EAAO7D,EAAMG,EAAYgkC,EAAWC,EAC3Ez8B,EAAe,SACnB,GAAiB,QAAbi0B,EACF15C,EAAI2a,KAAKsJ,OAAS+9B,EAClBx8B,EAAY7K,KAAKwnC,+BACZ,GAAiB,WAAbzI,EACT15C,EAAI2a,KAAKqJ,IAAMg+B,EACfx8B,EAAY7K,KAAKwnC,+BACZ,GAAiB,SAAbzI,EAAqB,CAC9B,MAAMj/B,EAAME,KAAKynC,wBAAwB5B,GACzCh7B,EAAY/K,EAAI+K,UAChB1lB,EAAI2a,EAAI3a,CACV,MAAO,GAAiB,UAAb45C,EAAsB,CAC/B,MAAMj/B,EAAME,KAAKynC,wBAAwB5B,GACzCh7B,EAAY/K,EAAI+K,UAChB1lB,EAAI2a,EAAI3a,CACV,MAAO,GAAa,MAATwI,EAAc,CACvB,GAAiB,WAAboxC,EACF15C,GAAMwmC,EAAUxiB,IAAMwiB,EAAUviB,QAAU,EAAK89B,OAC1C,GAAItlD,EAASi9C,GAAW,CAC7B,MAAM6H,EAAiBnlD,OAAO0B,KAAK47C,GAAU,GACvC19C,EAAQ09C,EAAS6H,GACvBvhD,EAAI2a,KAAK8C,MAAM0B,OAAOoiC,GAAgB74C,iBAAiB1M,GAAS+lD,CAClE,CACAv8B,EAAY7K,KAAKwnC,yBACnB,MAAO,GAAa,MAAT75C,EAAc,CACvB,GAAiB,WAAboxC,EACF55C,GAAM0mC,EAAU1iB,KAAO0iB,EAAUziB,OAAS,EAAKg+B,OAC1C,GAAItlD,EAASi9C,GAAW,CAC7B,MAAM6H,EAAiBnlD,OAAO0B,KAAK47C,GAAU,GACvC19C,EAAQ09C,EAAS6H,GACvBzhD,EAAI6a,KAAK8C,MAAM0B,OAAOoiC,GAAgB74C,iBAAiB1M,EACzD,CACAwpB,EAAY7K,KAAKynC,wBAAwB5B,GAAIh7B,SAC/C,CACa,MAATld,IACY,UAAVX,EACF8d,EAAe,MACI,QAAV9d,IACT8d,EAAe,WAGnB,MAAMo4B,EAAaljC,KAAKmjC,iBACxB,IAAKlgD,EAAI,EAAGO,EAAO8rC,EAAMlsC,OAAQH,EAAIO,IAAQP,EAAG,CAC9Ci8B,EAAOoQ,EAAMrsC,GACbsoC,EAAQrM,EAAKqM,MACb,MAAMwb,EAActB,EAAYt1B,WAAWnQ,KAAKqH,WAAWpkB,IAC3D+jB,EAAQhH,KAAKuvB,gBAAgBtsC,GAAKwiD,EAAY3H,YAC9C36B,EAAOnD,KAAKilC,wBAAwBhiD,GACpCqgB,EAAaH,EAAKG,WAClBgkC,EAAYhmD,EAAQiqC,GAASA,EAAMnoC,OAAS,EAC5C,MAAMskD,EAAYJ,EAAY,EACxB9mC,EAAQumC,EAAYvmC,MACpBiK,EAAcs8B,EAAYnJ,gBAC1BpzB,EAAcu8B,EAAYpJ,gBAChC,IAoCIgK,EApCAC,EAAgB/8B,EAqCpB,GApCIwmB,GACFlsC,EAAI6hB,EACc,UAAd6D,IAEA+8B,EADE3kD,IAAMO,EAAO,EACEwc,KAAKxb,QAAQxB,QAAoB,OAAV,QACzB,IAANC,EACQ+c,KAAKxb,QAAQxB,QAAmB,QAAT,OAExB,UAKhBukD,EAFa,QAAbxI,EACiB,SAAff,GAAsC,IAAbj2B,GACbu/B,EAAYhkC,EAAaA,EAAa,EAC5B,WAAf06B,GACKkF,EAAWK,QAAQ/7B,OAAS,EAAIkgC,EAAYpkC,EAAaA,GAEzD4/B,EAAWK,QAAQ/7B,OAASlE,EAAa,EAGtC,SAAf06B,GAAsC,IAAbj2B,EACdzE,EAAa,EACF,WAAf06B,EACIkF,EAAWK,QAAQ/7B,OAAS,EAAIkgC,EAAYpkC,EAE5C4/B,EAAWK,QAAQ/7B,OAAS8/B,EAAYhkC,EAGrDo6B,IACF6J,IAAe,KAGjBliD,EAAI2hB,EACJugC,GAAc,EAAID,GAAahkC,EAAa,GAG1CyjC,EAAY9I,kBAAmB,CACjC,MAAM4J,EAAe36B,GAAU65B,EAAY5I,iBACrC32B,EAAS07B,EAAWyB,QAAQ1hD,GAC5BmjB,EAAQ88B,EAAWwB,OAAOzhD,GAChC,IAAIomB,EAAMhkB,EAAIkiD,EAAaM,EAAax+B,IACpCF,EAAOhkB,EAAI0iD,EAAa1+B,KAC5B,OAAQ2B,GACR,IAAK,SACHzB,GAAO7B,EAAS,EAChB,MACF,IAAK,SACH6B,GAAO7B,EAGT,OAAQqD,GACR,IAAK,SACH1B,GAAQ/C,EAAQ,EAChB,MACF,IAAK,QACH+C,GAAQ/C,EAGVuhC,EAAW,CACTx+B,OACAE,MACAjD,MAAOA,EAAQyhC,EAAazhC,MAC5BoB,OAAQA,EAASqgC,EAAargC,OAC9BhH,MAAOumC,EAAY7I,cAEvB,CACAlyC,EAAMnG,KAAK,CACTkiB,WACAwjB,QACApoB,OACA3C,QACAiK,cACAD,cACA+8B,aACA18B,UAAW+8B,EACX98B,eACAH,YAAa,CAACxlB,EAAGE,GACjBsiD,YAEJ,CACA,OAAO37C,CACT,CACAw7C,uBAAAA,GACE,MAAM,SAACzI,EAAQ,MAAEzP,GAAStvB,KAAKxb,QAE/B,IADkBmE,EAAUqX,KAAKu/B,eAE/B,MAAoB,QAAbR,EAAqB,OAAS,QAEvC,IAAI/xC,EAAQ,SAQZ,MAPoB,UAAhBsiC,EAAMtiC,MACRA,EAAQ,OACiB,QAAhBsiC,EAAMtiC,MACfA,EAAQ,QACiB,UAAhBsiC,EAAMtiC,QACfA,EAAQ,SAEHA,CACT,CACAy6C,uBAAAA,CAAwB5B,GACtB,MAAM,SAAC9G,EAAUzP,OAAO,WAAC0O,EAAU,OAAEN,EAAM,QAAEH,IAAYv9B,KAAKxb,QAExD4iD,EAAiBvB,EAAKtI,EACtB8F,EAFarjC,KAAKmjC,iBAEEE,OAAOj9B,MACjC,IAAIyE,EACA1lB,EAoDJ,MAnDiB,SAAb45C,EACErB,GACFv4C,EAAI6a,KAAKoJ,MAAQm0B,EACE,SAAfS,EACFnzB,EAAY,OACY,WAAfmzB,GACTnzB,EAAY,SACZ1lB,GAAMk+C,EAAS,IAEfx4B,EAAY,QACZ1lB,GAAKk+C,KAGPl+C,EAAI6a,KAAKoJ,MAAQg+B,EACE,SAAfpJ,EACFnzB,EAAY,QACY,WAAfmzB,GACTnzB,EAAY,SACZ1lB,GAAMk+C,EAAS,IAEfx4B,EAAY,OACZ1lB,EAAI6a,KAAKmJ,OAGS,UAAb41B,EACLrB,GACFv4C,EAAI6a,KAAKmJ,KAAOo0B,EACG,SAAfS,EACFnzB,EAAY,QACY,WAAfmzB,GACTnzB,EAAY,SACZ1lB,GAAMk+C,EAAS,IAEfx4B,EAAY,OACZ1lB,GAAKk+C,KAGPl+C,EAAI6a,KAAKmJ,KAAOi+B,EACG,SAAfpJ,EACFnzB,EAAY,OACY,WAAfmzB,GACTnzB,EAAY,SACZ1lB,GAAKk+C,EAAS,IAEdx4B,EAAY,QACZ1lB,EAAI6a,KAAKoJ,QAIbyB,EAAY,QAEP,CAACA,YAAW1lB,IACrB,CACA2iD,iBAAAA,GACE,GAAI9nC,KAAKxb,QAAQ8qC,MAAMoO,OACrB,OAEF,MAAM56B,EAAQ9C,KAAK8C,MACbi8B,EAAW/+B,KAAKxb,QAAQu6C,SAC9B,MAAiB,SAAbA,GAAoC,UAAbA,EAClB,CAAC11B,IAAK,EAAGF,KAAMnJ,KAAKmJ,KAAMG,OAAQxG,EAAM0E,OAAQ4B,MAAOpJ,KAAKoJ,OAClD,QAAb21B,GAAmC,WAAbA,EACnB,CAAC11B,IAAKrJ,KAAKqJ,IAAKF,KAAM,EAAGG,OAAQtJ,KAAKsJ,OAAQF,MAAOtG,EAAMsD,YADlE,CAGJ,CACA2hC,cAAAA,GACE,MAAM,IAACtkC,EAAKjf,SAAS,gBAACie,GAAgB,KAAE0G,EAAI,IAAEE,EAAG,MAAEjD,EAAK,OAAEoB,GAAUxH,KAChEyC,IACFgB,EAAIgD,OACJhD,EAAImH,UAAYnI,EAChBgB,EAAIukC,SAAS7+B,EAAME,EAAKjD,EAAOoB,GAC/B/D,EAAIoD,UAER,CACAusB,oBAAAA,CAAqB/xC,GACnB,MAAM2yC,EAAOh0B,KAAKxb,QAAQwvC,KAC1B,IAAKh0B,KAAKijC,eAAiBjP,EAAK0F,QAC9B,OAAO,EAET,MACM91C,EADQoc,KAAKsvB,MACC2Y,WAAUr5C,GAAKA,EAAEvN,QAAUA,IAC/C,GAAIuC,GAAS,EAAG,CAEd,OADaowC,EAAK7jB,WAAWnQ,KAAKqH,WAAWzjB,IACjCqnB,SACd,CACA,OAAO,CACT,CACAi9B,QAAAA,CAASrc,GACP,MAAMmI,EAAOh0B,KAAKxb,QAAQwvC,KACpBvwB,EAAMzD,KAAKyD,IACXzX,EAAQgU,KAAKy/B,iBAAmBz/B,KAAKy/B,eAAiBz/B,KAAK2lC,sBAAsB9Z,IACvF,IAAI5oC,EAAGO,EACP,MAAM2kD,EAAWA,CAAC10C,EAAIC,EAAI2P,KACnBA,EAAM+C,OAAU/C,EAAM7C,QAG3BiD,EAAIgD,OACJhD,EAAIwH,UAAY5H,EAAM+C,MACtB3C,EAAIuH,YAAc3H,EAAM7C,MACxBiD,EAAI2kC,YAAY/kC,EAAMoa,YAAc,IACpCha,EAAI4kC,eAAiBhlC,EAAMqa,iBAC3Bja,EAAI2E,YACJ3E,EAAI+E,OAAO/U,EAAGtO,EAAGsO,EAAGpO,GACpBoe,EAAIgF,OAAO/U,EAAGvO,EAAGuO,EAAGrO,GACpBoe,EAAIqF,SACJrF,EAAIoD,UAAS,EAEf,GAAImtB,EAAK0F,QACP,IAAKz2C,EAAI,EAAGO,EAAOwI,EAAM5I,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,MAAMyD,EAAOsF,EAAM/I,GACf+wC,EAAKmJ,iBACPgL,EACE,CAAChjD,EAAGuB,EAAK8/C,GAAInhD,EAAGqB,EAAK+/C,IACrB,CAACthD,EAAGuB,EAAKggD,GAAIrhD,EAAGqB,EAAKigD,IACrBjgD,GAGAstC,EAAKoJ,WACP+K,EACE,CAAChjD,EAAGuB,EAAK0/C,IAAK/gD,EAAGqB,EAAK2/C,KACtB,CAAClhD,EAAGuB,EAAK4/C,IAAKjhD,EAAGqB,EAAK6/C,KACtB,CACE/lC,MAAO9Z,EAAK42C,UACZl3B,MAAO1f,EAAK22C,UACZ5f,WAAY/2B,EAAKugD,eACjBvpB,iBAAkBh3B,EAAKwgD,sBAI/B,CAEJ,CACAhK,UAAAA,GACE,MAAM,MAACp6B,EAAK,IAAEW,EAAKjf,SAAS,KAACwvC,IAASh0B,KAChC8lC,EAAa9R,EAAK7jB,WAAWnQ,KAAKqH,cAClC0+B,EAAY/R,EAAKkJ,WAAa4I,EAAWj9B,YAAc,EAC7D,IAAKk9B,EACH,OAEF,MAAMuC,EAAgBtU,EAAK7jB,WAAWnQ,KAAKqH,WAAW,IAAI4D,UACpDi7B,EAAclmC,KAAKmgC,aACzB,IAAIqG,EAAIE,EAAID,EAAIE,EACZ3mC,KAAKqxB,gBACPmV,EAAKz/B,GAAYjE,EAAO9C,KAAKmJ,KAAM48B,GAAaA,EAAY,EAC5DW,EAAK3/B,GAAYjE,EAAO9C,KAAKoJ,MAAOk/B,GAAiBA,EAAgB,EACrE7B,EAAKE,EAAKT,IAEVO,EAAK1/B,GAAYjE,EAAO9C,KAAKqJ,IAAK08B,GAAaA,EAAY,EAC3DY,EAAK5/B,GAAYjE,EAAO9C,KAAKsJ,OAAQg/B,GAAiBA,EAAgB,EACtE9B,EAAKE,EAAKR,GAEZziC,EAAIgD,OACJhD,EAAIwH,UAAY66B,EAAWj9B,YAC3BpF,EAAIuH,YAAc86B,EAAWpjC,YAC7Be,EAAI2E,YACJ3E,EAAI+E,OAAOg+B,EAAIC,GACfhjC,EAAIgF,OAAOi+B,EAAIC,GACfljC,EAAIqF,SACJrF,EAAIoD,SACN,CACA0hC,UAAAA,CAAW1c,GAET,IADoB7rB,KAAKxb,QAAQ8qC,MAChBoK,QACf,OAEF,MAAMj2B,EAAMzD,KAAKyD,IACXwF,EAAOjJ,KAAK8nC,oBACd7+B,GACFM,GAAS9F,EAAKwF,GAEhB,MAAMjd,EAAQgU,KAAK0/B,cAAgB1/B,KAAK0/B,YAAc1/B,KAAKmnC,mBAAmBtb,IAC9E,IAAI5oC,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAOwI,EAAM5I,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,MAAMyD,EAAOsF,EAAM/I,GACb2hD,EAAWl+C,EAAKyc,KAChBooB,EAAQ7kC,EAAK6kC,MACf7kC,EAAKihD,WACPlkC,EAAImH,UAAYlkB,EAAKihD,SAASnnC,MAC9BiD,EAAIukC,SAASthD,EAAKihD,SAASx+B,KAAMziB,EAAKihD,SAASt+B,IAAK3iB,EAAKihD,SAASvhC,MAAO1f,EAAKihD,SAASngC,SAGzF4C,GAAW3G,EAAK8nB,EAAO,EADf7kC,EAAK6gD,WACgB3C,EAAUl+C,EACzC,CACIuiB,GACFQ,GAAWhG,EAEf,CACA+kC,SAAAA,GACE,MAAM,IAAC/kC,EAAKjf,SAAS,SAACu6C,EAAQ,MAAE1K,EAAK,QAAErxC,IAAYgd,KACnD,IAAKq0B,EAAMqF,QACT,OAEF,MAAMv2B,EAAOgK,GAAOknB,EAAMlxB,MACpBo6B,EAAUrwB,GAAUmnB,EAAMkJ,SAC1BvwC,EAAQqnC,EAAMrnC,MACpB,IAAI+mC,EAAS5wB,EAAKG,WAAa,EACd,WAAby7B,GAAsC,WAAbA,GAAyBj9C,EAASi9C,IAC7DhL,GAAUwJ,EAAQj0B,OACdhoB,EAAQ+yC,EAAMhqB,QAChB0pB,GAAU5wB,EAAKG,YAAc+wB,EAAMhqB,KAAKjnB,OAAS,KAGnD2wC,GAAUwJ,EAAQl0B,IAEpB,MAAM,OAACo/B,EAAM,OAAEC,EAAM,SAAEv9B,EAAQ,SAAEpD,GAphCrC,SAAmBxD,EAAOwvB,EAAQgL,EAAU/xC,GAC1C,MAAM,IAACqc,EAAG,KAAEF,EAAI,OAAEG,EAAM,MAAEF,EAAK,MAAEtG,GAASyB,GACpC,UAACsnB,EAAS,OAAErnB,GAAU1B,EAC5B,IACIqI,EAAUs9B,EAAQC,EADlB3gC,EAAW,EAEf,MAAMP,EAAS8B,EAASD,EAClBjD,EAAQgD,EAAQD,EACtB,GAAI5E,EAAM8sB,eAAgB,CAExB,GADAoX,EAASx7C,GAAeD,EAAOmc,EAAMC,GACjCtnB,EAASi9C,GAAW,CACtB,MAAM6H,EAAiBnlD,OAAO0B,KAAK47C,GAAU,GACvC19C,EAAQ09C,EAAS6H,GACvB8B,EAASlkC,EAAOoiC,GAAgB74C,iBAAiB1M,GAASmmB,EAASusB,CACrE,MACE2U,EADsB,WAAb3J,GACClT,EAAUviB,OAASuiB,EAAUxiB,KAAO,EAAI7B,EAASusB,EAElDqK,GAAe75B,EAAOw6B,EAAUhL,GAE3C5oB,EAAW/B,EAAQD,CACrB,KAAO,CACL,GAAIrnB,EAASi9C,GAAW,CACtB,MAAM6H,EAAiBnlD,OAAO0B,KAAK47C,GAAU,GACvC19C,EAAQ09C,EAAS6H,GACvB6B,EAASjkC,EAAOoiC,GAAgB74C,iBAAiB1M,GAAS+kB,EAAQ2tB,CACpE,MACE0U,EADsB,WAAb1J,GACClT,EAAU1iB,KAAO0iB,EAAUziB,OAAS,EAAIhD,EAAQ2tB,EAEjDqK,GAAe75B,EAAOw6B,EAAUhL,GAE3C2U,EAASz7C,GAAeD,EAAOsc,EAAQD,GACvCtB,EAAwB,SAAbg3B,GAAuB53C,EAAUA,CAC9C,CACA,MAAO,CAACshD,SAAQC,SAAQv9B,WAAUpD,WACpC,CAm/BiD4gC,CAAU3oC,KAAM+zB,EAAQgL,EAAU/xC,GAC/Eod,GAAW3G,EAAK4wB,EAAMhqB,KAAM,EAAG,EAAGlH,EAAM,CACtC3C,MAAO6zB,EAAM7zB,MACb2K,WACApD,WACA8C,UAAWi0B,GAAW9xC,EAAO+xC,EAAU/7C,GACvC8nB,aAAc,SACdH,YAAa,CAAC89B,EAAQC,IAE1B,CACA3pB,IAAAA,CAAK8M,GACE7rB,KAAKijC,eAGVjjC,KAAK+nC,iBACL/nC,KAAKkoC,SAASrc,GACd7rB,KAAKk9B,aACLl9B,KAAKwoC,YACLxoC,KAAKuoC,WAAW1c,GAClB,CACA+c,OAAAA,GACE,MAAMt+B,EAAOtK,KAAKxb,QACZqkD,EAAKv+B,EAAKglB,OAAShlB,EAAKglB,MAAMwZ,GAAK,EACnCC,EAAK3mD,EAAekoB,EAAK0pB,MAAQ1pB,EAAK0pB,KAAK8U,GAAI,GACrD,OAAK9oC,KAAKijC,cAAgBjjC,KAAK+e,OAASkgB,GAAMv9C,UAAUq9B,KAQjD,CAAC,CACN+pB,EAAGC,EACHhqB,KAAO8M,IACL7rB,KAAK+nC,iBACL/nC,KAAKkoC,SAASrc,GACd7rB,KAAKwoC,WAAW,GAEjB,CACDM,EAAGC,EAAK,EACRhqB,KAAMA,KACJ/e,KAAKk9B,YAAY,GAElB,CACD4L,EAAGD,EACH9pB,KAAO8M,IACL7rB,KAAKuoC,WAAW1c,EAAU,IAtBrB,CAAC,CACNid,EAAGD,EACH9pB,KAAO8M,IACL7rB,KAAK+e,KAAK8M,EAAU,GAsB5B,CACA9G,uBAAAA,CAAwBvjC,GACtB,MAAMg/C,EAAQxgC,KAAK8C,MAAMkmC,+BACnBC,EAASjpC,KAAKrS,KAAO,SACrBsoB,EAAS,GACf,IAAIhzB,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAOg9C,EAAMp9C,OAAQH,EAAIO,IAAQP,EAAG,CAC9C,MAAMkK,EAAOqzC,EAAMv9C,GACfkK,EAAK87C,KAAYjpC,KAAK7e,IAAQK,GAAQ2L,EAAK3L,OAASA,GACtDy0B,EAAOpwB,KAAKsH,EAEhB,CACA,OAAO8oB,CACT,CACAgvB,uBAAAA,CAAwBrhD,GAEtB,OAAOupB,GADMnN,KAAKxb,QAAQ8qC,MAAMnf,WAAWnQ,KAAKqH,WAAWzjB,IACxCuf,KACrB,CACA+lC,UAAAA,GACE,MAAMC,EAAWnpC,KAAKilC,wBAAwB,GAAG3hC,WACjD,OAAQtD,KAAKqxB,eAAiBrxB,KAAKoG,MAAQpG,KAAKwH,QAAU2hC,CAC5D,EAGF,MAAMC,GACJvpC,WAAAA,CAAYre,EAAM4gB,EAAOyC,GACvB7E,KAAKxe,KAAOA,EACZwe,KAAKoC,MAAQA,EACbpC,KAAK6E,SAAWA,EAChB7E,KAAKhU,MAAQvK,OAAOwC,OAAO,KAC7B,CACAolD,SAAAA,CAAU7nD,GACR,OAAOC,OAAOC,UAAU4nD,cAAc1nD,KAAKoe,KAAKxe,KAAKE,UAAWF,EAAKE,UACvE,CACA6nD,QAAAA,CAAS7iD,GACP,MAAM6Y,EAAQ9d,OAAO6tB,eAAe5oB,GACpC,IAAI8iD,GA+DR,SAA2BjqC,GACzB,MAAO,OAAQA,GAAS,aAAcA,CACxC,EAhEQkqC,CAAkBlqC,KACpBiqC,EAAcxpC,KAAKupC,SAAShqC,IAE9B,MAAMvT,EAAQgU,KAAKhU,MACb7K,EAAKuF,EAAKvF,GACVihB,EAAQpC,KAAKoC,MAAQ,IAAMjhB,EACjC,IAAKA,EACH,MAAM,IAAImvB,MAAM,2BAA6B5pB,GAE/C,OAAIvF,KAAM6K,IAGVA,EAAM7K,GAAMuF,EAyBhB,SAA0BA,EAAM0b,EAAOonC,GACrC,MAAME,EAAe/kD,EAAMlD,OAAOwC,OAAO,MAAO,CAC9CulD,EAAclnC,GAASsC,IAAI4kC,GAAe,CAAC,EAC3ClnC,GAASsC,IAAIxC,GACb1b,EAAK4b,WAEPA,GAASrW,IAAImW,EAAOsnC,GAChBhjD,EAAK8zC,eAOX,SAAuBp4B,EAAOunC,GAC5BloD,OAAO0B,KAAKwmD,GAAQ79C,SAAQtD,IAC1B,MAAMohD,EAAgBphD,EAAS9C,MAAM,KAC/BmkD,EAAaD,EAAczqB,MAC3B2qB,EAAc,CAAC1nC,GAAO/B,OAAOupC,GAAer5B,KAAK,KACjD9qB,EAAQkkD,EAAOnhD,GAAU9C,MAAM,KAC/Buf,EAAaxf,EAAM05B,MACnBna,EAAcvf,EAAM8qB,KAAK,KAC/BjO,GAASwC,MAAMglC,EAAaD,EAAY7kC,EAAaC,EAAW,GAEpE,CAhBI8kC,CAAc3nC,EAAO1b,EAAK8zC,eAExB9zC,EAAKsb,aACPM,GAASqC,SAASvC,EAAO1b,EAAKsb,YAElC,CArCIgoC,CAAiBtjD,EAAM0b,EAAOonC,GAC1BxpC,KAAK6E,UACPvC,GAASuC,SAASne,EAAKvF,GAAIuF,EAAKqb,YALzBK,CAQX,CACAwC,GAAAA,CAAIzjB,GACF,OAAO6e,KAAKhU,MAAM7K,EACpB,CACA8oD,UAAAA,CAAWvjD,GACT,MAAMsF,EAAQgU,KAAKhU,MACb7K,EAAKuF,EAAKvF,GACVihB,EAAQpC,KAAKoC,MACfjhB,KAAM6K,UACDA,EAAM7K,GAEXihB,GAASjhB,KAAMmhB,GAASF,YACnBE,GAASF,GAAOjhB,GACnB6e,KAAK6E,iBACA9C,GAAU5gB,GAGvB,EAqHF,IAAI+oD,GAAW,IAtFf,MACErqC,WAAAA,GACEG,KAAKmqC,YAAc,IAAIf,GAAcljB,GAAmB,YAAY,GACpElmB,KAAKiD,SAAW,IAAImmC,GAAclP,GAAS,YAC3Cl6B,KAAKqE,QAAU,IAAI+kC,GAAc3nD,OAAQ,WACzCue,KAAKwE,OAAS,IAAI4kC,GAAcnK,GAAO,UACvCj/B,KAAKoqC,iBAAmB,CAACpqC,KAAKmqC,YAAanqC,KAAKwE,OAAQxE,KAAKiD,SAC/D,CACA9W,GAAAA,GAAa,QAAA48B,EAAAn+B,UAAAxH,OAANT,EAAI,IAAApB,MAAAwnC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJrmC,EAAIqmC,GAAAp+B,UAAAo+B,GACThpB,KAAKqqC,MAAM,WAAY1nD,EACzB,CACAs9B,MAAAA,GAAgB,QAAArzB,EAAAhC,UAAAxH,OAANT,EAAI,IAAApB,MAAAqL,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJnK,EAAImK,GAAAlC,UAAAkC,GACZkT,KAAKqqC,MAAM,aAAc1nD,EAC3B,CACA2nD,cAAAA,GAAwB,QAAAC,EAAA3/C,UAAAxH,OAANT,EAAI,IAAApB,MAAAgpD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ7nD,EAAI6nD,GAAA5/C,UAAA4/C,GACpBxqC,KAAKqqC,MAAM,WAAY1nD,EAAMqd,KAAKmqC,YACpC,CACAhjB,WAAAA,GAAqB,QAAAsjB,EAAA7/C,UAAAxH,OAANT,EAAI,IAAApB,MAAAkpD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ/nD,EAAI+nD,GAAA9/C,UAAA8/C,GACjB1qC,KAAKqqC,MAAM,WAAY1nD,EAAMqd,KAAKiD,SACpC,CACA0nC,UAAAA,GAAoB,QAAAC,EAAAhgD,UAAAxH,OAANT,EAAI,IAAApB,MAAAqpD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJloD,EAAIkoD,GAAAjgD,UAAAigD,GAChB7qC,KAAKqqC,MAAM,WAAY1nD,EAAMqd,KAAKqE,QACpC,CACAymC,SAAAA,GAAmB,QAAAC,EAAAngD,UAAAxH,OAANT,EAAI,IAAApB,MAAAwpD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJroD,EAAIqoD,GAAApgD,UAAAogD,GACfhrC,KAAKqqC,MAAM,WAAY1nD,EAAMqd,KAAKwE,OACpC,CACAymC,aAAAA,CAAc9pD,GACZ,OAAO6e,KAAKkrC,KAAK/pD,EAAI6e,KAAKmqC,YAAa,aACzC,CACAgB,UAAAA,CAAWhqD,GACT,OAAO6e,KAAKkrC,KAAK/pD,EAAI6e,KAAKiD,SAAU,UACtC,CACAmoC,SAAAA,CAAUjqD,GACR,OAAO6e,KAAKkrC,KAAK/pD,EAAI6e,KAAKqE,QAAS,SACrC,CACAgnC,QAAAA,CAASlqD,GACP,OAAO6e,KAAKkrC,KAAK/pD,EAAI6e,KAAKwE,OAAQ,QACpC,CACA8mC,iBAAAA,GAA2B,QAAAC,EAAA3gD,UAAAxH,OAANT,EAAI,IAAApB,MAAAgqD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ7oD,EAAI6oD,GAAA5gD,UAAA4gD,GACvBxrC,KAAKqqC,MAAM,aAAc1nD,EAAMqd,KAAKmqC,YACtC,CACAsB,cAAAA,GAAwB,QAAAC,EAAA9gD,UAAAxH,OAANT,EAAI,IAAApB,MAAAmqD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJhpD,EAAIgpD,GAAA/gD,UAAA+gD,GACpB3rC,KAAKqqC,MAAM,aAAc1nD,EAAMqd,KAAKiD,SACtC,CACA2oC,aAAAA,GAAuB,QAAAC,EAAAjhD,UAAAxH,OAANT,EAAI,IAAApB,MAAAsqD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJnpD,EAAImpD,GAAAlhD,UAAAkhD,GACnB9rC,KAAKqqC,MAAM,aAAc1nD,EAAMqd,KAAKqE,QACtC,CACA0nC,YAAAA,GAAsB,QAAAC,EAAAphD,UAAAxH,OAANT,EAAI,IAAApB,MAAAyqD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJtpD,EAAIspD,GAAArhD,UAAAqhD,GAClBjsC,KAAKqqC,MAAM,aAAc1nD,EAAMqd,KAAKwE,OACtC,CACA6lC,KAAAA,CAAMtoB,EAAQp/B,EAAMupD,GAClB,IAAIvpD,GAAMmJ,SAAQqgD,IAChB,MAAMC,EAAMF,GAAiBlsC,KAAKqsC,oBAAoBF,GAClDD,GAAiBE,EAAI/C,UAAU8C,IAASC,IAAQpsC,KAAKqE,SAAW8nC,EAAIhrD,GACtE6e,KAAKssC,MAAMvqB,EAAQqqB,EAAKD,GAExBrpD,EAAKqpD,GAAKzlD,IACR,MAAM6lD,EAAUL,GAAiBlsC,KAAKqsC,oBAAoB3lD,GAC1DsZ,KAAKssC,MAAMvqB,EAAQwqB,EAAS7lD,EAAK,GAErC,GAEJ,CACA4lD,KAAAA,CAAMvqB,EAAQmoB,EAAUsC,GACtB,MAAMC,EAAczmD,EAAY+7B,GAChCt/B,EAAS+pD,EAAU,SAAWC,GAAc,GAAID,GAChDtC,EAASnoB,GAAQyqB,GACjB/pD,EAAS+pD,EAAU,QAAUC,GAAc,GAAID,EACjD,CACAH,mBAAAA,CAAoB7qD,GAClB,IAAK,IAAIyB,EAAI,EAAGA,EAAI+c,KAAKoqC,iBAAiBhnD,OAAQH,IAAK,CACrD,MAAMmpD,EAAMpsC,KAAKoqC,iBAAiBnnD,GAClC,GAAImpD,EAAI/C,UAAU7nD,GAChB,OAAO4qD,CAEX,CACA,OAAOpsC,KAAKqE,OACd,CACA6mC,IAAAA,CAAK/pD,EAAI+qD,EAAe1qD,GACtB,MAAMkF,EAAOwlD,EAActnC,IAAIzjB,GAC/B,QAAa0J,IAATnE,EACF,MAAM,IAAI4pB,MAAM,IAAMnvB,EAAK,yBAA2BK,EAAO,KAE/D,OAAOkF,CACT,GAIF,MAAMgmD,WAA0BxmB,GAC9B5E,MAAAA,CAAOxd,GACL,MAAM3W,EAAO6S,KAAKklB,aACXpf,KAAM1Y,EAAS,IAAMD,EACtBE,EAAqB2S,KAAK8C,MAAMmqB,oBACtC,IAAI,MAAC/iC,EAAK,MAAEqD,GAASL,GAAiCC,EAAMC,EAAQC,GAOpE,GANA2S,KAAK0mB,WAAax8B,EAClB8V,KAAK2mB,WAAap5B,EACdS,GAAoBb,KACtBjD,EAAQ,EACRqD,EAAQH,EAAOhK,QAEb4c,KAAKxb,QAAQigB,SAAU,CACzB,MAAO4iB,QAAS3c,EAAI,SAAEutB,GAAY9qC,EAClCud,EAAKiS,OAAS3c,KAAK8C,MACnB4H,EAAKoS,cAAgB9c,KAAKpc,MAC1B8mB,EAAKwtB,aAAeD,EAASC,WAC7BxtB,EAAKtd,OAASA,EACd,MAAM5I,EAAUwb,KAAK8rB,6BAA6BhoB,GAClDtf,EAAQm3B,QAAU3b,KAAKxb,QAAQm3B,QAC/B3b,KAAKstB,cAAc5iB,OAAM7f,EAAW,CAClCstC,UAAW9qC,EACX7I,WACCsf,EACL,CACA9D,KAAKmuB,eAAe/gC,EAAQlD,EAAOqD,EAAOuW,EAC5C,CACAqjB,WAAAA,GACE,MAAM,SAAC1iB,GAAYzE,KAAKxb,SACnBwb,KAAKkpB,oBAAsBzkB,IAC9BzE,KAAKkpB,mBAAqBghB,GAASiB,WAAW,SAEhDja,MAAM/J,aACR,CACAgH,cAAAA,CAAe/gC,EAAQlD,EAAOqD,EAAOuW,GACnC,MAAMykB,EAAiB,UAATzkB,GACR,OAACrW,EAAM,OAAEo3B,EAAM,SAAEqC,EAAQ,SAAE+Q,GAAYj4B,KAAKklB,YAC5CiI,EAAYntB,KAAK+rB,0BAA0B7hC,EAAO4Z,GAClDkpB,EAAgBhtB,KAAK8sB,iBAAiBK,GACtCJ,EAAiB/sB,KAAK+sB,eAAejpB,EAAMkpB,GAC3C5H,EAAQ33B,EAAOE,KACf03B,EAAQR,EAAOl3B,MACf,SAAC8mB,EAAQ,QAAEkH,GAAW3b,KAAKxb,QAC3B4zC,EAAenwC,EAASwsB,GAAYA,EAAWzyB,OAAOiF,kBACtDoxC,EAAer4B,KAAK8C,MAAMmqB,qBAAuB1E,GAAkB,SAATzkB,EAChE,IAAIw0B,EAAapuC,EAAQ,GAAK8V,KAAKsqB,UAAUpgC,EAAQ,GACrD,IAAK,IAAIjH,EAAIiH,EAAOjH,EAAIiH,EAAQqD,IAAStK,EAAG,CAC1C,MAAM+lB,EAAQ5b,EAAOnK,GACf+uB,EAAShS,KAAKsqB,UAAUrnC,GACxBi/B,EAAamW,EAAervB,EAAQ,CAAC,EACrCuvB,EAAWn3C,EAAc4wB,EAAOqT,IAChCpR,EAASiO,EAAWkD,GAAS33B,EAAOM,iBAAiBikB,EAAOoT,GAAQniC,GACpEixB,EAASgO,EAAWmD,GAASkD,GAASgQ,EAAW1T,EAAOuM,eAAiBvM,EAAO92B,iBAAiBm5B,EAAWlnB,KAAKgkB,WAAWa,EAAQ7S,EAAQkV,GAAYlV,EAAOqT,GAAQpiC,GAC7Ki/B,EAAW9P,KAAOjqB,MAAM8rB,IAAW9rB,MAAM+rB,IAAWqkB,EACpDrW,EAAWnC,KAAO98B,EAAI,GAAM4D,KAAKwB,IAAI2pB,EAAOoT,GAASkT,EAAWlT,IAAWgT,EACvEzc,IACFuG,EAAWlQ,OAASA,EACpBkQ,EAAW+J,IAAMgM,EAASnyB,KAAK7iB,IAE7B8pC,IACF7K,EAAW19B,QAAUwoC,GAAiBhtB,KAAK+rB,0BAA0B9oC,EAAG+lB,EAAMqY,OAAS,SAAWvd,IAE/Fu0B,GACHr4B,KAAKstB,cAActkB,EAAO/lB,EAAGi/B,EAAYpe,GAE3Cw0B,EAAatmB,CACf,CACAhS,KAAKqtB,oBAAoBL,EAAelpB,EAAMqpB,EAChD,CACA9B,cAAAA,GACE,MAAMl+B,EAAO6S,KAAKklB,YACZpf,EAAO3Y,EAAK2Y,MAAQ,GAC1B,IAAK9F,KAAKxb,QAAQigB,SAAU,CAC1B,IAAI/b,EAAM,EACV,IAAK,IAAIzF,EAAI6iB,EAAK1iB,OAAS,EAAGH,GAAK,IAAKA,EACtCyF,EAAM7B,KAAK6B,IAAIA,EAAKod,EAAK7iB,GAAGwD,KAAKuZ,KAAK+rB,0BAA0B9oC,IAAM,GAExE,OAAOyF,EAAM,GAAKA,CACpB,CACA,MAAM2+B,EAAUl6B,EAAKk6B,QACfmR,EAASnR,EAAQ7iC,SAAW6iC,EAAQ7iC,QAAQqkB,aAAe,EACjE,IAAK/C,EAAK1iB,OACR,OAAOo1C,EAET,MAAMjmB,EAAazM,EAAK,GAAGrf,KAAKuZ,KAAK+rB,0BAA0B,IACzD0M,EAAY3yB,EAAKA,EAAK1iB,OAAS,GAAGqD,KAAKuZ,KAAK+rB,0BAA0BjmB,EAAK1iB,OAAS,IAC1F,OAAOyD,KAAK6B,IAAI8vC,EAAQjmB,EAAYkmB,GAAa,CACnD,EAEFiU,GAAkBvrD,GAAK,UACvBurD,GAAkBpqC,SAAW,CAC3B4mB,oBAAoB,EACpBmD,gBAAiB,QACjB5nB,UAAU,EACVmE,MAAM,GAER8jC,GAAkB3qC,UAAY,CAC5B8B,YAAa,CACXC,KAAM,SAERO,QAAS,CACP+vB,QAAS,CACPhW,UAAW,CACTiW,MAAKA,IACI,GAET9I,MAAM7kC,GACG,IAAMA,EAAK6kC,MAAQ,KAAO7kC,EAAKqxC,eAAiB,OAK/DvzB,OAAQ,CACNrf,EAAG,CACD3D,KAAM,UAER6D,EAAG,CACD7D,KAAM,YAiBZ,SAASmrD,KACP,MAAM,IAAIr8B,MAAM,kFAClB,CACA,MAAMs8B,GACJ/sC,WAAAA,CAAYrb,GACVwb,KAAKxb,QAAUA,GAAW,CAAC,CAC7B,CACA67C,IAAAA,CAAKwM,GAAe,CACpBC,OAAAA,GACE,OAAOH,IACT,CACA16B,KAAAA,CAAM5wB,EAAO84B,GACX,OAAOwyB,IACT,CACAxyB,MAAAA,CAAO4yB,EAAW5yB,GAChB,OAAOwyB,IACT,CACAxgD,GAAAA,CAAI4gD,EAAWC,EAAQC,GACrB,OAAON,IACT,CACAlQ,IAAAA,CAAKl2C,EAAGC,EAAGymD,GACT,OAAON,IACT,CACAO,OAAAA,CAAQH,EAAWE,EAAME,GACvB,OAAOR,IACT,CACAS,KAAAA,CAAML,EAAWE,GACf,OAAON,IACT,EAEFC,GAAY/nC,SAAW,SAASwoC,GAC9B5rD,OAAOiN,OAAOk+C,GAAYlrD,UAAW2rD,EACvC,EACA,IAAIC,GAAW,CACbC,MAAOX,IAGT,SAASY,GAAaC,EAAS9/C,EAAMtM,EAAO0iB,GAC1C,MAAM,WAACkhB,EAAU,KAAEnf,EAAI,QAAEtY,GAAWigD,EAC9BhgD,EAASw3B,EAAWC,YAAYz3B,OACtC,GAAIA,GAAUE,IAASF,EAAOE,MAAiB,MAATA,GAAgBH,GAAWsY,EAAK1iB,OAAQ,CAC5E,MAAMsqD,EAAejgD,EAAOoyC,eAAiBv0C,EAAgBF,EAC7D,IAAK2Y,EACH,OAAO2pC,EAAa5nC,EAAMnY,EAAMtM,GAC3B,GAAI4jC,EAAWwB,eAAgB,CACpC,MAAM1N,EAAKjT,EAAK,GACVre,EAA+B,oBAAhBsxB,EAAG40B,UAA2B50B,EAAG40B,SAAShgD,GAC/D,GAAIlG,EAAO,CACT,MAAMyC,EAAQwjD,EAAa5nC,EAAMnY,EAAMtM,EAAQoG,GACzC0C,EAAMujD,EAAa5nC,EAAMnY,EAAMtM,EAAQoG,GAC7C,MAAO,CAAC0D,GAAIjB,EAAMiB,GAAID,GAAIf,EAAIe,GAChC,CACF,CACF,CACA,MAAO,CAACC,GAAI,EAAGD,GAAI4a,EAAK1iB,OAAS,EACnC,CACA,SAASwqD,GAAyB9qC,EAAOnV,EAAMoxC,EAAU8O,EAAS9pC,GAChE,MAAM+f,EAAWhhB,EAAMkmC,+BACjB3nD,EAAQ09C,EAASpxC,GACvB,IAAK,IAAI1K,EAAI,EAAGO,EAAOsgC,EAAS1gC,OAAQH,EAAIO,IAAQP,EAAG,CACrD,MAAM,MAACW,EAAK,KAAEkiB,GAAQge,EAAS7gC,IACzB,GAACkI,EAAE,GAAED,GAAMsiD,GAAa1pB,EAAS7gC,GAAI0K,EAAMtM,EAAO0iB,GACxD,IAAK,IAAIrF,EAAIvT,EAAIuT,GAAKxT,IAAMwT,EAAG,CAC7B,MAAMkX,EAAU9P,EAAKpH,GAChBkX,EAAQxD,MACXy7B,EAAQj4B,EAAShyB,EAAO8a,EAE5B,CACF,CACF,CAUA,SAASovC,GAAkBhrC,EAAOi8B,EAAUpxC,EAAMysC,EAAkBp2B,GAClE,MAAMhY,EAAQ,GACd,IAAKgY,IAAqBlB,EAAMirC,cAAchP,GAC5C,OAAO/yC,EAWT,OADA4hD,GAAyB9qC,EAAOnV,EAAMoxC,GARf,SAASnpB,EAASjyB,EAAcC,IAChDogB,GAAqB+E,GAAe6M,EAAS9S,EAAM+oB,UAAW,KAG/DjW,EAAQo4B,QAAQjP,EAAS55C,EAAG45C,EAAS15C,EAAG+0C,IAC1CpuC,EAAMnG,KAAK,CAAC+vB,UAASjyB,eAAcC,SAEvC,IACgE,GACzDoI,CACT,CAaA,SAASiiD,GAAyBnrC,EAAOi8B,EAAUpxC,EAAMoW,EAAWq2B,EAAkBp2B,GACpF,IAAIhY,EAAQ,GACZ,MAAMkiD,EAvCR,SAAkCvgD,GAChC,MAAMwgD,GAA8B,IAAvBxgD,EAAKrJ,QAAQ,KACpB8pD,GAA8B,IAAvBzgD,EAAKrJ,QAAQ,KAC1B,OAAO,SAASuF,EAAKC,GACnB,MAAMukD,EAASF,EAAOtnD,KAAKwB,IAAIwB,EAAI1E,EAAI2E,EAAI3E,GAAK,EAC1CmpD,EAASF,EAAOvnD,KAAKwB,IAAIwB,EAAIxE,EAAIyE,EAAIzE,GAAK,EAChD,OAAOwB,KAAK2C,KAAK3C,KAAKiB,IAAIumD,EAAQ,GAAKxnD,KAAKiB,IAAIwmD,EAAQ,GAC1D,CACF,CA+ByBC,CAAyB5gD,GAChD,IAAI6gD,EAAcxsD,OAAOiF,kBAoBzB,OADA2mD,GAAyB9qC,EAAOnV,EAAMoxC,GAlBtC,SAAwBnpB,EAASjyB,EAAcC,GAC7C,MAAMoqD,EAAUp4B,EAAQo4B,QAAQjP,EAAS55C,EAAG45C,EAAS15C,EAAG+0C,GACxD,GAAIr2B,IAAciqC,EAChB,OAEF,MAAMnc,EAASjc,EAAQ64B,eAAerU,GAEtC,OADsBp2B,GAAoBlB,EAAMirC,cAAclc,MACzCmc,EACnB,OAEF,MAAMrkD,EAAWukD,EAAenP,EAAUlN,GACtCloC,EAAW6kD,GACbxiD,EAAQ,CAAC,CAAC4pB,UAASjyB,eAAcC,UACjC4qD,EAAc7kD,GACLA,IAAa6kD,GACtBxiD,EAAMnG,KAAK,CAAC+vB,UAASjyB,eAAcC,SAEvC,IAEOoI,CACT,CACA,SAAS0iD,GAAgB5rC,EAAOi8B,EAAUpxC,EAAMoW,EAAWq2B,EAAkBp2B,GAC3E,OAAKA,GAAqBlB,EAAMirC,cAAchP,GAG9B,MAATpxC,GAAiBoW,EAEpBkqC,GAAyBnrC,EAAOi8B,EAAUpxC,EAAMoW,EAAWq2B,EAAkBp2B,GA3CnF,SAA+BlB,EAAOi8B,EAAUpxC,EAAMysC,GACpD,IAAIpuC,EAAQ,GASZ,OADA4hD,GAAyB9qC,EAAOnV,EAAMoxC,GAPtC,SAAwBnpB,EAASjyB,EAAcC,GAC7C,MAAM,WAAC8xC,EAAU,SAAEC,GAAY/f,EAAQykB,SAAS,CAAC,aAAc,YAAaD,IACtE,MAAC3wC,GAASP,EAAkB0sB,EAAS,CAACzwB,EAAG45C,EAAS55C,EAAGE,EAAG05C,EAAS15C,IACnE4E,EAAcR,EAAOisC,EAAYC,IACnC3pC,EAAMnG,KAAK,CAAC+vB,UAASjyB,eAAcC,SAEvC,IAEOoI,CACT,CA+BM2iD,CAAsB7rC,EAAOi8B,EAAUpxC,EAAMysC,GAHxC,EAKX,CACA,SAASwU,GAAa9rC,EAAOi8B,EAAUpxC,EAAMoW,EAAWq2B,GACtD,MAAMpuC,EAAQ,GACR6iD,EAAuB,MAATlhD,EAAe,WAAa,WAChD,IAAImhD,GAAiB,EAOrB,OANAlB,GAAyB9qC,EAAOnV,EAAMoxC,GAAU,CAACnpB,EAASjyB,EAAcC,KAClEgyB,EAAQi5B,GAAa9P,EAASpxC,GAAOysC,KACvCpuC,EAAMnG,KAAK,CAAC+vB,UAASjyB,eAAcC,UACnCkrD,EAAiBA,GAAkBl5B,EAAQo4B,QAAQjP,EAAS55C,EAAG45C,EAAS15C,EAAG+0C,GAC7E,IAEEr2B,IAAc+qC,EACT,GAEF9iD,CACT,CACA,IAAI+iD,GAAc,CAChBnB,4BACAoB,MAAO,CACLprD,KAAAA,CAAMkf,EAAO9Z,EAAGxE,EAAS41C,GACvB,MAAM2E,EAAW1oB,GAAoBrtB,EAAG8Z,GAClCnV,EAAOnJ,EAAQmJ,MAAQ,IACvBqW,EAAmBxf,EAAQwf,mBAAoB,EAC/ChY,EAAQxH,EAAQuf,UAClB+pC,GAAkBhrC,EAAOi8B,EAAUpxC,EAAMysC,EAAkBp2B,GAC3D0qC,GAAgB5rC,EAAOi8B,EAAUpxC,GAAM,EAAOysC,EAAkBp2B,GAC9Df,EAAW,GACjB,OAAKjX,EAAM5I,QAGX0f,EAAMkmC,+BAA+Bl9C,SAASqB,IAC5C,MAAMvJ,EAAQoI,EAAM,GAAGpI,MACjBgyB,EAAUzoB,EAAK2Y,KAAKliB,GACtBgyB,IAAYA,EAAQxD,MACtBnP,EAASpd,KAAK,CAAC+vB,UAASjyB,aAAcwJ,EAAKvJ,MAAOA,SACpD,IAEKqf,GATE,EAUX,EACAokB,OAAAA,CAAQvkB,EAAO9Z,EAAGxE,EAAS41C,GACzB,MAAM2E,EAAW1oB,GAAoBrtB,EAAG8Z,GAClCnV,EAAOnJ,EAAQmJ,MAAQ,KACvBqW,EAAmBxf,EAAQwf,mBAAoB,EACrD,IAAIhY,EAAQxH,EAAQuf,UAChB+pC,GAAkBhrC,EAAOi8B,EAAUpxC,EAAMysC,EAAkBp2B,GAC7D0qC,GAAgB5rC,EAAOi8B,EAAUpxC,GAAM,EAAOysC,EAAkBp2B,GAClE,GAAIhY,EAAM5I,OAAS,EAAG,CACpB,MAAMO,EAAeqI,EAAM,GAAGrI,aACxBmiB,EAAOhD,EAAMslB,eAAezkC,GAAcmiB,KAChD9Z,EAAQ,GACR,IAAK,IAAI/I,EAAI,EAAGA,EAAI6iB,EAAK1iB,SAAUH,EACjC+I,EAAMnG,KAAK,CAAC+vB,QAAS9P,EAAK7iB,GAAIU,eAAcC,MAAOX,GAEvD,CACA,OAAO+I,CACT,EACAgd,MAAKA,CAAClG,EAAO9Z,EAAGxE,EAAS41C,IAIhB0T,GAAkBhrC,EAHRuT,GAAoBrtB,EAAG8Z,GAC3Bte,EAAQmJ,MAAQ,KAEmBysC,EADvB51C,EAAQwf,mBAAoB,GAGvDirC,OAAAA,CAAQnsC,EAAO9Z,EAAGxE,EAAS41C,GACzB,MAAM2E,EAAW1oB,GAAoBrtB,EAAG8Z,GAClCnV,EAAOnJ,EAAQmJ,MAAQ,KACvBqW,EAAmBxf,EAAQwf,mBAAoB,EACrD,OAAO0qC,GAAgB5rC,EAAOi8B,EAAUpxC,EAAMnJ,EAAQuf,UAAWq2B,EAAkBp2B,EACrF,EACA7e,EAACA,CAAC2d,EAAO9Z,EAAGxE,EAAS41C,IAEZwU,GAAa9rC,EADHuT,GAAoBrtB,EAAG8Z,GACH,IAAKte,EAAQuf,UAAWq2B,GAE/D/0C,EAACA,CAACyd,EAAO9Z,EAAGxE,EAAS41C,IAEZwU,GAAa9rC,EADHuT,GAAoBrtB,EAAG8Z,GACH,IAAKte,EAAQuf,UAAWq2B,KAKnE,MAAM8U,GAAmB,CAAC,OAAQ,MAAO,QAAS,UAClD,SAASC,GAAiB5mD,EAAOw2C,GAC/B,OAAOx2C,EAAMqoB,QAAO1rB,GAAKA,EAAEgxB,MAAQ6oB,GACrC,CACA,SAASqQ,GAA4B7mD,EAAOoF,GAC1C,OAAOpF,EAAMqoB,QAAO1rB,IAA0C,IAArCgqD,GAAiB5qD,QAAQY,EAAEgxB,MAAehxB,EAAEyxB,IAAIhpB,OAASA,GACpF,CACA,SAAS0hD,GAAa9mD,EAAOvF,GAC3B,OAAOuF,EAAM0mC,MAAK,CAAC1oC,EAAGC,KACpB,MAAM/C,EAAKT,EAAUwD,EAAID,EACnB7C,EAAKV,EAAUuD,EAAIC,EACzB,OAAO/C,EAAGgd,SAAW/c,EAAG+c,OACtBhd,EAAGG,MAAQF,EAAGE,MACdH,EAAGgd,OAAS/c,EAAG+c,MAAM,GAE3B,CAgCA,SAAS6uC,GAAcC,EAASC,GAC9B,MAAMhrB,EAdR,SAAqB+qB,GACnB,MAAM/qB,EAAS,CAAC,EAChB,IAAK,MAAMirB,KAAQF,EAAS,CAC1B,MAAM,MAACtrB,EAAK,IAAE/N,EAAG,YAAEw5B,GAAeD,EAClC,IAAKxrB,IAAUirB,GAAiB1/B,SAAS0G,GACvC,SAEF,MAAMhG,EAASsU,EAAOP,KAAWO,EAAOP,GAAS,CAAC12B,MAAO,EAAGoiD,OAAQ,EAAGlvC,OAAQ,EAAGha,KAAM,IACxFypB,EAAO3iB,QACP2iB,EAAOzP,QAAUivC,CACnB,CACA,OAAOlrB,CACT,CAEiBorB,CAAYL,IACrB,aAACM,EAAY,cAAEC,GAAiBN,EACtC,IAAIvsD,EAAGO,EAAMusD,EACb,IAAK9sD,EAAI,EAAGO,EAAO+rD,EAAQnsD,OAAQH,EAAIO,IAAQP,EAAG,CAChD8sD,EAASR,EAAQtsD,GACjB,MAAM,SAACshD,GAAYwL,EAAOp5B,IACpBsN,EAAQO,EAAOurB,EAAO9rB,OACtB7D,EAAS6D,GAAS8rB,EAAOL,YAAczrB,EAAMxjB,OAC/CsvC,EAAOzf,YACTyf,EAAO3pC,MAAQga,EAASA,EAASyvB,EAAetL,GAAYiL,EAAOQ,eACnED,EAAOvoC,OAASsoC,IAEhBC,EAAO3pC,MAAQypC,EACfE,EAAOvoC,OAAS4Y,EAASA,EAAS0vB,EAAgBvL,GAAYiL,EAAOS,gBAEzE,CACA,OAAOzrB,CACT,CAmBA,SAAS0rB,GAAeC,EAAYtkB,EAAWtlC,EAAGC,GAChD,OAAOK,KAAK6B,IAAIynD,EAAW5pD,GAAIslC,EAAUtlC,IAAMM,KAAK6B,IAAIynD,EAAW3pD,GAAIqlC,EAAUrlC,GACnF,CACA,SAAS4pD,GAAiBD,EAAYE,GACpCF,EAAW9mC,IAAMxiB,KAAK6B,IAAIynD,EAAW9mC,IAAKgnC,EAAWhnC,KACrD8mC,EAAWhnC,KAAOtiB,KAAK6B,IAAIynD,EAAWhnC,KAAMknC,EAAWlnC,MACvDgnC,EAAW7mC,OAASziB,KAAK6B,IAAIynD,EAAW7mC,OAAQ+mC,EAAW/mC,QAC3D6mC,EAAW/mC,MAAQviB,KAAK6B,IAAIynD,EAAW/mC,MAAOinC,EAAWjnC,MAC3D,CACA,SAASknC,GAAWzkB,EAAW2jB,EAAQO,EAAQvrB,GAC7C,MAAM,IAACtO,EAAG,IAAES,GAAOo5B,EACbI,EAAatkB,EAAUskB,WAC7B,IAAKruD,EAASo0B,GAAM,CACd65B,EAAOtpD,OACTolC,EAAU3V,IAAQ65B,EAAOtpD,MAE3B,MAAMw9B,EAAQO,EAAOurB,EAAO9rB,QAAU,CAACx9B,KAAM,EAAG8G,MAAO,GACvD02B,EAAMx9B,KAAOI,KAAK6B,IAAIu7B,EAAMx9B,KAAMspD,EAAOzf,WAAa3Z,EAAInP,OAASmP,EAAIvQ,OACvE2pC,EAAOtpD,KAAOw9B,EAAMx9B,KAAOw9B,EAAM12B,MACjCs+B,EAAU3V,IAAQ65B,EAAOtpD,IAC3B,CACIkwB,EAAI8pB,YACN2P,GAAiBD,EAAYx5B,EAAI8pB,cAEnC,MAAM8P,EAAW1pD,KAAK6B,IAAI,EAAG8mD,EAAOgB,WAAaN,GAAeC,EAAYtkB,EAAW,OAAQ,UACzF4kB,EAAY5pD,KAAK6B,IAAI,EAAG8mD,EAAOkB,YAAcR,GAAeC,EAAYtkB,EAAW,MAAO,WAC1F8kB,EAAeJ,IAAa1kB,EAAU74B,EACtC49C,EAAgBH,IAAc5kB,EAAUx6B,EAG9C,OAFAw6B,EAAU74B,EAAIu9C,EACd1kB,EAAUx6B,EAAIo/C,EACPV,EAAOzf,WACV,CAACugB,KAAMF,EAAcG,MAAOF,GAC5B,CAACC,KAAMD,EAAeE,MAAOH,EACnC,CAaA,SAASI,GAAWzgB,EAAYzE,GAC9B,MAAMskB,EAAatkB,EAAUskB,WAC7B,SAASa,EAAmBn7B,GAC1B,MAAM3M,EAAS,CAACC,KAAM,EAAGE,IAAK,EAAGD,MAAO,EAAGE,OAAQ,GAInD,OAHAuM,EAAU/pB,SAASoqB,IACjBhN,EAAOgN,GAAOrvB,KAAK6B,IAAImjC,EAAU3V,GAAMi6B,EAAWj6B,GAAK,IAElDhN,CACT,CACA,OACI8nC,EADG1gB,EACgB,CAAC,OAAQ,SACT,CAAC,MAAO,UACjC,CACA,SAAS2gB,GAASC,EAAOrlB,EAAW2jB,EAAQhrB,GAC1C,MAAM2sB,EAAa,GACnB,IAAIluD,EAAGO,EAAMusD,EAAQp5B,EAAKy6B,EAAO3iD,EACjC,IAAKxL,EAAI,EAAGO,EAAO0tD,EAAM9tD,OAAQguD,EAAQ,EAAGnuD,EAAIO,IAAQP,EAAG,CACzD8sD,EAASmB,EAAMjuD,GACf0zB,EAAMo5B,EAAOp5B,IACbA,EAAI2K,OACFyuB,EAAO3pC,OAASylB,EAAU74B,EAC1B+8C,EAAOvoC,QAAUqkB,EAAUx6B,EAC3B0/C,GAAWhB,EAAOzf,WAAYzE,IAEhC,MAAM,KAACglB,EAAI,MAAEC,GAASR,GAAWzkB,EAAW2jB,EAAQO,EAAQvrB,GAC5D4sB,GAASP,GAAQM,EAAW/tD,OAC5BqL,EAAUA,GAAWqiD,EAChBn6B,EAAI4tB,UACP4M,EAAWtrD,KAAKkqD,EAEpB,CACA,OAAOqB,GAASH,GAASE,EAAYtlB,EAAW2jB,EAAQhrB,IAAW/1B,CACrE,CACA,SAAS4iD,GAAW16B,EAAKxN,EAAME,EAAKjD,EAAOoB,GACzCmP,EAAItN,IAAMA,EACVsN,EAAIxN,KAAOA,EACXwN,EAAIvN,MAAQD,EAAO/C,EACnBuQ,EAAIrN,OAASD,EAAM7B,EACnBmP,EAAIvQ,MAAQA,EACZuQ,EAAInP,OAASA,CACf,CACA,SAAS8pC,GAAWJ,EAAOrlB,EAAW2jB,EAAQhrB,GAC5C,MAAM+sB,EAAc/B,EAAOjS,QAC3B,IAAI,EAACp4C,EAAC,EAAEE,GAAKwmC,EACb,IAAK,MAAMkkB,KAAUmB,EAAO,CAC1B,MAAMv6B,EAAMo5B,EAAOp5B,IACbsN,EAAQO,EAAOurB,EAAO9rB,QAAU,CAAC12B,MAAO,EAAGoiD,OAAQ,EAAGlvC,OAAQ,GAC9DA,EAAUsvC,EAAOL,YAAczrB,EAAMxjB,QAAW,EACtD,GAAIsvC,EAAOzf,WAAY,CACrB,MAAMlqB,EAAQylB,EAAU74B,EAAIyN,EACtB+G,EAASyc,EAAMx9B,MAAQkwB,EAAInP,OAC7BphB,EAAQ69B,EAAM/5B,SAChB7E,EAAI4+B,EAAM/5B,OAERysB,EAAI4tB,SACN8M,GAAW16B,EAAK46B,EAAYpoC,KAAM9jB,EAAGmqD,EAAOgB,WAAae,EAAYnoC,MAAQmoC,EAAYpoC,KAAM3B,GAE/F6pC,GAAW16B,EAAKkV,EAAU1iB,KAAO8a,EAAM0rB,OAAQtqD,EAAG+gB,EAAOoB,GAE3Dyc,EAAM/5B,MAAQ7E,EACd4+B,EAAM0rB,QAAUvpC,EAChB/gB,EAAIsxB,EAAIrN,MACV,KAAO,CACL,MAAM9B,EAASqkB,EAAUx6B,EAAIoP,EACvB2F,EAAQ6d,EAAMx9B,MAAQkwB,EAAIvQ,MAC5BhgB,EAAQ69B,EAAM/5B,SAChB/E,EAAI8+B,EAAM/5B,OAERysB,EAAI4tB,SACN8M,GAAW16B,EAAKxxB,EAAGosD,EAAYloC,IAAKjD,EAAOopC,EAAOkB,YAAca,EAAYjoC,OAASioC,EAAYloC,KAEjGgoC,GAAW16B,EAAKxxB,EAAG0mC,EAAUxiB,IAAM4a,EAAM0rB,OAAQvpC,EAAOoB,GAE1Dyc,EAAM/5B,MAAQ/E,EACd8+B,EAAM0rB,QAAUnoC,EAChBriB,EAAIwxB,EAAIvN,KACV,CACF,CACAyiB,EAAU1mC,EAAIA,EACd0mC,EAAUxmC,EAAIA,CAChB,CACAid,GAASrW,IAAI,SAAU,CACrBulD,aAAa,EACbjU,QAAS,CACPl0B,IAAK,EACLD,MAAO,EACPE,OAAQ,EACRH,KAAM,KAGV,IAAIomC,GAAU,CACZkC,MAAAA,CAAO3uC,EAAOpc,GACPoc,EAAMouC,QACTpuC,EAAMouC,MAAQ,IAEhBxqD,EAAK69C,SAAW79C,EAAK69C,WAAY,EACjC79C,EAAKq4C,SAAWr4C,EAAKq4C,UAAY,MACjCr4C,EAAK+Z,OAAS/Z,EAAK+Z,QAAU,EAC7B/Z,EAAKkiD,QAAUliD,EAAKkiD,SAAW,WAC7B,MAAO,CAAC,CACNE,EAAG,EACH/pB,IAAAA,CAAK8M,GACHnlC,EAAKq4B,KAAK8M,EACZ,GAEJ,EACA/oB,EAAMouC,MAAMrrD,KAAKa,EACnB,EACAgrD,SAAAA,CAAU5uC,EAAO6uC,GACf,MAAM/tD,EAAQkf,EAAMouC,MAAQpuC,EAAMouC,MAAM5sD,QAAQqtD,IAAe,GAChD,IAAX/tD,GACFkf,EAAMouC,MAAMrlD,OAAOjI,EAAO,EAE9B,EACAg/B,SAAAA,CAAU9f,EAAOpc,EAAMlC,GACrBkC,EAAK69C,SAAW//C,EAAQ+/C,SACxB79C,EAAKq4C,SAAWv6C,EAAQu6C,SACxBr4C,EAAK+Z,OAASjc,EAAQic,MACxB,EACA6gB,MAAAA,CAAOxe,EAAOsD,EAAOoB,EAAQoqC,GAC3B,IAAK9uC,EACH,OAEF,MAAMy6B,EAAUrwB,GAAUpK,EAAMte,QAAQurD,OAAOxS,SACzCyS,EAAiBnpD,KAAK6B,IAAI0d,EAAQm3B,EAAQn3B,MAAO,GACjD6pC,EAAkBppD,KAAK6B,IAAI8e,EAAS+1B,EAAQ/1B,OAAQ,GACpD0pC,EA9LV,SAA0BA,GACxB,MAAMW,EAnDR,SAAmBX,GACjB,MAAMW,EAAc,GACpB,IAAI5uD,EAAGO,EAAMmzB,EAAKT,EAAK+N,EAAOyrB,EAC9B,IAAKzsD,EAAI,EAAGO,GAAQ0tD,GAAS,IAAI9tD,OAAQH,EAAIO,IAAQP,EACnD0zB,EAAMu6B,EAAMjuD,KACV87C,SAAU7oB,EAAK1xB,SAAUy/B,QAAOyrB,cAAc,IAAM/4B,GACtDk7B,EAAYhsD,KAAK,CACfjC,MAAOX,EACP0zB,MACAT,MACAoa,WAAY3Z,EAAI0a,eAChB5wB,OAAQkW,EAAIlW,OACZwjB,MAAOA,GAAU/N,EAAM+N,EACvByrB,gBAGJ,OAAOmC,CACT,CAkCsBC,CAAUZ,GACxB3M,EAAW8K,GAAawC,EAAYjhC,QAAO6+B,GAAQA,EAAK94B,IAAI4tB,YAAW,GACvEp7B,EAAOkmC,GAAaF,GAAiB0C,EAAa,SAAS,GAC3DzoC,EAAQimC,GAAaF,GAAiB0C,EAAa,UACnDxoC,EAAMgmC,GAAaF,GAAiB0C,EAAa,QAAQ,GACzDvoC,EAAS+lC,GAAaF,GAAiB0C,EAAa,WACpDE,EAAmB3C,GAA4ByC,EAAa,KAC5DG,EAAiB5C,GAA4ByC,EAAa,KAChE,MAAO,CACLtN,WACA0N,WAAY9oC,EAAK9I,OAAOgJ,GACxB6oC,eAAgB9oC,EAAM/I,OAAO2xC,GAAgB3xC,OAAOiJ,GAAQjJ,OAAO0xC,GACnElmB,UAAWsjB,GAAiB0C,EAAa,aACzCM,SAAUhpC,EAAK9I,OAAO+I,GAAO/I,OAAO2xC,GACpC1hB,WAAYjnB,EAAIhJ,OAAOiJ,GAAQjJ,OAAO0xC,GAE1C,CA6KkBK,CAAiBtvC,EAAMouC,OAC/BmB,EAAgBnB,EAAMiB,SACtBG,EAAkBpB,EAAM5gB,WAC9BxtC,EAAKggB,EAAMouC,OAAOv6B,IACgB,oBAArBA,EAAIkqB,cACblqB,EAAIkqB,cACN,IAEF,MAAM0R,EAA0BF,EAAc1yB,QAAO,CAAC+W,EAAO+Y,IAC3DA,EAAK94B,IAAInyB,UAAwC,IAA7BirD,EAAK94B,IAAInyB,QAAQk1C,QAAoBhD,EAAQA,EAAQ,GAAG,IAAM,EAC9E8Y,EAAS/tD,OAAOirC,OAAO,CAC3B8jB,WAAYpqC,EACZsqC,YAAalpC,EACb+1B,UACAyS,iBACAC,kBACAJ,aAAcG,EAAiB,EAAIuC,EACnCzC,cAAeG,EAAkB,IAE7BE,EAAa1uD,OAAOiN,OAAO,CAAC,EAAG6uC,GACrC6S,GAAiBD,EAAYjjC,GAAU0kC,IACvC,MAAM/lB,EAAYpqC,OAAOiN,OAAO,CAC9ByhD,aACAn9C,EAAGg9C,EACH3+C,EAAG4+C,EACH9qD,EAAGo4C,EAAQp0B,KACX9jB,EAAGk4C,EAAQl0B,KACVk0B,GACG/Y,EAAS8qB,GAAc+C,EAAchyC,OAAOiyC,GAAkB9C,GACpEyB,GAASC,EAAM3M,SAAU1Y,EAAW2jB,EAAQhrB,GAC5CysB,GAASoB,EAAexmB,EAAW2jB,EAAQhrB,GACvCysB,GAASqB,EAAiBzmB,EAAW2jB,EAAQhrB,IAC/CysB,GAASoB,EAAexmB,EAAW2jB,EAAQhrB,GA1KjD,SAA0BqH,GACxB,MAAMskB,EAAatkB,EAAUskB,WAC7B,SAASqC,EAAUt8B,GACjB,MAAMqrB,EAAS16C,KAAK6B,IAAIynD,EAAWj6B,GAAO2V,EAAU3V,GAAM,GAE1D,OADA2V,EAAU3V,IAAQqrB,EACXA,CACT,CACA1V,EAAUxmC,GAAKmtD,EAAU,OACzB3mB,EAAU1mC,GAAKqtD,EAAU,QACzBA,EAAU,SACVA,EAAU,SACZ,CAiKIC,CAAiB5mB,GACjBylB,GAAWJ,EAAMe,WAAYpmB,EAAW2jB,EAAQhrB,GAChDqH,EAAU1mC,GAAK0mC,EAAU74B,EACzB64B,EAAUxmC,GAAKwmC,EAAUx6B,EACzBigD,GAAWJ,EAAMgB,eAAgBrmB,EAAW2jB,EAAQhrB,GACpD1hB,EAAM+oB,UAAY,CAChB1iB,KAAM0iB,EAAU1iB,KAChBE,IAAKwiB,EAAUxiB,IACfD,MAAOyiB,EAAU1iB,KAAO0iB,EAAU74B,EAClCsW,OAAQuiB,EAAUxiB,IAAMwiB,EAAUx6B,EAClCmW,OAAQqkB,EAAUx6B,EAClB+U,MAAOylB,EAAU74B,GAEnBlQ,EAAKouD,EAAMrlB,WAAYkkB,IACrB,MAAMp5B,EAAMo5B,EAAOp5B,IACnBl1B,OAAOiN,OAAOioB,EAAK7T,EAAM+oB,WACzBlV,EAAI2K,OAAOuK,EAAU74B,EAAG64B,EAAUx6B,EAAG,CAAC8X,KAAM,EAAGE,IAAK,EAAGD,MAAO,EAAGE,OAAQ,GAAG,GAEhF,GAGF,MAAMopC,GACJC,cAAAA,CAAevrC,EAAQmQ,GAAc,CACrCq7B,cAAAA,CAAe/vC,GACb,OAAO,CACT,CACA+V,gBAAAA,CAAiB9V,EAAOthB,EAAMiK,GAAW,CACzCotB,mBAAAA,CAAoB/V,EAAOthB,EAAMiK,GAAW,CAC5CuX,mBAAAA,GACE,OAAO,CACT,CACAoU,cAAAA,CAAexB,EAASxP,EAAOoB,EAAQ+P,GAGrC,OAFAnR,EAAQvf,KAAK6B,IAAI,EAAG0d,GAASwP,EAAQxP,OACrCoB,EAASA,GAAUoO,EAAQpO,OACpB,CACLpB,QACAoB,OAAQ3gB,KAAK6B,IAAI,EAAG6uB,EAAc1wB,KAAKkB,MAAMqe,EAAQmR,GAAe/P,GAExE,CACAqrC,UAAAA,CAAWzrC,GACT,OAAO,CACT,CACA0rC,YAAAA,CAAapwB,GACb,EAGF,MAAMqwB,WAAsBL,GAC1BC,cAAAA,CAAejsD,GACb,OAAOA,GAAQA,EAAK2gB,YAAc3gB,EAAK2gB,WAAW,OAAS,IAC7D,CACAyrC,YAAAA,CAAapwB,GACXA,EAAOl+B,QAAQge,WAAY,CAC7B,EAGF,MAAMwwC,GAAc,WACdC,GAAc,CAClBC,WAAY,YACZC,UAAW,YACXC,SAAU,UACVC,aAAc,aACdC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,aAAc,WACdC,WAAY,YAERC,GAAgBtyD,GAAmB,OAAVA,GAA4B,KAAVA,EAoCjD,MAAMuyD,KAAuBn7B,IAA+B,CAACE,SAAS,GAItE,SAASk7B,GAAe/wC,EAAOthB,EAAMiK,GACnCqX,EAAMsE,OAAOyR,oBAAoBr3B,EAAMiK,EAAUmoD,GACnD,CAYA,SAASE,GAAiBC,EAAU3sC,GAClC,IAAK,MAAMlF,KAAQ6xC,EACjB,GAAI7xC,IAASkF,GAAUlF,EAAK8xC,SAAS5sC,GACnC,OAAO,CAGb,CACA,SAAS6sC,GAAqBnxC,EAAOthB,EAAMiK,GACzC,MAAM2b,EAAStE,EAAMsE,OACf8sC,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAM5kB,KAAS2kB,EAClBC,EAAUA,GAAWP,GAAiBrkB,EAAM6kB,WAAYltC,GACxDitC,EAAUA,IAAYP,GAAiBrkB,EAAM8kB,aAAcntC,GAEzDitC,GACF5oD,GACF,IAGF,OADAyoD,EAASM,QAAQt/B,SAAU,CAACu/B,WAAW,EAAMC,SAAS,IAC/CR,CACT,CACA,SAASS,GAAqB7xC,EAAOthB,EAAMiK,GACzC,MAAM2b,EAAStE,EAAMsE,OACf8sC,EAAW,IAAIC,kBAAiBC,IACpC,IAAIC,GAAU,EACd,IAAK,MAAM5kB,KAAS2kB,EAClBC,EAAUA,GAAWP,GAAiBrkB,EAAM8kB,aAAcntC,GAC1DitC,EAAUA,IAAYP,GAAiBrkB,EAAM6kB,WAAYltC,GAEvDitC,GACF5oD,GACF,IAGF,OADAyoD,EAASM,QAAQt/B,SAAU,CAACu/B,WAAW,EAAMC,SAAS,IAC/CR,CACT,CACA,MAAMU,GAAqB,IAAIp7B,IAC/B,IAAIq7B,GAAsB,EAC1B,SAASC,KACP,MAAMC,EAAMzoD,OAAOsW,iBACfmyC,IAAQF,KAGZA,GAAsBE,EACtBH,GAAmB9oD,SAAQ,CAACs2B,EAAQtf,KAC9BA,EAAMmE,0BAA4B8tC,GACpC3yB,GACF,IAEJ,CAaA,SAAS4yB,GAAqBlyC,EAAOthB,EAAMiK,GACzC,MAAM2b,EAAStE,EAAMsE,OACfuQ,EAAYvQ,GAAU+N,GAAe/N,GAC3C,IAAKuQ,EACH,OAEF,MAAMyK,EAAS51B,IAAU,CAAC4Z,EAAOoB,KAC/B,MAAMxU,EAAI2kB,EAAUI,YACpBtsB,EAAS2a,EAAOoB,GACZxU,EAAI2kB,EAAUI,aAChBtsB,GACF,GACCa,QACG4nD,EAAW,IAAIe,gBAAeb,IAClC,MAAM3kB,EAAQ2kB,EAAQ,GAChBhuC,EAAQqpB,EAAMylB,YAAY9uC,MAC1BoB,EAASioB,EAAMylB,YAAY1tC,OACnB,IAAVpB,GAA0B,IAAXoB,GAGnB4a,EAAOhc,EAAOoB,EAAO,IAIvB,OAFA0sC,EAASM,QAAQ78B,GAlCnB,SAAuC7U,EAAOsf,GACvCwyB,GAAmBnuD,MACtB6F,OAAOssB,iBAAiB,SAAUk8B,IAEpCF,GAAmB3oD,IAAI6W,EAAOsf,EAChC,CA8BE+yB,CAA8BryC,EAAOsf,GAC9B8xB,CACT,CACA,SAASkB,GAAgBtyC,EAAOthB,EAAM0yD,GAChCA,GACFA,EAASmB,aAEE,WAAT7zD,GApCN,SAAyCshB,GACvC8xC,GAAmBpkC,OAAO1N,GACrB8xC,GAAmBnuD,MACtB6F,OAAOusB,oBAAoB,SAAUi8B,GAEzC,CAgCIQ,CAAgCxyC,EAEpC,CACA,SAASyyC,GAAqBzyC,EAAOthB,EAAMiK,GACzC,MAAM2b,EAAStE,EAAMsE,OACf0H,EAAQtiB,IAAWizB,IACL,OAAd3c,EAAMW,KACRhY,EAhHN,SAAyBg0B,EAAO3c,GAC9B,MAAMthB,EAAOyxD,GAAYxzB,EAAMj+B,OAASi+B,EAAMj+B,MACxC,EAAC2D,EAAC,EAAEE,GAAKgxB,GAAoBoJ,EAAO3c,GAC1C,MAAO,CACLthB,OACAshB,QACA0yC,OAAQ/1B,EACRt6B,OAAS0F,IAAN1F,EAAkBA,EAAI,KACzBE,OAASwF,IAANxF,EAAkBA,EAAI,KAE7B,CAsGeowD,CAAgBh2B,EAAO3c,GAClC,GACCA,GAAQngB,IACT,MAAM88B,EAAQ98B,EAAK,GACnB,MAAO,CAAC88B,EAAOA,EAAM5I,QAAS4I,EAAM3I,QAAQ,IAG9C,OA7HF,SAAqB5U,EAAM1gB,EAAMiK,GAC/ByW,EAAK0W,iBAAiBp3B,EAAMiK,EAAUmoD,GACxC,CA0HE8B,CAAYtuC,EAAQ5lB,EAAMstB,GACnBA,CACT,CACA,MAAM6mC,WAAoBjD,GACxBC,cAAAA,CAAevrC,EAAQmQ,GACrB,MAAM1U,EAAUuE,GAAUA,EAAOC,YAAcD,EAAOC,WAAW,MACjE,OAAIxE,GAAWA,EAAQuE,SAAWA,GAtKtC,SAAoBA,EAAQmQ,GAC1B,MAAMlU,EAAQ+D,EAAO/D,MACfuyC,EAAexuC,EAAOyuC,aAAa,UACnCC,EAAc1uC,EAAOyuC,aAAa,SAcxC,GAbAzuC,EAAO4rC,IAAe,CACpBz0B,QAAS,CACP/W,OAAQouC,EACRxvC,MAAO0vC,EACPzyC,MAAO,CACLq2B,QAASr2B,EAAMq2B,QACflyB,OAAQnE,EAAMmE,OACdpB,MAAO/C,EAAM+C,SAInB/C,EAAMq2B,QAAUr2B,EAAMq2B,SAAW,QACjCr2B,EAAMmT,UAAYnT,EAAMmT,WAAa,aACjCm9B,GAAcmC,GAAc,CAC9B,MAAMC,EAAej9B,GAAa1R,EAAQ,cACrBvc,IAAjBkrD,IACF3uC,EAAOhB,MAAQ2vC,EAEnB,CACA,GAAIpC,GAAciC,GAChB,GAA4B,KAAxBxuC,EAAO/D,MAAMmE,OACfJ,EAAOI,OAASJ,EAAOhB,OAASmR,GAAe,OAC1C,CACL,MAAMy+B,EAAgBl9B,GAAa1R,EAAQ,eACrBvc,IAAlBmrD,IACF5uC,EAAOI,OAASwuC,EAEpB,CAGJ,CAqIMC,CAAW7uC,EAAQmQ,GACZ1U,GAEF,IACT,CACA+vC,cAAAA,CAAe/vC,GACb,MAAMuE,EAASvE,EAAQuE,OACvB,IAAKA,EAAO4rC,IACV,OAAO,EAET,MAAMz0B,EAAUnX,EAAO4rC,IAAaz0B,QACpC,CAAC,SAAU,SAASzyB,SAASihB,IAC3B,MAAM1rB,EAAQk9B,EAAQxR,GAClB3rB,EAAcC,GAChB+lB,EAAO8uC,gBAAgBnpC,GAEvB3F,EAAO+uC,aAAappC,EAAM1rB,EAC5B,IAEF,MAAMgiB,EAAQkb,EAAQlb,OAAS,CAAC,EAMhC,OALA5hB,OAAO0B,KAAKkgB,GAAOvX,SAASzH,IAC1B+iB,EAAO/D,MAAMhf,GAAOgf,EAAMhf,EAAI,IAEhC+iB,EAAOhB,MAAQgB,EAAOhB,aACfgB,EAAO4rC,KACP,CACT,CACAp6B,gBAAAA,CAAiB9V,EAAOthB,EAAMiK,GAC5BuU,KAAK6Y,oBAAoB/V,EAAOthB,GAChC,MAAM40D,EAAUtzC,EAAMuzC,WAAavzC,EAAMuzC,SAAW,CAAC,GAM/CxI,EALW,CACfyI,OAAQrC,GACRsC,OAAQ5B,GACRvyB,OAAQ4yB,IAEexzD,IAAS+zD,GAClCa,EAAQ50D,GAAQqsD,EAAQ/qC,EAAOthB,EAAMiK,EACvC,CACAotB,mBAAAA,CAAoB/V,EAAOthB,GACzB,MAAM40D,EAAUtzC,EAAMuzC,WAAavzC,EAAMuzC,SAAW,CAAC,GAC/CvnC,EAAQsnC,EAAQ50D,GACtB,IAAKstB,EACH,QAEe,CACfwnC,OAAQlB,GACRmB,OAAQnB,GACRhzB,OAAQgzB,IAEe5zD,IAASqyD,IAC1B/wC,EAAOthB,EAAMstB,GACrBsnC,EAAQ50D,QAAQqJ,CAClB,CACAmY,mBAAAA,GACE,OAAO1W,OAAOsW,gBAChB,CACAwU,cAAAA,CAAehQ,EAAQhB,EAAOoB,EAAQ+P,GACpC,OAAOH,GAAehQ,EAAQhB,EAAOoB,EAAQ+P,EAC/C,CACAs7B,UAAAA,CAAWzrC,GACT,MAAMuQ,EAAYxC,GAAe/N,GACjC,SAAUuQ,IAAaA,EAAU6+B,YACnC,EAUF,MAAMC,GACJ52C,WAAAA,GACEG,KAAK02C,MAAQ,EACf,CACAC,MAAAA,CAAO7zC,EAAO8zC,EAAMj0D,EAAMiuB,GACX,eAATgmC,IACF52C,KAAK02C,MAAQ12C,KAAK62C,mBAAmB/zC,GAAO,GAC5C9C,KAAKie,QAAQje,KAAK02C,MAAO5zC,EAAO,YAElC,MAAMd,EAAc4O,EAAS5Q,KAAKuC,aAAaO,GAAO8N,OAAOA,GAAU5Q,KAAKuC,aAAaO,GACnFmT,EAASjW,KAAKie,QAAQjc,EAAac,EAAO8zC,EAAMj0D,GAKtD,MAJa,iBAATi0D,IACF52C,KAAKie,QAAQjc,EAAac,EAAO,QACjC9C,KAAKie,QAAQje,KAAK02C,MAAO5zC,EAAO,cAE3BmT,CACT,CACAgI,OAAAA,CAAQjc,EAAac,EAAO8zC,EAAMj0D,GAChCA,EAAOA,GAAQ,CAAC,EAChB,IAAK,MAAMm0D,KAAc90C,EAAa,CACpC,MAAM+0C,EAASD,EAAWC,OAG1B,IAAyC,IAArCt0D,EAFWs0D,EAAOH,GACP,CAAC9zC,EAAOngB,EAAMm0D,EAAWtyD,SACXuyD,IAAqBp0D,EAAKq0D,WACrD,OAAO,CAEX,CACA,OAAO,CACT,CACAC,UAAAA,GACO71D,EAAc4e,KAAK8uB,UACtB9uB,KAAKk3C,UAAYl3C,KAAK8uB,OACtB9uB,KAAK8uB,YAASjkC,EAElB,CACA0X,YAAAA,CAAaO,GACX,GAAI9C,KAAK8uB,OACP,OAAO9uB,KAAK8uB,OAEd,MAAM9sB,EAAchC,KAAK8uB,OAAS9uB,KAAK62C,mBAAmB/zC,GAE1D,OADA9C,KAAKm3C,oBAAoBr0C,GAClBd,CACT,CACA60C,kBAAAA,CAAmB/zC,EAAOygB,GACxB,MAAMb,EAAS5f,GAASA,EAAM4f,OACxBl+B,EAAUpC,EAAesgC,EAAOl+B,SAAWk+B,EAAOl+B,QAAQ6f,QAAS,CAAC,GACpEA,EAWV,SAAoBqe,GAClB,MAAM00B,EAAW,CAAC,EACZ/yC,EAAU,GACVlhB,EAAO1B,OAAO0B,KAAK+mD,GAAS7lC,QAAQrY,OAC1C,IAAK,IAAI/I,EAAI,EAAGA,EAAIE,EAAKC,OAAQH,IAC/BohB,EAAQxe,KAAKqkD,GAASkB,UAAUjoD,EAAKF,KAEvC,MAAMuiB,EAAQkd,EAAOre,SAAW,GAChC,IAAK,IAAIphB,EAAI,EAAGA,EAAIuiB,EAAMpiB,OAAQH,IAAK,CACrC,MAAM8zD,EAASvxC,EAAMviB,IACY,IAA7BohB,EAAQ/f,QAAQyyD,KAClB1yC,EAAQxe,KAAKkxD,GACbK,EAASL,EAAO51D,KAAM,EAE1B,CACA,MAAO,CAACkjB,UAAS+yC,WACnB,CA3BoBC,CAAW30B,GAC3B,OAAmB,IAAZl+B,GAAsB++B,EAoCjC,SAA2BzgB,EAAKw0C,EAAuB9yD,EAAS++B,GAAK,IAAnC,QAAClf,EAAO,SAAE+yC,GAASE,EACnD,MAAMrhC,EAAS,GACTpT,EAAUC,EAAMuE,aACtB,IAAK,MAAM0vC,KAAU1yC,EAAS,CAC5B,MAAMljB,EAAK41D,EAAO51D,GACZmpB,EAAOitC,GAAQ/yD,EAAQrD,GAAKoiC,GACrB,OAATjZ,GAGJ2L,EAAOpwB,KAAK,CACVkxD,SACAvyD,QAASgzD,GAAW10C,EAAM4f,OAAQ,CAACq0B,SAAQvxC,MAAO4xC,EAASj2D,IAAMmpB,EAAMzH,IAE3E,CACA,OAAOoT,CACT,CAnD4CwhC,CAAkB30C,EAAOuB,EAAS7f,EAAS++B,GAAhD,EACrC,CACA4zB,mBAAAA,CAAoBr0C,GAClB,MAAM40C,EAAsB13C,KAAKk3C,WAAa,GACxCl1C,EAAchC,KAAK8uB,OACnB2N,EAAOA,CAACl2C,EAAGC,IAAMD,EAAEqqB,QAAOzrB,IAAMqB,EAAEmxD,MAAKtyD,GAAKF,EAAE4xD,OAAO51D,KAAOkE,EAAE0xD,OAAO51D,OAC3E6e,KAAKie,QAAQwe,EAAKib,EAAqB11C,GAAcc,EAAO,QAC5D9C,KAAKie,QAAQwe,EAAKz6B,EAAa01C,GAAsB50C,EAAO,QAC9D,EAmBF,SAASy0C,GAAQ/yD,EAAS++B,GACxB,OAAKA,IAAmB,IAAZ/+B,GAGI,IAAZA,EACK,CAAC,EAEHA,EALE,IAMX,CAiBA,SAASgzD,GAAW90B,EAAMk1B,EAAmBttC,EAAMzH,GAAS,IAAhC,OAACk0C,EAAM,MAAEvxC,GAAMoyC,EACzC,MAAMz0D,EAAOu/B,EAAOm1B,gBAAgBd,GAC9BhpC,EAAS2U,EAAOgH,gBAAgBpf,EAAMnnB,GAI5C,OAHIqiB,GAASuxC,EAAOz0C,UAClByL,EAAOloB,KAAKkxD,EAAOz0C,UAEdogB,EAAOiH,eAAe5b,EAAQlL,EAAS,CAAC,IAAK,CAClDoO,YAAY,EACZC,WAAW,EACXH,SAAS,GAEb,CAEA,SAAS+mC,GAAat2D,EAAMgD,GAC1B,MAAMuzD,EAAkBz1C,GAASK,SAASnhB,IAAS,CAAC,EAEpD,QADwBgD,EAAQme,UAAY,CAAC,GAAGnhB,IAAS,CAAC,GACpCoiB,WAAapf,EAAQof,WAAam0C,EAAgBn0C,WAAa,GACvF,CAqBA,SAASo0C,GAAc72D,EAAI82D,GACzB,MAAW,MAAP92D,GAAqB,MAAPA,EACTA,EAEF82D,EAAatqD,OAXH,SADOoxC,EAYqBkZ,EAAalZ,WAXnB,WAAbA,EACjB,IAEQ,SAAbA,GAAoC,UAAbA,EAClB,SADT,IAQuE59C,EAAG+E,OAAO,GAAG+Y,cAZtF,IAA0B8/B,CAa1B,CAuCA,SAASmZ,GAAYx1B,GACnB,MAAMl+B,EAAUk+B,EAAOl+B,UAAYk+B,EAAOl+B,QAAU,CAAC,GACrDA,EAAQ6f,QAAUjiB,EAAeoC,EAAQ6f,QAAS,CAAC,GACnD7f,EAAQggB,OAzCV,SAA0Bke,EAAQl+B,GAChC,MAAM2zD,EAAgBp2C,GAAU2gB,EAAOlhC,OAAS,CAACgjB,OAAQ,CAAC,GACpD4zC,EAAe5zD,EAAQggB,QAAU,CAAC,EAClC6zC,EAAiBP,GAAap1B,EAAOlhC,KAAMgD,GAC3C8zD,EAAW72D,OAAOwC,OAAO,MACzBugB,EAAS/iB,OAAOwC,OAAO,MA+B7B,OA9BAxC,OAAO0B,KAAKi1D,GAActsD,SAAQ3K,IAChC,MAAMo3D,EAAYH,EAAaj3D,GAC/B,IAAKW,EAASy2D,GACZ,OAAOlrC,QAAQmrC,MAAM,0CAADn4C,OAA2Clf,IAEjE,GAAIo3D,EAAUxoC,OACZ,OAAO1C,QAAQC,KAAK,kDAADjN,OAAmDlf,IAExE,MAAMwM,EAAOqqD,GAAc72D,EAAIo3D,GACzBE,EAhCV,SAAmC9qD,EAAMiW,GACvC,OAAOjW,IAASiW,EAAY,UAAY,SAC1C,CA8BsB80C,CAA0B/qD,EAAM0qD,GAC5CM,EAAsBR,EAAc3zC,QAAU,CAAC,EACrD8zC,EAAS3qD,GAAQ2qD,EAAS3qD,IAASxM,EACnCqjB,EAAOrjB,GAAM2D,EAAQrD,OAAOwC,OAAO,MAAO,CAAC,CAAC0J,QAAO4qD,EAAWI,EAAoBhrD,GAAOgrD,EAAoBF,IAAY,IAE3H/1B,EAAO5c,KAAKnD,SAAS7W,SAAQu7B,IAC3B,MAAM7lC,EAAO6lC,EAAQ7lC,MAAQkhC,EAAOlhC,KAC9BoiB,EAAYyjB,EAAQzjB,WAAak0C,GAAat2D,EAAMgD,GAEpDm0D,GADkB52C,GAAUvgB,IAAS,CAAC,GACAgjB,QAAU,CAAC,EACvD/iB,OAAO0B,KAAKw1D,GAAqB7sD,SAAQ8sD,IACvC,MAAMjrD,EApDZ,SAAmCxM,EAAIyiB,GACrC,IAAIjW,EAAOxM,EAMX,MALW,YAAPA,EACFwM,EAAOiW,EACS,YAAPziB,IACTwM,EAAqB,MAAdiW,EAAoB,IAAM,KAE5BjW,CACT,CA4CmBkrD,CAA0BD,EAAWh1C,GAC5CziB,EAAKkmC,EAAQ15B,EAAO,WAAa2qD,EAAS3qD,IAASA,EACzD6W,EAAOrjB,GAAMqjB,EAAOrjB,IAAOM,OAAOwC,OAAO,MACzCa,EAAQ0f,EAAOrjB,GAAK,CAAC,CAACwM,QAAOyqD,EAAaj3D,GAAKw3D,EAAoBC,IAAY,GAC/E,IAEJn3D,OAAO0B,KAAKqhB,GAAQ1Y,SAAQzH,IAC1B,MAAMkgB,EAAQC,EAAOngB,GACrBS,EAAQyf,EAAO,CAACjC,GAASkC,OAAOD,EAAM/iB,MAAO8gB,GAASiC,OAAO,IAExDC,CACT,CAImBs0C,CAAiBp2B,EAAQl+B,EAC5C,CACA,SAASu0D,GAASjzC,GAIhB,OAHAA,EAAOA,GAAQ,CAAC,GACXnD,SAAWmD,EAAKnD,UAAY,GACjCmD,EAAKmkB,OAASnkB,EAAKmkB,QAAU,GACtBnkB,CACT,CAOA,MAAMkzC,GAAW,IAAIx/B,IACfy/B,GAAa,IAAI/sD,IACvB,SAASgtD,GAAWt/B,EAAUu/B,GAC5B,IAAIh2D,EAAO61D,GAASp0C,IAAIgV,GAMxB,OALKz2B,IACHA,EAAOg2D,IACPH,GAAS/sD,IAAI2tB,EAAUz2B,GACvB81D,GAAW9sD,IAAIhJ,IAEVA,CACT,CACA,MAAMi2D,GAAaA,CAACntD,EAAK1G,EAAKlB,KAC5B,MAAMimB,EAAOhlB,EAAiBC,EAAKlB,QACtBwG,IAATyf,GACFre,EAAIE,IAAIme,EACV,EAEF,MAAM+uC,GACJx5C,WAAAA,CAAY6iB,GACV1iB,KAAKs5C,QAzBT,SAAoB52B,GAIlB,OAHAA,EAASA,GAAU,CAAC,GACb5c,KAAOizC,GAASr2B,EAAO5c,MAC9BoyC,GAAYx1B,GACLA,CACT,CAoBmB62B,CAAW72B,GAC1B1iB,KAAKw5C,YAAc,IAAIhgC,IACvBxZ,KAAKy5C,eAAiB,IAAIjgC,GAC5B,CACA,YAAIzW,GACF,OAAO/C,KAAKs5C,QAAQv2C,QACtB,CACA,QAAIvhB,GACF,OAAOwe,KAAKs5C,QAAQ93D,IACtB,CACA,QAAIA,CAAKA,GACPwe,KAAKs5C,QAAQ93D,KAAOA,CACtB,CACA,QAAIskB,GACF,OAAO9F,KAAKs5C,QAAQxzC,IACtB,CACA,QAAIA,CAAKA,GACP9F,KAAKs5C,QAAQxzC,KAAOizC,GAASjzC,EAC/B,CACA,WAAIthB,GACF,OAAOwb,KAAKs5C,QAAQ90D,OACtB,CACA,WAAIA,CAAQA,GACVwb,KAAKs5C,QAAQ90D,QAAUA,CACzB,CACA,WAAI6f,GACF,OAAOrE,KAAKs5C,QAAQj1C,OACtB,CACAid,MAAAA,GACE,MAAMoB,EAAS1iB,KAAKs5C,QACpBt5C,KAAK05C,aACLxB,GAAYx1B,EACd,CACAg3B,UAAAA,GACE15C,KAAKw5C,YAAYG,QACjB35C,KAAKy5C,eAAeE,OACtB,CACAlwB,gBAAAA,CAAiBmwB,GACf,OAAOV,GAAWU,GAChB,IAAM,CAAC,CAAC,YAADv5C,OACOu5C,GACZ,MAEN,CACA/sB,yBAAAA,CAA0B+sB,EAAahtB,GACrC,OAAOssB,GAAW,GAAD74C,OAAIu5C,EAAW,gBAAAv5C,OAAeusB,IAC7C,IAAM,CACJ,CAAC,YAADvsB,OACcu5C,EAAW,iBAAAv5C,OAAgBusB,GAAU,eAAAvsB,OAClCusB,IAEjB,CAAC,YAADvsB,OACcu5C,GACZ,MAGR,CACAptB,uBAAAA,CAAwBotB,EAAattB,GACnC,OAAO4sB,GAAW,GAAD74C,OAAIu5C,EAAW,KAAAv5C,OAAIisB,IAClC,IAAM,CAAC,CAAC,YAADjsB,OACOu5C,EAAW,cAAAv5C,OAAaisB,GAAW,YAAAjsB,OACnCu5C,GAAW,YAAAv5C,OACXisB,GACZ,MAEN,CACAurB,eAAAA,CAAgBd,GACd,MAAM51D,EAAK41D,EAAO51D,GACZK,EAAOwe,KAAKxe,KAClB,OAAO03D,GAAW,GAAD74C,OAAI7e,EAAI,YAAA6e,OAAWlf,IAClC,IAAM,CAAC,CAAC,WAADkf,OACMlf,MACR41D,EAAO8C,wBAA0B,MAE1C,CACAC,aAAAA,CAAcC,EAAWC,GACvB,MAAMR,EAAcx5C,KAAKw5C,YACzB,IAAIjzC,EAAQizC,EAAY50C,IAAIm1C,GAK5B,OAJKxzC,IAASyzC,IACZzzC,EAAQ,IAAIiT,IACZggC,EAAYvtD,IAAI8tD,EAAWxzC,IAEtBA,CACT,CACAmjB,eAAAA,CAAgBqwB,EAAWE,EAAUD,GACnC,MAAM,QAACx1D,EAAO,KAAEhD,GAAQwe,KAClBuG,EAAQvG,KAAK85C,cAAcC,EAAWC,GACtCh0B,EAASzf,EAAM3B,IAAIq1C,GACzB,GAAIj0B,EACF,OAAOA,EAET,MAAMjY,EAAS,IAAI7hB,IACnB+tD,EAASnuD,SAAQ3I,IACX42D,IACFhsC,EAAO5hB,IAAI4tD,GACX52D,EAAK2I,SAAQzH,GAAO+0D,GAAWrrC,EAAQgsC,EAAW11D,MAEpDlB,EAAK2I,SAAQzH,GAAO+0D,GAAWrrC,EAAQvpB,EAASH,KAChDlB,EAAK2I,SAAQzH,GAAO+0D,GAAWrrC,EAAQhM,GAAUvgB,IAAS,CAAC,EAAG6C,KAC9DlB,EAAK2I,SAAQzH,GAAO+0D,GAAWrrC,EAAQzL,GAAUje,KACjDlB,EAAK2I,SAAQzH,GAAO+0D,GAAWrrC,EAAQ/L,GAAa3d,IAAK,IAE3D,MAAMkE,EAAQhH,MAAM6K,KAAK2hB,GAOzB,OANqB,IAAjBxlB,EAAMnF,QACRmF,EAAM1C,KAAKpE,OAAOwC,OAAO,OAEvBg1D,GAAWtyD,IAAIszD,IACjB1zC,EAAMta,IAAIguD,EAAU1xD,GAEfA,CACT,CACA2xD,iBAAAA,GACE,MAAM,QAAC11D,EAAO,KAAEhD,GAAQwe,KACxB,MAAO,CACLxb,EACAud,GAAUvgB,IAAS,CAAC,EACpB8gB,GAASK,SAASnhB,IAAS,CAAC,EAC5B,CAACA,QACD8gB,GACAN,GAEJ,CACAyqB,mBAAAA,CAAoB1e,EAAQzP,EAAOuE,GAA0B,IAAjBmL,EAAQpjB,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,IACtD,MAAMqrB,EAAS,CAACiN,SAAS,IACnB,SAAC19B,EAAQ,YAAE20D,GAAeC,GAAYp6C,KAAKy5C,eAAgB1rC,EAAQC,GACzE,IAAIxpB,EAAUgB,EACd,GAsCJ,SAAqBspB,EAAOxQ,GAC1B,MAAM,aAAC+R,EAAY,YAAEK,GAAenO,GAAauM,GACjD,IAAK,MAAM/B,KAAQzO,EAAO,CACxB,MAAM2S,EAAaZ,EAAatD,GAC1BmE,EAAYR,EAAY3D,GACxB1rB,GAAS6vB,GAAaD,IAAenC,EAAM/B,GACjD,GAAKkE,IAAe5qB,EAAWhF,IAAUg5D,GAAYh5D,KAC/C6vB,GAAa5vB,EAAQD,GACzB,OAAO,CAEX,CACA,OAAO,CACT,CAlDQi5D,CAAY90D,EAAU8Y,GAAQ,CAChC2X,EAAOiN,SAAU,EAGjB1+B,EAAUorB,GAAepqB,EAFzBqd,EAAUxc,EAAWwc,GAAWA,IAAYA,EACxB7C,KAAK2pB,eAAe5b,EAAQlL,EAASs3C,GAE3D,CACA,IAAK,MAAMptC,KAAQzO,EACjB2X,EAAOlJ,GAAQvoB,EAAQuoB,GAEzB,OAAOkJ,CACT,CACA0T,cAAAA,CAAe5b,EAAQlL,GAA8C,IAArCmL,EAAQpjB,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,IAAKklB,EAAkBllB,UAAAxH,OAAA,EAAAwH,UAAA,QAAAC,EACjE,MAAM,SAACrF,GAAY40D,GAAYp6C,KAAKy5C,eAAgB1rC,EAAQC,GAC5D,OAAOlsB,EAAS+gB,GACZ+M,GAAepqB,EAAUqd,OAAShY,EAAWilB,GAC7CtqB,CACN,EAEF,SAAS40D,GAAYG,EAAexsC,EAAQC,GAC1C,IAAIzH,EAAQg0C,EAAc31C,IAAImJ,GACzBxH,IACHA,EAAQ,IAAIiT,IACZ+gC,EAActuD,IAAI8hB,EAAQxH,IAE5B,MAAMqT,EAAW5L,EAASuC,OAC1B,IAAIyV,EAASzf,EAAM3B,IAAIgV,GACvB,IAAKoM,EAAQ,CAEXA,EAAS,CACPxgC,SAFesoB,GAAgBC,EAAQC,GAGvCmsC,YAAansC,EAAS4C,QAAO3nB,IAAMA,EAAEgW,cAAcuQ,SAAS,YAE9DjJ,EAAMta,IAAI2tB,EAAUoM,EACtB,CACA,OAAOA,CACT,CACA,MAAMq0B,GAAch5D,GAASS,EAAST,IACjCI,OAAOqhC,oBAAoBzhC,GAAOs+B,QAAO,CAACC,EAAKv7B,IAAQu7B,GAAOv5B,EAAWhF,EAAMgD,MAAO,GAiB3F,MAAMm2D,GAAkB,CAAC,MAAO,SAAU,OAAQ,QAAS,aAC3D,SAASC,GAAqB1b,EAAUpxC,GACtC,MAAoB,QAAboxC,GAAmC,WAAbA,IAAiE,IAAvCyb,GAAgBl2D,QAAQy6C,IAA6B,MAATpxC,CACrG,CACA,SAAS+sD,GAAcC,EAAIC,GACzB,OAAO,SAASr0D,EAAGC,GACjB,OAAOD,EAAEo0D,KAAQn0D,EAAEm0D,GACfp0D,EAAEq0D,GAAMp0D,EAAEo0D,GACVr0D,EAAEo0D,GAAMn0D,EAAEm0D,EAChB,CACF,CACA,SAASE,GAAqBh4C,GAC5B,MAAMC,EAAQD,EAAQC,MAChBkf,EAAmBlf,EAAMte,QAAQge,UACvCM,EAAM6/B,cAAc,eACpBlgD,EAASu/B,GAAoBA,EAAiB84B,WAAY,CAACj4C,GAAUC,EACvE,CACA,SAASi4C,GAAoBl4C,GAC3B,MAAMC,EAAQD,EAAQC,MAChBkf,EAAmBlf,EAAMte,QAAQge,UACvC/f,EAASu/B,GAAoBA,EAAiBg5B,WAAY,CAACn4C,GAAUC,EACvE,CACA,SAASm4C,GAAUv0D,GASjB,OARIuuB,MAAqC,kBAATvuB,EAC9BA,EAAOwuB,SAASgmC,eAAex0D,GACtBA,GAAQA,EAAKtD,SACtBsD,EAAOA,EAAK,IAEVA,GAAQA,EAAK0gB,SACf1gB,EAAOA,EAAK0gB,QAEP1gB,CACT,CACA,MAAMy0D,GAAY,CAAC,EACbC,GAAY/2D,IAChB,MAAM+iB,EAAS6zC,GAAU52D,GACzB,OAAO5C,OAAO4gB,OAAO84C,IAAWvqC,QAAQ3e,GAAMA,EAAEmV,SAAWA,IAAQ+X,KAAK,EAE1E,SAASk8B,GAAgB91D,EAAK2E,EAAOgkC,GACnC,MAAM/qC,EAAO1B,OAAO0B,KAAKoC,GACzB,IAAK,MAAMlB,KAAOlB,EAAM,CACtB,MAAMm4D,GAAUj3D,EAChB,GAAIi3D,GAAUpxD,EAAO,CACnB,MAAM7I,EAAQkE,EAAIlB,UACXkB,EAAIlB,IACP6pC,EAAO,GAAKotB,EAASpxD,KACvB3E,EAAI+1D,EAASptB,GAAQ7sC,EAEzB,CACF,CACF,CAUA,MAAMk6D,GACJ17C,WAAAA,CAAYnZ,EAAM80D,GAChB,MAAM94B,EAAS1iB,KAAK0iB,OAAS,IAAI22B,GAAOmC,GAClCC,EAAgBR,GAAUv0D,GAC1Bg1D,EAAgBN,GAASK,GAC/B,GAAIC,EACF,MAAM,IAAIprC,MACR,4CAA+CorC,EAAcv6D,GAA7D,kDACgDu6D,EAAct0C,OAAOjmB,GAAK,oBAG9E,MAAMqD,EAAUk+B,EAAOiH,eAAejH,EAAOw3B,oBAAqBl6C,KAAKqH,cACvErH,KAAK+C,SAAW,IAAK2f,EAAO3f,UA5dhC,SAAyBqE,GACvB,OAAK6N,MAAiD,qBAApB0mC,iBAAmCv0C,aAAkBu0C,gBAC9E5I,GAEF4C,EACT,CAud4CiG,CAAgBH,IACxDz7C,KAAK+C,SAAS+vC,aAAapwB,GAC3B,MAAM7f,EAAU7C,KAAK+C,SAAS4vC,eAAe8I,EAAej3D,EAAQ+yB,aAC9DnQ,EAASvE,GAAWA,EAAQuE,OAC5BI,EAASJ,GAAUA,EAAOI,OAC1BpB,EAAQgB,GAAUA,EAAOhB,MAC/BpG,KAAK7e,GAAKD,IACV8e,KAAKyD,IAAMZ,EACX7C,KAAKoH,OAASA,EACdpH,KAAKoG,MAAQA,EACbpG,KAAKwH,OAASA,EACdxH,KAAK67C,SAAWr3D,EAChBwb,KAAK87C,aAAe97C,KAAKuX,YACzBvX,KAAK4oC,QAAU,GACf5oC,KAAK+7C,UAAY,GACjB/7C,KAAKmlB,aAAUt6B,EACfmV,KAAKkxC,MAAQ,GACblxC,KAAKiH,6BAA0Bpc,EAC/BmV,KAAK6rB,eAAYhhC,EACjBmV,KAAKgf,QAAU,GACfhf,KAAKg8C,gBAAanxD,EAClBmV,KAAKi8C,WAAa,CAAC,EACnBj8C,KAAKk8C,0BAAuBrxD,EAC5BmV,KAAKm8C,gBAAkB,GACvBn8C,KAAKwE,OAAS,CAAC,EACfxE,KAAKo8C,SAAW,IAAI3F,GACpBz2C,KAAKq2C,SAAW,CAAC,EACjBr2C,KAAKq8C,eAAiB,CAAC,EACvBr8C,KAAKs8C,UAAW,EAChBt8C,KAAKitB,yBAAsBpiC,EAC3BmV,KAAK8mB,cAAWj8B,EAChBmV,KAAKu8C,UDx5JT,SAAkB75D,EAAIo+B,GACpB,IAAI07B,EACJ,OAAO,WAAkB,QAAAjS,EAAA3/C,UAAAxH,OAANT,EAAI,IAAApB,MAAAgpD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJ7nD,EAAI6nD,GAAA5/C,UAAA4/C,GAOrB,OANI1pB,GACF27B,aAAaD,GACbA,EAAUE,WAAWh6D,EAAIo+B,EAAOn+B,IAEhCD,EAAGG,MAAMmd,KAAMrd,GAEVm+B,CACT,CACF,CC64JqB67B,EAAS74C,GAAQ9D,KAAKshB,OAAOxd,IAAOtf,EAAQo4D,aAAe,GAC5E58C,KAAKsuB,aAAe,GACpB6sB,GAAUn7C,KAAK7e,IAAM6e,KAChB6C,GAAYuE,GAIjBwW,GAAS4B,OAAOxf,KAAM,WAAY66C,IAClCj9B,GAAS4B,OAAOxf,KAAM,WAAY+6C,IAClC/6C,KAAK68C,cACD78C,KAAKs8C,UACPt8C,KAAKshB,UAPLjU,QAAQmrC,MAAM,oEASlB,CACA,eAAIjhC,GACF,MAAO/yB,SAAS,YAAC+yB,EAAW,oBAAEtT,GAAoB,MAAEmC,EAAK,OAAEoB,EAAM,aAAEs0C,GAAgB97C,KACnF,OAAK5e,EAAcm2B,GAGftT,GAAuB63C,EAClBA,EAEFt0C,EAASpB,EAAQoB,EAAS,KALxB+P,CAMX,CACA,QAAIzR,GACF,OAAO9F,KAAK0iB,OAAO5c,IACrB,CACA,QAAIA,CAAKA,GACP9F,KAAK0iB,OAAO5c,KAAOA,CACrB,CACA,WAAIthB,GACF,OAAOwb,KAAK67C,QACd,CACA,WAAIr3D,CAAQA,GACVwb,KAAK0iB,OAAOl+B,QAAUA,CACxB,CACAq4D,WAAAA,GASE,OARA78C,KAAK2iC,cAAc,cACf3iC,KAAKxb,QAAQ8f,WACftE,KAAKoiB,SAELlK,GAAYlY,KAAMA,KAAKxb,QAAQoe,kBAEjC5C,KAAK88C,aACL98C,KAAK2iC,cAAc,aACZ3iC,IACT,CACA25C,KAAAA,GAEE,OADAxyC,GAAYnH,KAAKoH,OAAQpH,KAAKyD,KACvBzD,IACT,CACA+f,IAAAA,GAEE,OADAnC,GAASmC,KAAK/f,MACPA,IACT,CACAoiB,MAAAA,CAAOhc,EAAOoB,GACPoW,GAASkB,QAAQ9e,MAGpBA,KAAK+8C,kBAAoB,CAAC32C,QAAOoB,UAFjCxH,KAAKg9C,QAAQ52C,EAAOoB,EAIxB,CACAw1C,OAAAA,CAAQ52C,EAAOoB,GACb,MAAMhjB,EAAUwb,KAAKxb,QACf4iB,EAASpH,KAAKoH,OACdmQ,EAAc/yB,EAAQyf,qBAAuBjE,KAAKuX,YAClD0lC,EAAUj9C,KAAK+C,SAASqU,eAAehQ,EAAQhB,EAAOoB,EAAQ+P,GAC9D2lC,EAAW14D,EAAQoe,kBAAoB5C,KAAK+C,SAASC,sBACrDc,EAAO9D,KAAKoG,MAAQ,SAAW,SACrCpG,KAAKoG,MAAQ62C,EAAQ72C,MACrBpG,KAAKwH,OAASy1C,EAAQz1C,OACtBxH,KAAK87C,aAAe97C,KAAKuX,YACpBW,GAAYlY,KAAMk9C,GAAU,KAGjCl9C,KAAK2iC,cAAc,SAAU,CAACl8C,KAAMw2D,IACpCx6D,EAAS+B,EAAQ24D,SAAU,CAACn9C,KAAMi9C,GAAUj9C,MACxCA,KAAKs8C,UACHt8C,KAAKu8C,UAAUz4C,IACjB9D,KAAKo9C,SAGX,CACAC,mBAAAA,GAGEv6D,EAFgBkd,KAAKxb,QACSggB,QAAU,CAAC,GACrB,CAAC84C,EAAarU,KAChCqU,EAAYn8D,GAAK8nD,CAAM,GAE3B,CACAsU,mBAAAA,GACE,MAAM/4D,EAAUwb,KAAKxb,QACfg5D,EAAYh5D,EAAQggB,OACpBA,EAASxE,KAAKwE,OACdi5C,EAAUh8D,OAAO0B,KAAKqhB,GAAQmb,QAAO,CAACp6B,EAAKpE,KAC/CoE,EAAIpE,IAAM,EACHoE,IACN,CAAC,GACJ,IAAIyG,EAAQ,GACRwxD,IACFxxD,EAAQA,EAAMqU,OACZ5e,OAAO0B,KAAKq6D,GAAWz5D,KAAK5C,IAC1B,MAAM82D,EAAeuF,EAAUr8D,GACzBwM,EAAOqqD,GAAc72D,EAAI82D,GACzByF,EAAoB,MAAT/vD,EACX0jC,EAAwB,MAAT1jC,EACrB,MAAO,CACLnJ,QAASyzD,EACT0F,UAAWD,EAAW,YAAcrsB,EAAe,SAAW,OAC9DusB,MAAOF,EAAW,eAAiBrsB,EAAe,WAAa,SAChE,MAIPvuC,EAAKkJ,GAAQtF,IACX,MAAMuxD,EAAevxD,EAAKlC,QACpBrD,EAAK82D,EAAa92D,GAClBwM,EAAOqqD,GAAc72D,EAAI82D,GACzB4F,EAAYz7D,EAAe61D,EAAaz2D,KAAMkF,EAAKk3D,YAC3B/yD,IAA1BotD,EAAalZ,UAA0B0b,GAAqBxC,EAAalZ,SAAUpxC,KAAU8sD,GAAqB/zD,EAAKi3D,aACzH1F,EAAalZ,SAAWr4C,EAAKi3D,WAE/BF,EAAQt8D,IAAM,EACd,IAAIojB,EAAQ,KACZ,GAAIpjB,KAAMqjB,GAAUA,EAAOrjB,GAAIK,OAASq8D,EACtCt5C,EAAQC,EAAOrjB,OACV,CAELojB,EAAQ,IADW2lC,GAASmB,SAASwS,GAC7B,CAAe,CACrB18D,KACAK,KAAMq8D,EACNp6C,IAAKzD,KAAKyD,IACVX,MAAO9C,OAETwE,EAAOD,EAAMpjB,IAAMojB,CACrB,CACAA,EAAM87B,KAAK4X,EAAczzD,EAAQ,IAEnC1B,EAAK26D,GAAS,CAACK,EAAY38D,KACpB28D,UACIt5C,EAAOrjB,EAChB,IAEF2B,EAAK0hB,GAASD,IACZgrC,GAAQ3sB,UAAU5iB,KAAMuE,EAAOA,EAAM/f,SACrC+qD,GAAQkC,OAAOzxC,KAAMuE,EAAM,GAE/B,CACAw5C,eAAAA,GACE,MAAMj6B,EAAW9jB,KAAK+7C,UAChBhuB,EAAU/tB,KAAK8F,KAAKnD,SAASvf,OAC7B0qC,EAAUhK,EAAS1gC,OAEzB,GADA0gC,EAASmL,MAAK,CAAC1oC,EAAGC,IAAMD,EAAE3C,MAAQ4C,EAAE5C,QAChCkqC,EAAUC,EAAS,CACrB,IAAK,IAAI9qC,EAAI8qC,EAAS9qC,EAAI6qC,IAAW7qC,EACnC+c,KAAKg+C,oBAAoB/6D,GAE3B6gC,EAASj4B,OAAOkiC,EAASD,EAAUC,EACrC,CACA/tB,KAAKm8C,gBAAkBr4B,EAASjiC,MAAM,GAAGotC,KAAKyrB,GAAc,QAAS,SACvE,CACAuD,2BAAAA,GACE,MAAOlC,UAAWj4B,EAAUhe,MAAM,SAACnD,IAAa3C,KAC5C8jB,EAAS1gC,OAASuf,EAASvf,eACtB4c,KAAKmlB,QAEdrB,EAASh4B,SAAQ,CAACqB,EAAMvJ,KACmC,IAArD+e,EAASiO,QAAOzrB,GAAKA,IAAMgI,EAAK8qC,WAAU70C,QAC5C4c,KAAKg+C,oBAAoBp6D,EAC3B,GAEJ,CACAs6D,wBAAAA,GACE,MAAMC,EAAiB,GACjBx7C,EAAW3C,KAAK8F,KAAKnD,SAC3B,IAAI1f,EAAGO,EAEP,IADAwc,KAAKi+C,8BACAh7D,EAAI,EAAGO,EAAOmf,EAASvf,OAAQH,EAAIO,EAAMP,IAAK,CACjD,MAAMokC,EAAU1kB,EAAS1f,GACzB,IAAIkK,EAAO6S,KAAKooB,eAAenlC,GAC/B,MAAMzB,EAAO6lC,EAAQ7lC,MAAQwe,KAAK0iB,OAAOlhC,KAWzC,GAVI2L,EAAK3L,MAAQ2L,EAAK3L,OAASA,IAC7Bwe,KAAKg+C,oBAAoB/6D,GACzBkK,EAAO6S,KAAKooB,eAAenlC,IAE7BkK,EAAK3L,KAAOA,EACZ2L,EAAKyW,UAAYyjB,EAAQzjB,WAAak0C,GAAat2D,EAAMwe,KAAKxb,SAC9D2I,EAAKixD,MAAQ/2B,EAAQ+2B,OAAS,EAC9BjxD,EAAKvJ,MAAQX,EACbkK,EAAKo+B,MAAQ,GAAKlE,EAAQkE,MAC1Bp+B,EAAKo1B,QAAUviB,KAAK80B,iBAAiB7xC,GACjCkK,EAAK83B,WACP93B,EAAK83B,WAAWmC,YAAYnkC,GAC5BkK,EAAK83B,WAAWgC,iBACX,CACL,MAAMo3B,EAAkBnU,GAASe,cAAczpD,IACzC,mBAAC0nC,EAAkB,gBAAEmD,GAAmB/pB,GAASK,SAASnhB,GAChEC,OAAOiN,OAAO2vD,EAAgB38D,UAAW,CACvC2qC,gBAAiB6d,GAASiB,WAAW9e,GACrCnD,mBAAoBA,GAAsBghB,GAASiB,WAAWjiB,KAEhE/7B,EAAK83B,WAAa,IAAIo5B,EAAgBr+C,KAAM/c,GAC5Ck7D,EAAet4D,KAAKsH,EAAK83B,WAC3B,CACF,CAEA,OADAjlB,KAAK+9C,kBACEI,CACT,CACAG,cAAAA,GACEx7D,EAAKkd,KAAK8F,KAAKnD,UAAU,CAAC0kB,EAAS1jC,KACjCqc,KAAKooB,eAAezkC,GAAcshC,WAAWsD,OAAO,GACnDvoB,KACL,CACAuoB,KAAAA,GACEvoB,KAAKs+C,iBACLt+C,KAAK2iC,cAAc,QACrB,CACArhB,MAAAA,CAAOxd,GACL,MAAM4e,EAAS1iB,KAAK0iB,OACpBA,EAAOpB,SACP,MAAM98B,EAAUwb,KAAK67C,SAAWn5B,EAAOiH,eAAejH,EAAOw3B,oBAAqBl6C,KAAKqH,cACjFk3C,EAAgBv+C,KAAKitB,qBAAuBzoC,EAAQge,UAK1D,GAJAxC,KAAKw+C,gBACLx+C,KAAKy+C,sBACLz+C,KAAK0+C,uBACL1+C,KAAKo8C,SAASnF,cACuD,IAAjEj3C,KAAK2iC,cAAc,eAAgB,CAAC7+B,OAAMkzC,YAAY,IACxD,OAEF,MAAMmH,EAAiBn+C,KAAKk+C,2BAC5Bl+C,KAAK2iC,cAAc,wBACnB,IAAIiP,EAAa,EACjB,IAAK,IAAI3uD,EAAI,EAAGO,EAAOwc,KAAK8F,KAAKnD,SAASvf,OAAQH,EAAIO,EAAMP,IAAK,CAC/D,MAAM,WAACgiC,GAAcjlB,KAAKooB,eAAenlC,GACnCslC,GAASg2B,IAAyD,IAAxCJ,EAAe75D,QAAQ2gC,GACvDA,EAAWkE,sBAAsBZ,GACjCqpB,EAAa/qD,KAAK6B,KAAKu8B,EAAWoG,iBAAkBumB,EACtD,CACAA,EAAa5xC,KAAK2+C,YAAcn6D,EAAQurD,OAAOyB,YAAcI,EAAa,EAC1E5xC,KAAK4+C,cAAchN,GACd2M,GACHz7D,EAAKq7D,GAAiBl5B,IACpBA,EAAWsD,OAAO,IAGtBvoB,KAAK6+C,gBAAgB/6C,GACrB9D,KAAK2iC,cAAc,cAAe,CAAC7+B,SACnC9D,KAAK4oC,QAAQ3Z,KAAKyrB,GAAc,IAAK,SACrC,MAAM,QAAC17B,EAAO,WAAEg9B,GAAch8C,KAC1Bg8C,EACFh8C,KAAK8+C,cAAc9C,GAAY,GACtBh9B,EAAQ57B,QACjB4c,KAAK++C,mBAAmB//B,EAASA,GAAS,GAE5Chf,KAAKo9C,QACP,CACAoB,aAAAA,GACE17D,EAAKkd,KAAKwE,QAASD,IACjBgrC,GAAQmC,UAAU1xC,KAAMuE,EAAM,IAEhCvE,KAAKq9C,sBACLr9C,KAAKu9C,qBACP,CACAkB,mBAAAA,GACE,MAAMj6D,EAAUwb,KAAKxb,QACfw6D,EAAiB,IAAI9yD,IAAIzK,OAAO0B,KAAK6c,KAAKi8C,aAC1CgD,EAAY,IAAI/yD,IAAI1H,EAAQ0e,QAC7B5c,EAAU04D,EAAgBC,MAAgBj/C,KAAKk8C,uBAAyB13D,EAAQ8f,aACnFtE,KAAKk/C,eACLl/C,KAAK88C,aAET,CACA4B,oBAAAA,GACE,MAAM,eAACrC,GAAkBr8C,KACnBm/C,EAAUn/C,KAAKo/C,0BAA4B,GACjD,IAAK,MAAM,OAACr9B,EAAM,MAAE73B,EAAK,MAAEqD,KAAU4xD,EAAS,CAE5C9D,GAAgBgB,EAAgBnyD,EADR,oBAAX63B,GAAgCx0B,EAAQA,EAEvD,CACF,CACA6xD,sBAAAA,GACE,MAAM9wB,EAAetuB,KAAKsuB,aAC1B,IAAKA,IAAiBA,EAAalrC,OACjC,OAEF4c,KAAKsuB,aAAe,GACpB,MAAM+wB,EAAer/C,KAAK8F,KAAKnD,SAASvf,OAClCk8D,EAAWna,GAAQ,IAAIj5C,IAC3BoiC,EACG1d,QAAO3e,GAAKA,EAAE,KAAOkzC,IACrBphD,KAAI,CAACkO,EAAGhP,IAAMA,EAAI,IAAMgP,EAAEpG,OAAO,GAAG0kB,KAAK,QAExCgvC,EAAYD,EAAQ,GAC1B,IAAK,IAAIr8D,EAAI,EAAGA,EAAIo8D,EAAcp8D,IAChC,IAAKqD,EAAUi5D,EAAWD,EAAQr8D,IAChC,OAGJ,OAAO1B,MAAM6K,KAAKmzD,GACfx7D,KAAIkO,GAAKA,EAAEvM,MAAM,OACjB3B,KAAIwC,IAAK,CAAEw7B,OAAQx7B,EAAE,GAAI2D,OAAQ3D,EAAE,GAAIgH,OAAQhH,EAAE,MACtD,CACAq4D,aAAAA,CAAchN,GACZ,IAA+D,IAA3D5xC,KAAK2iC,cAAc,eAAgB,CAACqU,YAAY,IAClD,OAEFzH,GAAQjuB,OAAOthB,KAAMA,KAAKoG,MAAOpG,KAAKwH,OAAQoqC,GAC9C,MAAM3oC,EAAOjJ,KAAK6rB,UACZ2zB,EAASv2C,EAAK7C,OAAS,GAAK6C,EAAKzB,QAAU,EACjDxH,KAAK4oC,QAAU,GACf9lD,EAAKkd,KAAKkxC,OAAQv6B,IACZ6oC,GAA2B,cAAjB7oC,EAAIooB,WAGdpoB,EAAIiM,WACNjM,EAAIiM,YAEN5iB,KAAK4oC,QAAQ/iD,QAAQ8wB,EAAIiyB,WAAU,GAClC5oC,MACHA,KAAK4oC,QAAQ98C,SAAQ,CAACpF,EAAM9C,KAC1B8C,EAAK+4D,KAAO77D,CAAK,IAEnBoc,KAAK2iC,cAAc,cACrB,CACAkc,eAAAA,CAAgB/6C,GACd,IAA6E,IAAzE9D,KAAK2iC,cAAc,uBAAwB,CAAC7+B,OAAMkzC,YAAY,IAAlE,CAGA,IAAK,IAAI/zD,EAAI,EAAGO,EAAOwc,KAAK8F,KAAKnD,SAASvf,OAAQH,EAAIO,IAAQP,EAC5D+c,KAAKooB,eAAenlC,GAAGgiC,WAAWrC,YAEpC,IAAK,IAAI3/B,EAAI,EAAGO,EAAOwc,KAAK8F,KAAKnD,SAASvf,OAAQH,EAAIO,IAAQP,EAC5D+c,KAAK0/C,eAAez8D,EAAGoD,EAAWyd,GAAQA,EAAK,CAACngB,aAAcV,IAAM6gB,GAEtE9D,KAAK2iC,cAAc,sBAAuB,CAAC7+B,QAP3C,CAQF,CACA47C,cAAAA,CAAe97D,EAAOkgB,GACpB,MAAM3W,EAAO6S,KAAKooB,eAAexkC,GAC3BjB,EAAO,CAACwK,OAAMvJ,QAAOkgB,OAAMkzC,YAAY,IACW,IAApDh3C,KAAK2iC,cAAc,sBAAuBhgD,KAG9CwK,EAAK83B,WAAWvG,QAAQ5a,GACxBnhB,EAAKq0D,YAAa,EAClBh3C,KAAK2iC,cAAc,qBAAsBhgD,GAC3C,CACAy6D,MAAAA,IACiE,IAA3Dp9C,KAAK2iC,cAAc,eAAgB,CAACqU,YAAY,MAGhDp5B,GAASj3B,IAAIqZ,MACXA,KAAKs8C,WAAa1+B,GAASkB,QAAQ9e,OACrC4d,GAAS1zB,MAAM8V,OAGjBA,KAAK+e,OACL87B,GAAqB,CAAC/3C,MAAO9C,QAEjC,CACA+e,IAAAA,GACE,IAAI97B,EACJ,GAAI+c,KAAK+8C,kBAAmB,CAC1B,MAAM,MAAC32C,EAAK,OAAEoB,GAAUxH,KAAK+8C,kBAC7B/8C,KAAKg9C,QAAQ52C,EAAOoB,GACpBxH,KAAK+8C,kBAAoB,IAC3B,CAEA,GADA/8C,KAAK25C,QACD35C,KAAKoG,OAAS,GAAKpG,KAAKwH,QAAU,EACpC,OAEF,IAA6D,IAAzDxH,KAAK2iC,cAAc,aAAc,CAACqU,YAAY,IAChD,OAEF,MAAM2I,EAAS3/C,KAAK4oC,QACpB,IAAK3lD,EAAI,EAAGA,EAAI08D,EAAOv8D,QAAUu8D,EAAO18D,GAAG6lD,GAAK,IAAK7lD,EACnD08D,EAAO18D,GAAG87B,KAAK/e,KAAK6rB,WAGtB,IADA7rB,KAAK4/C,gBACE38D,EAAI08D,EAAOv8D,SAAUH,EAC1B08D,EAAO18D,GAAG87B,KAAK/e,KAAK6rB,WAEtB7rB,KAAK2iC,cAAc,YACrB,CACA5e,sBAAAA,CAAuBF,GACrB,MAAMC,EAAW9jB,KAAKm8C,gBAChBlmC,EAAS,GACf,IAAIhzB,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAOsgC,EAAS1gC,OAAQH,EAAIO,IAAQP,EAAG,CACjD,MAAMkK,EAAO22B,EAAS7gC,GACjB4gC,IAAiB12B,EAAKo1B,SACzBtM,EAAOpwB,KAAKsH,EAEhB,CACA,OAAO8oB,CACT,CACA+yB,4BAAAA,GACE,OAAOhpC,KAAK+jB,wBAAuB,EACrC,CACA67B,aAAAA,GACE,IAAqE,IAAjE5/C,KAAK2iC,cAAc,qBAAsB,CAACqU,YAAY,IACxD,OAEF,MAAMlzB,EAAW9jB,KAAKgpC,+BACtB,IAAK,IAAI/lD,EAAI6gC,EAAS1gC,OAAS,EAAGH,GAAK,IAAKA,EAC1C+c,KAAK6/C,aAAa/7B,EAAS7gC,IAE7B+c,KAAK2iC,cAAc,oBACrB,CACAkd,YAAAA,CAAa1yD,GACX,MAAMsW,EAAMzD,KAAKyD,IACX+F,EAAOrc,EAAKs+B,MACZq0B,GAAWt2C,EAAKkiB,SAChBziB,EAAOjJ,KAAK6rB,UACZlpC,EAAO,CACXwK,OACAvJ,MAAOuJ,EAAKvJ,MACZozD,YAAY,IAEwC,IAAlDh3C,KAAK2iC,cAAc,oBAAqBhgD,KAGxCm9D,GACFv2C,GAAS9F,EAAK,CACZ0F,MAAoB,IAAdK,EAAKL,KAAiB,EAAIF,EAAKE,KAAOK,EAAKL,KACjDC,OAAsB,IAAfI,EAAKJ,MAAkBpJ,KAAKoG,MAAQ6C,EAAKG,MAAQI,EAAKJ,MAC7DC,KAAkB,IAAbG,EAAKH,IAAgB,EAAIJ,EAAKI,IAAMG,EAAKH,IAC9CC,QAAwB,IAAhBE,EAAKF,OAAmBtJ,KAAKwH,OAASyB,EAAKK,OAASE,EAAKF,SAGrEnc,EAAK83B,WAAWlG,OACZ+gC,GACFr2C,GAAWhG,GAEb9gB,EAAKq0D,YAAa,EAClBh3C,KAAK2iC,cAAc,mBAAoBhgD,GACzC,CACAorD,aAAAA,CAAc/kC,GACZ,OAAOD,GAAeC,EAAOhJ,KAAK6rB,UAAW7rB,KAAK2+C,YACpD,CACAoB,yBAAAA,CAA0B/2D,EAAG8a,EAAMtf,EAAS41C,GAC1C,MAAMrY,EAASgtB,GAAYC,MAAMlrC,GACjC,MAAsB,oBAAXie,EACFA,EAAO/hB,KAAMhX,EAAGxE,EAAS41C,GAE3B,EACT,CACAhS,cAAAA,CAAezkC,GACb,MAAM0jC,EAAUrnB,KAAK8F,KAAKnD,SAAShf,GAC7BmgC,EAAW9jB,KAAK+7C,UACtB,IAAI5uD,EAAO22B,EAASlT,QAAOzrB,GAAKA,GAAKA,EAAE8yC,WAAa5Q,IAASlI,MAkB7D,OAjBKhyB,IACHA,EAAO,CACL3L,KAAM,KACNskB,KAAM,GACNuhB,QAAS,KACTpC,WAAY,KACZ8F,OAAQ,KACRtD,QAAS,KACTE,QAAS,KACTy2B,MAAO/2B,GAAWA,EAAQ+2B,OAAS,EACnCx6D,MAAOD,EACPs0C,SAAU5Q,EACV35B,QAAS,GACTF,SAAS,GAEXs2B,EAASj+B,KAAKsH,IAETA,CACT,CACAka,UAAAA,GACE,OAAOrH,KAAK8mB,WAAa9mB,KAAK8mB,SAAWlZ,GAAc,KAAM,CAAC9K,MAAO9C,KAAMxe,KAAM,UACnF,CACAw3C,sBAAAA,GACE,OAAOh5B,KAAKgpC,+BAA+B5lD,MAC7C,CACA0xC,gBAAAA,CAAiBnxC,GACf,MAAM0jC,EAAUrnB,KAAK8F,KAAKnD,SAAShf,GACnC,IAAK0jC,EACH,OAAO,EAET,MAAMl6B,EAAO6S,KAAKooB,eAAezkC,GACjC,MAA8B,mBAAhBwJ,EAAK49B,QAAwB59B,EAAK49B,QAAU1D,EAAQ0D,MACpE,CACAi1B,oBAAAA,CAAqBr8D,EAAc4+B,GACpBviB,KAAKooB,eAAezkC,GAC5BonC,QAAUxI,CACjB,CACAqV,oBAAAA,CAAqBh0C,GACnBoc,KAAKq8C,eAAez4D,IAAUoc,KAAKq8C,eAAez4D,EACpD,CACAkvC,iBAAAA,CAAkBlvC,GAChB,OAAQoc,KAAKq8C,eAAez4D,EAC9B,CACAq8D,iBAAAA,CAAkBt8D,EAAcqoC,EAAWzJ,GACzC,MAAMze,EAAOye,EAAU,OAAS,OAC1Bp1B,EAAO6S,KAAKooB,eAAezkC,GAC3Bu6B,EAAQ/wB,EAAK83B,WAAW0H,wBAAmB9hC,EAAWiZ,GACxD1d,EAAQ4lC,IACV7+B,EAAK2Y,KAAKkmB,GAAWjB,QAAUxI,EAC/BviB,KAAKshB,WAELthB,KAAKggD,qBAAqBr8D,EAAc4+B,GACxCrE,EAAMoD,OAAOn0B,EAAM,CAACo1B,YACpBviB,KAAKshB,QAAQ7d,GAAQA,EAAI9f,eAAiBA,EAAemgB,OAAOjZ,IAEpE,CACA23B,IAAAA,CAAK7+B,EAAcqoC,GACjBhsB,KAAKigD,kBAAkBt8D,EAAcqoC,GAAW,EAClD,CACA3J,IAAAA,CAAK1+B,EAAcqoC,GACjBhsB,KAAKigD,kBAAkBt8D,EAAcqoC,GAAW,EAClD,CACAgyB,mBAAAA,CAAoBr6D,GAClB,MAAMwJ,EAAO6S,KAAK+7C,UAAUp4D,GACxBwJ,GAAQA,EAAK83B,YACf93B,EAAK83B,WAAWuD,kBAEXxoB,KAAK+7C,UAAUp4D,EACxB,CACAu8D,KAAAA,GACE,IAAIj9D,EAAGO,EAGP,IAFAwc,KAAK+f,OACLnC,GAASqC,OAAOjgB,MACX/c,EAAI,EAAGO,EAAOwc,KAAK8F,KAAKnD,SAASvf,OAAQH,EAAIO,IAAQP,EACxD+c,KAAKg+C,oBAAoB/6D,EAE7B,CACAk9D,OAAAA,GACEngD,KAAK2iC,cAAc,iBACnB,MAAM,OAACv7B,EAAM,IAAE3D,GAAOzD,KACtBA,KAAKkgD,QACLlgD,KAAK0iB,OAAOg3B,aACRtyC,IACFpH,KAAKk/C,eACL/3C,GAAYC,EAAQ3D,GACpBzD,KAAK+C,SAAS6vC,eAAenvC,GAC7BzD,KAAKoH,OAAS,KACdpH,KAAKyD,IAAM,MAEbzD,KAAK2iC,cAAc,kBACZwY,GAAUn7C,KAAK7e,IACtB6e,KAAK2iC,cAAc,eACrB,CACAyd,aAAAA,GACE,OAAOpgD,KAAKoH,OAAOi5C,aAAUz1D,UAC/B,CACAkyD,UAAAA,GACE98C,KAAKsgD,iBACDtgD,KAAKxb,QAAQ8f,WACftE,KAAKugD,uBAELvgD,KAAKs8C,UAAW,CAEpB,CACAgE,cAAAA,GACE,MAAM10D,EAAYoU,KAAKi8C,WACjBl5C,EAAW/C,KAAK+C,SAChBy9C,EAAOA,CAACh/D,EAAMiK,KAClBsX,EAAS6V,iBAAiB5Y,KAAMxe,EAAMiK,GACtCG,EAAUpK,GAAQiK,CAAQ,EAEtBA,EAAWA,CAACzC,EAAG7D,EAAGE,KACtB2D,EAAE6tB,QAAU1xB,EACZ6D,EAAE8tB,QAAUzxB,EACZ2a,KAAK8+C,cAAc91D,EAAE,EAEvBlG,EAAKkd,KAAKxb,QAAQ0e,QAAS1hB,GAASg/D,EAAKh/D,EAAMiK,IACjD,CACA80D,oBAAAA,GACOvgD,KAAKk8C,uBACRl8C,KAAKk8C,qBAAuB,CAAC,GAE/B,MAAMtwD,EAAYoU,KAAKk8C,qBACjBn5C,EAAW/C,KAAK+C,SAChBy9C,EAAOA,CAACh/D,EAAMiK,KAClBsX,EAAS6V,iBAAiB5Y,KAAMxe,EAAMiK,GACtCG,EAAUpK,GAAQiK,CAAQ,EAEtBg1D,EAAUA,CAACj/D,EAAMiK,KACjBG,EAAUpK,KACZuhB,EAAS8V,oBAAoB7Y,KAAMxe,EAAMiK,UAClCG,EAAUpK,GACnB,EAEIiK,EAAWA,CAAC2a,EAAOoB,KACnBxH,KAAKoH,QACPpH,KAAKoiB,OAAOhc,EAAOoB,EACrB,EAEF,IAAIk5C,EACJ,MAAMpE,EAAWA,KACfmE,EAAQ,SAAUnE,GAClBt8C,KAAKs8C,UAAW,EAChBt8C,KAAKoiB,SACLo+B,EAAK,SAAU/0D,GACf+0D,EAAK,SAAUE,EAAS,EAE1BA,EAAWA,KACT1gD,KAAKs8C,UAAW,EAChBmE,EAAQ,SAAUh1D,GAClBuU,KAAKkgD,QACLlgD,KAAKg9C,QAAQ,EAAG,GAChBwD,EAAK,SAAUlE,EAAS,EAEtBv5C,EAAS8vC,WAAW7yC,KAAKoH,QAC3Bk1C,IAEAoE,GAEJ,CACAxB,YAAAA,GACEp8D,EAAKkd,KAAKi8C,YAAY,CAACxwD,EAAUjK,KAC/Bwe,KAAK+C,SAAS8V,oBAAoB7Y,KAAMxe,EAAMiK,EAAS,IAEzDuU,KAAKi8C,WAAa,CAAC,EACnBn5D,EAAKkd,KAAKk8C,sBAAsB,CAACzwD,EAAUjK,KACzCwe,KAAK+C,SAAS8V,oBAAoB7Y,KAAMxe,EAAMiK,EAAS,IAEzDuU,KAAKk8C,0BAAuBrxD,CAC9B,CACA81D,gBAAAA,CAAiB30D,EAAO8X,EAAMm4B,GAC5B,MAAMltB,EAASktB,EAAU,MAAQ,SACjC,IAAI9uC,EAAMzG,EAAMzD,EAAGO,EAKnB,IAJa,YAATsgB,IACF3W,EAAO6S,KAAKooB,eAAep8B,EAAM,GAAGrI,cACpCwJ,EAAK83B,WAAW,IAAMlW,EAAS,wBAE5B9rB,EAAI,EAAGO,EAAOwI,EAAM5I,OAAQH,EAAIO,IAAQP,EAAG,CAC9CyD,EAAOsF,EAAM/I,GACb,MAAMgiC,EAAav+B,GAAQsZ,KAAKooB,eAAe1hC,EAAK/C,cAAcshC,WAC9DA,GACFA,EAAWlW,EAAS,cAAcroB,EAAKkvB,QAASlvB,EAAK/C,aAAc+C,EAAK9C,MAE5E,CACF,CACAg9D,iBAAAA,GACE,OAAO5gD,KAAKgf,SAAW,EACzB,CACA6hC,iBAAAA,CAAkBC,GAChB,MAAMC,EAAa/gD,KAAKgf,SAAW,GAC7BqC,EAASy/B,EAAe/8D,KAAIi9D,IAA2B,IAA1B,aAACr9D,EAAY,MAAEC,GAAMo9D,EACtD,MAAM7zD,EAAO6S,KAAKooB,eAAezkC,GACjC,IAAKwJ,EACH,MAAM,IAAImjB,MAAM,6BAA+B3sB,GAEjD,MAAO,CACLA,eACAiyB,QAASzoB,EAAK2Y,KAAKliB,GACnBA,QACD,KAEcP,EAAeg+B,EAAQ0/B,KAEtC/gD,KAAKgf,QAAUqC,EACfrhB,KAAKg8C,WAAa,KAClBh8C,KAAK++C,mBAAmB19B,EAAQ0/B,GAEpC,CACApe,aAAAA,CAAciU,EAAMj0D,EAAMiuB,GACxB,OAAO5Q,KAAKo8C,SAASzF,OAAO32C,KAAM42C,EAAMj0D,EAAMiuB,EAChD,CACAmuC,kBAAAA,CAAmB19B,EAAQ0/B,EAAYE,GACrC,MAAMC,EAAelhD,KAAKxb,QAAQ+e,MAC5Bk5B,EAAOA,CAACl2C,EAAGC,IAAMD,EAAEqqB,QAAOzrB,IAAMqB,EAAEmxD,MAAKtyD,GAAKF,EAAExB,eAAiB0B,EAAE1B,cAAgBwB,EAAEvB,QAAUyB,EAAEzB,UAC/Fu9D,EAAc1kB,EAAKskB,EAAY1/B,GAC/B+/B,EAAYH,EAAS5/B,EAASob,EAAKpb,EAAQ0/B,GAC7CI,EAAY/9D,QACd4c,KAAK2gD,iBAAiBQ,EAAaD,EAAap9C,MAAM,GAEpDs9C,EAAUh+D,QAAU89D,EAAap9C,MACnC9D,KAAK2gD,iBAAiBS,EAAWF,EAAap9C,MAAM,EAExD,CACAg7C,aAAAA,CAAc91D,EAAGi4D,GACf,MAAMt+D,EAAO,CACX88B,MAAOz2B,EACPi4D,SACAjK,YAAY,EACZqK,YAAarhD,KAAK+tC,cAAc/kD,IAE5Bs4D,EAAevK,IAAYA,EAAOvyD,QAAQ0e,QAAUlD,KAAKxb,QAAQ0e,QAAQsM,SAASxmB,EAAEwsD,OAAOh0D,MACjG,IAA6D,IAAzDwe,KAAK2iC,cAAc,cAAehgD,EAAM2+D,GAC1C,OAEF,MAAM7yD,EAAUuR,KAAKuhD,aAAav4D,EAAGi4D,EAAQt+D,EAAK0+D,aAMlD,OALA1+D,EAAKq0D,YAAa,EAClBh3C,KAAK2iC,cAAc,aAAchgD,EAAM2+D,IACnC7yD,GAAW9L,EAAK8L,UAClBuR,KAAKo9C,SAEAp9C,IACT,CACAuhD,YAAAA,CAAav4D,EAAGi4D,EAAQI,GACtB,MAAOriC,QAAS+hC,EAAa,GAAE,QAAEv8D,GAAWwb,KACtCo6B,EAAmB6mB,EACnB5/B,EAASrhB,KAAKwhD,mBAAmBx4D,EAAG+3D,EAAYM,EAAajnB,GAC7DqnB,EDh0LV,SAAuBz4D,GACrB,MAAkB,YAAXA,EAAExH,MAAiC,UAAXwH,EAAExH,MAA+B,gBAAXwH,EAAExH,IACzD,CC8zLoBkgE,CAAc14D,GACxB24D,EA7uBV,SAA4B34D,EAAG24D,EAAWN,EAAaI,GACrD,OAAKJ,GAA0B,aAAXr4D,EAAExH,KAGlBigE,EACKE,EAEF34D,EALE,IAMX,CAquBsB44D,CAAmB54D,EAAGgX,KAAKg8C,WAAYqF,EAAaI,GAClEJ,IACFrhD,KAAKg8C,WAAa,KAClBv5D,EAAS+B,EAAQ0f,QAAS,CAAClb,EAAGq4B,EAAQrhB,MAAOA,MACzCyhD,GACFh/D,EAAS+B,EAAQ2f,QAAS,CAACnb,EAAGq4B,EAAQrhB,MAAOA,OAGjD,MAAMvR,GAAWpL,EAAeg+B,EAAQ0/B,GAMxC,OALItyD,GAAWwyD,KACbjhD,KAAKgf,QAAUqC,EACfrhB,KAAK++C,mBAAmB19B,EAAQ0/B,EAAYE,IAE9CjhD,KAAKg8C,WAAa2F,EACXlzD,CACT,CACA+yD,kBAAAA,CAAmBx4D,EAAG+3D,EAAYM,EAAajnB,GAC7C,GAAe,aAAXpxC,EAAExH,KACJ,MAAO,GAET,IAAK6/D,EACH,OAAON,EAET,MAAMG,EAAelhD,KAAKxb,QAAQ+e,MAClC,OAAOvD,KAAK+/C,0BAA0B/2D,EAAGk4D,EAAap9C,KAAMo9C,EAAc9mB,EAC5E,EAEF,MAAMynB,GAAoBA,IAAM/+D,EAAKy4D,GAAMJ,WAAYr4C,GAAUA,EAAMs5C,SAASnF,eAC1E1xC,IAAa,EA0CnB,SAASu8C,GAAQr+C,EAAKmS,EAAS+f,GAC7B,MAAM,WAACD,EAAU,YAAEqsB,EAAW,EAAE58D,EAAC,EAAEE,EAAC,YAAEmvC,EAAW,YAAED,GAAe3e,EAClE,IAAIosC,EAAcD,EAAcvtB,EAChC/wB,EAAI2E,YACJ3E,EAAI6E,IAAInjB,EAAGE,EAAGmvC,EAAakB,EAAassB,EAAarsB,EAAWqsB,GAC5DztB,EAAcwtB,GAChBC,EAAcD,EAAcxtB,EAC5B9wB,EAAI6E,IAAInjB,EAAGE,EAAGkvC,EAAaoB,EAAWqsB,EAAatsB,EAAassB,GAAa,IAE7Ev+C,EAAI6E,IAAInjB,EAAGE,EAAG08D,EAAapsB,EAAWxuC,EAASuuC,EAAavuC,GAE9Dsc,EAAI8E,YACJ9E,EAAI+F,MACN,CAIA,SAASy4C,GAAoB35C,EAAKisB,EAAaC,EAAa0tB,GAC1D,MAAM98D,EAHCunB,GAGmBrE,EAAI9jB,QAAQ29D,aAHN,CAAC,aAAc,WAAY,aAAc,aAIzE,MAAMC,GAAiB5tB,EAAcD,GAAe,EAC9C8tB,EAAax7D,KAAK4B,IAAI25D,EAAeF,EAAa3tB,EAAc,GAChE+tB,EAAqBnhD,IACzB,MAAMohD,GAAiB/tB,EAAc3tC,KAAK4B,IAAI25D,EAAejhD,IAAQ+gD,EAAa,EAClF,OAAOx3D,EAAYyW,EAAK,EAAGta,KAAK4B,IAAI25D,EAAeG,GAAe,EAEpE,MAAO,CACLC,WAAYF,EAAkBl9D,EAAEo9D,YAChCC,SAAUH,EAAkBl9D,EAAEq9D,UAC9BC,WAAYh4D,EAAYtF,EAAEs9D,WAAY,EAAGL,GACzCM,SAAUj4D,EAAYtF,EAAEu9D,SAAU,EAAGN,GAEzC,CACA,SAASO,GAAWpwD,EAAGqwD,EAAO19D,EAAGE,GAC/B,MAAO,CACLF,EAAGA,EAAIqN,EAAI3L,KAAKkJ,IAAI8yD,GACpBx9D,EAAGA,EAAImN,EAAI3L,KAAKiI,IAAI+zD,GAExB,CACA,SAASC,GAAQr/C,EAAKmS,EAASme,EAAQiB,EAAS7qC,EAAKwvC,GACnD,MAAM,EAACx0C,EAAC,EAAEE,EAAGqwC,WAAYxrC,EAAK,YAAE63D,EAAaxtB,YAAawuB,GAAUntC,EAC9D4e,EAAc3tC,KAAK6B,IAAIktB,EAAQ4e,YAAcQ,EAAUjB,EAASguB,EAAa,GAC7ExtB,EAAcwuB,EAAS,EAAIA,EAAS/tB,EAAUjB,EAASguB,EAAc,EAC3E,IAAIiB,EAAgB,EACpB,MAAMrwD,EAAQxI,EAAMD,EACpB,GAAI8qC,EAAS,CACX,MAEMiuB,IAFuBF,EAAS,EAAIA,EAAS/tB,EAAU,IAChCR,EAAc,EAAIA,EAAcQ,EAAU,IACI,EAE3EguB,GAAiBrwD,GAD4B,IAAvBswD,EAA4BtwD,EAAQswD,GAAuBA,EAAqBjuB,GAAWriC,IACvE,CAC5C,CACA,MACMuwD,GAAevwD,EADR9L,KAAK6B,IAAI,KAAOiK,EAAQ6hC,EAAcT,EAASntC,GAAM4tC,GAC7B,EAC/BkB,EAAaxrC,EAAQg5D,EAAcF,EACnCrtB,EAAWxrC,EAAM+4D,EAAcF,GAC/B,WAACR,EAAU,SAAEC,EAAQ,WAAEC,EAAU,SAAEC,GAAYV,GAAoBrsC,EAAS2e,EAAaC,EAAamB,EAAWD,GACjHytB,EAA2B3uB,EAAcguB,EACzCY,EAAyB5uB,EAAciuB,EACvCY,EAA0B3tB,EAAa8sB,EAAaW,EACpDG,EAAwB3tB,EAAW8sB,EAAWW,EAC9CG,EAA2BhvB,EAAcmuB,EACzCc,EAAyBjvB,EAAcouB,EACvCc,EAA0B/tB,EAAagtB,EAAaa,EACpDG,EAAwB/tB,EAAWgtB,EAAWa,EAEpD,GADA//C,EAAI2E,YACAuxB,EAAU,CAEZ,GADAl2B,EAAI6E,IAAInjB,EAAGE,EAAGmvC,EAAa6uB,EAAyBC,GAChDb,EAAW,EAAG,CAChB,MAAMkB,EAAUf,GAAWQ,EAAwBE,EAAuBn+D,EAAGE,GAC7Eoe,EAAI6E,IAAIq7C,EAAQx+D,EAAGw+D,EAAQt+D,EAAGo9D,EAAUa,EAAuB3tB,EAAWxuC,EAC5E,CACA,MAAMy8D,EAAKhB,GAAWY,EAAwB7tB,EAAUxwC,EAAGE,GAE3D,GADAoe,EAAIgF,OAAOm7C,EAAGz+D,EAAGy+D,EAAGv+D,GAChBs9D,EAAW,EAAG,CAChB,MAAMgB,EAAUf,GAAWY,EAAwBE,EAAuBv+D,EAAGE,GAC7Eoe,EAAI6E,IAAIq7C,EAAQx+D,EAAGw+D,EAAQt+D,EAAGs9D,EAAUhtB,EAAWxuC,EAASu8D,EAAwB78D,KAAKD,GAC3F,CAEA,GADA6c,EAAI6E,IAAInjB,EAAGE,EAAGkvC,EAAaoB,EAAYgtB,EAAWpuB,EAAcmB,EAAcgtB,EAAanuB,GAAc,GACrGmuB,EAAa,EAAG,CAClB,MAAMiB,EAAUf,GAAWW,EAA0BE,EAAyBt+D,EAAGE,GACjFoe,EAAI6E,IAAIq7C,EAAQx+D,EAAGw+D,EAAQt+D,EAAGq9D,EAAYe,EAA0B58D,KAAKD,GAAI8uC,EAAavuC,EAC5F,CACA,MAAM08D,EAAKjB,GAAWO,EAA0BztB,EAAYvwC,EAAGE,GAE/D,GADAoe,EAAIgF,OAAOo7C,EAAG1+D,EAAG0+D,EAAGx+D,GAChBm9D,EAAa,EAAG,CAClB,MAAMmB,EAAUf,GAAWO,EAA0BE,EAAyBl+D,EAAGE,GACjFoe,EAAI6E,IAAIq7C,EAAQx+D,EAAGw+D,EAAQt+D,EAAGm9D,EAAY9sB,EAAavuC,EAASk8D,EAClE,CACF,KAAO,CACL5/C,EAAI+E,OAAOrjB,EAAGE,GACd,MAAMy+D,EAAcj9D,KAAKkJ,IAAIszD,GAA2B7uB,EAAcrvC,EAChE4+D,EAAcl9D,KAAKiI,IAAIu0D,GAA2B7uB,EAAcnvC,EACtEoe,EAAIgF,OAAOq7C,EAAaC,GACxB,MAAMC,EAAYn9D,KAAKkJ,IAAIuzD,GAAyB9uB,EAAcrvC,EAC5D8+D,EAAYp9D,KAAKiI,IAAIw0D,GAAyB9uB,EAAcnvC,EAClEoe,EAAIgF,OAAOu7C,EAAWC,EACxB,CACAxgD,EAAI8E,WACN,CAuCA,SAAS20B,GAAWz5B,EAAKmS,EAASme,EAAQiB,EAASW,EAAUgE,GAC3D,MAAM,QAACn1C,GAAWoxB,GACZ,YAAC/M,EAAW,gBAAE8U,GAAmBn5B,EACjC0/D,EAAgC,UAAxB1/D,EAAQ6yC,YACjBxuB,IAGDq7C,GACFzgD,EAAIwH,UAA0B,EAAdpC,EAChBpF,EAAI0gD,SAAWxmC,GAAmB,UAElCla,EAAIwH,UAAYpC,EAChBpF,EAAI0gD,SAAWxmC,GAAmB,SAEhC/H,EAAQwuC,aAjCd,SAA+B3gD,EAAKmS,EAASsuC,GAC3C,MAAM,EAAC/+D,EAAC,EAAEE,EAAC,WAAEqwC,EAAU,YAAEqsB,EAAW,YAAEqC,GAAexuC,EAC/C4e,EAAc3tC,KAAK6B,IAAIktB,EAAQ4e,YAAcutB,EAAa,GAC1DxtB,EAAc3e,EAAQ2e,YAAcwtB,EAC1C,IAAI9+D,EAMJ,IALIihE,GACFpC,GAAQr+C,EAAKmS,EAAS8f,EAAa5uC,GAErC2c,EAAI2E,YACJ3E,EAAI6E,IAAInjB,EAAGE,EAAGkvC,EAAamB,EAAa5uC,EAAK4uC,GAAY,GACpDzyC,EAAI,EAAGA,EAAImhE,IAAenhE,EAC7BwgB,EAAIqF,SAIN,IAFArF,EAAI2E,YACJ3E,EAAI6E,IAAInjB,EAAGE,EAAGmvC,EAAakB,EAAYA,EAAa5uC,GAC/C7D,EAAI,EAAGA,EAAImhE,IAAenhE,EAC7BwgB,EAAIqF,QAER,CAgBIu7C,CAAsB5gD,EAAKmS,EAASsuC,GAElCA,GACFpC,GAAQr+C,EAAKmS,EAAS+f,GAExBmtB,GAAQr/C,EAAKmS,EAASme,EAAQiB,EAASW,EAAUgE,GACjDl2B,EAAIqF,SACN,CAxMArnB,OAAO4jB,iBAAiBk2C,GAAO,CAC7Bj5C,SAAU,CACRiD,cACAlkB,MAAOihB,IAET64C,UAAW,CACT51C,cACAlkB,MAAO85D,IAETp5C,UAAW,CACTwD,cACAlkB,MAAO0gB,IAETmoC,SAAU,CACR3kC,cACAlkB,MAAO6oD,IAEToa,QAAS,CACP/+C,cACAlkB,MAl1BU,SAo1BZ+5D,SAAU,CACR71C,cACAlkB,MAAO+5D,IAET7R,SAAU,CACRhkC,cACAlkB,MAAO,WACL6oD,GAAS/9C,OAAIvB,WACbi3D,IACF,GAEF5X,WAAY,CACV1kC,cACAlkB,MAAO,WACL6oD,GAASjqB,UAAOr1B,WAChBi3D,IACF,KAoKJ,MAAM0C,WAAmBrqB,GACvBr6B,WAAAA,CAAY2gB,GACV0Q,QACAlxB,KAAKxb,aAAUqG,EACfmV,KAAK40B,mBAAgB/pC,EACrBmV,KAAK01B,gBAAa7qC,EAClBmV,KAAK21B,cAAW9qC,EAChBmV,KAAKu0B,iBAAc1pC,EACnBmV,KAAKw0B,iBAAc3pC,EACnBmV,KAAK+hD,YAAc,EACnB/hD,KAAKokD,YAAc,EACf5jC,GACF/+B,OAAOiN,OAAOsR,KAAMwgB,EAExB,CACAwtB,OAAAA,CAAQwW,EAAQC,EAAQrqB,GACtB,MAAMpxB,EAAQhJ,KAAKq6B,SAAS,CAAC,IAAK,KAAMD,IAClC,MAAC3wC,EAAK,SAAEE,GAAYT,EAAkB8f,EAAO,CAAC7jB,EAAGq/D,EAAQn/D,EAAGo/D,KAC5D,WAAC/uB,EAAU,SAAEC,EAAQ,YAAEpB,EAAW,YAAEC,EAAW,cAAEI,GAAiB50B,KAAKq6B,SAAS,CACpF,aACA,WACA,cACA,cACA,iBACCD,GACGsqB,EAAU1kD,KAAKxb,QAAQwwC,QAAU,EAEjC2vB,EADiBviE,EAAewyC,EAAee,EAAWD,IACxB5uC,GAAOmD,EAAcR,EAAOisC,EAAYC,GAC1EivB,EAAej6D,EAAWhB,EAAU4qC,EAAcmwB,EAASlwB,EAAckwB,GAC/E,OAAQC,GAAiBC,CAC3B,CACAnW,cAAAA,CAAerU,GACb,MAAM,EAACj1C,EAAC,EAAEE,EAAC,WAAEqwC,EAAU,SAAEC,EAAQ,YAAEpB,EAAW,YAAEC,GAAex0B,KAAKq6B,SAAS,CAC3E,IACA,IACA,aACA,WACA,cACA,cACA,iBACCD,IACG,OAACrG,EAAM,QAAEiB,GAAWh1B,KAAKxb,QACzBqgE,GAAanvB,EAAaC,GAAY,EACtCmvB,GAAcvwB,EAAcC,EAAcQ,EAAUjB,GAAU,EACpE,MAAO,CACL5uC,EAAGA,EAAI0B,KAAKkJ,IAAI80D,GAAaC,EAC7Bz/D,EAAGA,EAAIwB,KAAKiI,IAAI+1D,GAAaC,EAEjC,CACA3qB,eAAAA,CAAgBC,GACd,OAAOp6B,KAAKyuC,eAAerU,EAC7B,CACArb,IAAAA,CAAKtb,GACH,MAAM,QAACjf,EAAO,cAAEowC,GAAiB50B,KAC3B+zB,GAAUvvC,EAAQuvC,QAAU,GAAK,EACjCiB,GAAWxwC,EAAQwwC,SAAW,GAAK,EACnC2E,EAAWn1C,EAAQm1C,SAGzB,GAFA35B,KAAK+hD,YAAuC,UAAxBv9D,EAAQ6yC,YAA2B,IAAO,EAC9Dr3B,KAAKokD,YAAcxvB,EAAgB9tC,EAAMD,KAAKkB,MAAM6sC,EAAgB9tC,GAAO,EACrD,IAAlB8tC,GAAuB50B,KAAKu0B,YAAc,GAAKv0B,KAAKw0B,YAAc,EACpE,OAEF/wB,EAAIgD,OACJ,IAAIs+C,EAAe,EACnB,GAAIhxB,EAAQ,CACVgxB,EAAehxB,EAAS,EACxB,MAAM8wB,GAAa7kD,KAAK01B,WAAa11B,KAAK21B,UAAY,EACtDlyB,EAAIyE,UAAUrhB,KAAKkJ,IAAI80D,GAAaE,EAAcl+D,KAAKiI,IAAI+1D,GAAaE,GACpE/kD,KAAK40B,eAAiBhuC,IACxBm+D,EAAehxB,EAEnB,CACAtwB,EAAImH,UAAYpmB,EAAQie,gBACxBgB,EAAIuH,YAAcxmB,EAAQke,YAC1B,MAAMizB,EAvIV,SAAiBlyB,EAAKmS,EAASme,EAAQiB,EAAS2E,GAC9C,MAAM,YAACyqB,EAAW,WAAE1uB,EAAU,cAAEd,GAAiBhf,EACjD,IAAI+f,EAAW/f,EAAQ+f,SACvB,GAAIyuB,EAAa,CACftB,GAAQr/C,EAAKmS,EAASme,EAAQiB,EAASU,EAAa5uC,EAAK6yC,GACzD,IAAK,IAAI12C,EAAI,EAAGA,EAAImhE,IAAenhE,EACjCwgB,EAAImF,OAEDzgB,MAAMysC,KACTe,EAAWD,EAAad,EAAgB9tC,EACpC8tC,EAAgB9tC,IAAQ,IAC1B6uC,GAAY7uC,GAGlB,CAGA,OAFAg8D,GAAQr/C,EAAKmS,EAASme,EAAQiB,EAASW,EAAUgE,GACjDl2B,EAAImF,OACG+sB,CACT,CAqHqBqvB,CAAQvhD,EAAKzD,KAAM+kD,EAAc/vB,EAAS2E,GAC3DuD,GAAWz5B,EAAKzD,KAAM+kD,EAAc/vB,EAASW,EAAUgE,GACvDl2B,EAAIoD,SACN,EAkBF,SAASo+C,GAASxhD,EAAKjf,GAA0B,IAAjB6e,EAAKzY,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAGpG,EACtCif,EAAIyhD,QAAU9iE,EAAeihB,EAAMma,eAAgBh5B,EAAQg5B,gBAC3D/Z,EAAI2kC,YAAYhmD,EAAeihB,EAAMoa,WAAYj5B,EAAQi5B,aACzDha,EAAI4kC,eAAiBjmD,EAAeihB,EAAMqa,iBAAkBl5B,EAAQk5B,kBACpEja,EAAI0gD,SAAW/hE,EAAeihB,EAAMsa,gBAAiBn5B,EAAQm5B,iBAC7Dla,EAAIwH,UAAY7oB,EAAeihB,EAAMwF,YAAarkB,EAAQqkB,aAC1DpF,EAAIuH,YAAc5oB,EAAeihB,EAAMX,YAAale,EAAQke,YAC9D,CACA,SAAS+F,GAAOhF,EAAKkG,EAAU3lB,GAC7Byf,EAAIgF,OAAOzkB,EAAOmB,EAAGnB,EAAOqB,EAC9B,CAUA,SAAS8/D,GAAS/3D,EAAQuuB,GAAsB,IAAb6zB,EAAM5kD,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,MAAM2C,EAAQH,EAAOhK,QACd8G,MAAOk7D,EAAc,EAAGj7D,IAAKk7D,EAAY93D,EAAQ,GAAKiiD,GACtDtlD,MAAOo7D,EAAcn7D,IAAKo7D,GAAc5pC,EACzCzxB,EAAQrD,KAAK6B,IAAI08D,EAAaE,GAC9Bn7D,EAAMtD,KAAK4B,IAAI48D,EAAWE,GAC1BC,EAAUJ,EAAcE,GAAgBD,EAAYC,GAAgBF,EAAcG,GAAcF,EAAYE,EAClH,MAAO,CACLh4D,QACArD,QACAqqB,KAAMoH,EAAQpH,KACd/wB,KAAM2G,EAAMD,IAAUs7D,EAAUj4D,EAAQpD,EAAMD,EAAQC,EAAMD,EAEhE,CACA,SAASu7D,GAAYhiD,EAAKiH,EAAMiR,EAAS6zB,GACvC,MAAM,OAACpiD,EAAM,QAAE5I,GAAWkmB,GACpB,MAACnd,EAAK,MAAErD,EAAK,KAAEqqB,EAAI,KAAE/wB,GAAQ2hE,GAAS/3D,EAAQuuB,EAAS6zB,GACvDkW,EA1BR,SAAuBlhE,GACrB,OAAIA,EAAQmhE,QACHj8C,GAELllB,EAAQowB,SAA8C,aAAnCpwB,EAAQkwB,uBACtB5K,GAEFrB,EACT,CAkBqBm9C,CAAcphE,GACjC,IACIvB,EAAG+lB,EAAO2L,GADV,KAACuZ,GAAO,EAAI,QAAElrC,GAAWwsD,GAAU,CAAC,EAExC,IAAKvsD,EAAI,EAAGA,GAAKO,IAAQP,EACvB+lB,EAAQ5b,GAAQlD,GAASlH,EAAUQ,EAAOP,EAAIA,IAAMsK,GAChDyb,EAAMoJ,OAEC8b,GACTzqB,EAAI+E,OAAOQ,EAAM7jB,EAAG6jB,EAAM3jB,GAC1B6oC,GAAO,GAEPw3B,EAAWjiD,EAAKkR,EAAM3L,EAAOhmB,EAASwB,EAAQmhE,SAEhDhxC,EAAO3L,GAMT,OAJIuL,IACFvL,EAAQ5b,GAAQlD,GAASlH,EAAUQ,EAAO,IAAM+J,GAChDm4D,EAAWjiD,EAAKkR,EAAM3L,EAAOhmB,EAASwB,EAAQmhE,YAEvCpxC,CACX,CACA,SAASsxC,GAAgBpiD,EAAKiH,EAAMiR,EAAS6zB,GAC3C,MAAMpiD,EAASsd,EAAKtd,QACd,MAACG,EAAK,MAAErD,EAAK,KAAE1G,GAAQ2hE,GAAS/3D,EAAQuuB,EAAS6zB,IACjD,KAACthB,GAAO,EAAI,QAAElrC,GAAWwsD,GAAU,CAAC,EAC1C,IAEIvsD,EAAG+lB,EAAO88C,EAAOzvB,EAAMF,EAAM4vB,EAF7BC,EAAO,EACPC,EAAS,EAEb,MAAMC,EAActiE,IAAWsG,GAASlH,EAAUQ,EAAOI,EAAQA,IAAU2J,EACrE44D,EAAQA,KACR9vB,IAASF,IACX1yB,EAAIgF,OAAOu9C,EAAM7vB,GACjB1yB,EAAIgF,OAAOu9C,EAAM3vB,GACjB5yB,EAAIgF,OAAOu9C,EAAMD,GACnB,EAMF,IAJI73B,IACFllB,EAAQ5b,EAAO84D,EAAW,IAC1BziD,EAAI+E,OAAOQ,EAAM7jB,EAAG6jB,EAAM3jB,IAEvBpC,EAAI,EAAGA,GAAKO,IAAQP,EAAG,CAE1B,GADA+lB,EAAQ5b,EAAO84D,EAAWjjE,IACtB+lB,EAAMoJ,KACR,SAEF,MAAMjtB,EAAI6jB,EAAM7jB,EACVE,EAAI2jB,EAAM3jB,EACV+gE,EAAa,EAAJjhE,EACXihE,IAAWN,GACTzgE,EAAIgxC,EACNA,EAAOhxC,EACEA,EAAI8wC,IACbA,EAAO9wC,GAET2gE,GAAQC,EAASD,EAAO7gE,KAAO8gE,IAE/BE,IACA1iD,EAAIgF,OAAOtjB,EAAGE,GACdygE,EAAQM,EACRH,EAAS,EACT5vB,EAAOF,EAAO9wC,GAEhB0gE,EAAQ1gE,CACV,CACA8gE,GACF,CACA,SAASE,GAAkB37C,GACzB,MAAMJ,EAAOI,EAAKlmB,QACZi5B,EAAanT,EAAKmT,YAAcnT,EAAKmT,WAAWr6B,OAEtD,OADqBsnB,EAAKwtB,aAAextB,EAAKqW,QAAUzW,EAAKsK,SAA2C,aAAhCtK,EAAKoK,yBAA0CpK,EAAKq7C,UAAYloC,EACnHooC,GAAkBJ,EACzC,CA5HAlB,GAAWpjE,GAAK,MAChBojE,GAAWjiD,SAAW,CACpB+0B,YAAa,SACb30B,YAAa,OACbib,qBAAiB9yB,EACjBs3D,aAAc,EACdt5C,YAAa,EACbkrB,OAAQ,EACRiB,QAAS,EACTvrC,WAAOoB,EACP8uC,UAAU,GAEZ4qB,GAAW/pB,cAAgB,CACzB/3B,gBAAiB,mBAgJnB,MAAM6jD,GAA8B,oBAAXC,OACzB,SAASxnC,GAAKtb,EAAKiH,EAAMxgB,EAAOqD,GAC1B+4D,KAAc57C,EAAKlmB,QAAQm3B,QAzBjC,SAA6BlY,EAAKiH,EAAMxgB,EAAOqD,GAC7C,IAAIi5D,EAAO97C,EAAK+7C,MACXD,IACHA,EAAO97C,EAAK+7C,MAAQ,IAAIF,OACpB77C,EAAK87C,KAAKA,EAAMt8D,EAAOqD,IACzBi5D,EAAKj+C,aAGT08C,GAASxhD,EAAKiH,EAAKlmB,SACnBif,EAAIqF,OAAO09C,EACb,CAgBIE,CAAoBjjD,EAAKiH,EAAMxgB,EAAOqD,GAf1C,SAA0BkW,EAAKiH,EAAMxgB,EAAOqD,GAC1C,MAAM,SAAC+uB,EAAQ,QAAE93B,GAAWkmB,EACtBi8C,EAAgBN,GAAkB37C,GACxC,IAAK,MAAMiR,KAAWW,EACpB2oC,GAASxhD,EAAKjf,EAASm3B,EAAQtY,OAC/BI,EAAI2E,YACAu+C,EAAcljD,EAAKiH,EAAMiR,EAAS,CAACzxB,QAAOC,IAAKD,EAAQqD,EAAQ,KACjEkW,EAAI8E,YAEN9E,EAAIqF,QAER,CAMI89C,CAAiBnjD,EAAKiH,EAAMxgB,EAAOqD,EAEvC,CACA,MAAMs5D,WAAoB3sB,GACxBr6B,WAAAA,CAAY2gB,GACV0Q,QACAlxB,KAAKm4B,UAAW,EAChBn4B,KAAKxb,aAAUqG,EACfmV,KAAK2c,YAAS9xB,EACdmV,KAAK+gB,WAAQl2B,EACbmV,KAAK+5B,eAAYlvC,EACjBmV,KAAKymD,WAAQ57D,EACbmV,KAAK8mD,aAAUj8D,EACfmV,KAAK+mD,eAAYl8D,EACjBmV,KAAKk4B,YAAa,EAClBl4B,KAAKgnD,gBAAiB,EACtBhnD,KAAK8c,mBAAgBjyB,EACjB21B,GACF/+B,OAAOiN,OAAOsR,KAAMwgB,EAExB,CACAkY,mBAAAA,CAAoB7M,EAAWjoB,GAC7B,MAAMpf,EAAUwb,KAAKxb,QACrB,IAAKA,EAAQowB,SAA8C,aAAnCpwB,EAAQkwB,0BAA2ClwB,EAAQmhE,UAAY3lD,KAAKgnD,eAAgB,CAClH,MAAMzyC,EAAO/vB,EAAQiwB,SAAWzU,KAAK+gB,MAAQ/gB,KAAK+5B,UAClDzlB,GAA2BtU,KAAK8mD,QAAStiE,EAASqnC,EAAWtX,EAAM3Q,GACnE5D,KAAKgnD,gBAAiB,CACxB,CACF,CACA,UAAI55D,CAAOA,GACT4S,KAAK8mD,QAAU15D,SACR4S,KAAK+mD,iBACL/mD,KAAKymD,MACZzmD,KAAKgnD,gBAAiB,CACxB,CACA,UAAI55D,GACF,OAAO4S,KAAK8mD,OACd,CACA,YAAIxqC,GACF,OAAOtc,KAAK+mD,YAAc/mD,KAAK+mD,UD/iInC,SAA0Br8C,EAAM+R,GAC9B,MAAMrvB,EAASsd,EAAKtd,OACdqnB,EAAW/J,EAAKlmB,QAAQiwB,SACxBlnB,EAAQH,EAAOhK,OACrB,IAAKmK,EACH,MAAO,GAET,MAAMgnB,IAAS7J,EAAKqW,OACd,MAAC72B,EAAK,IAAEC,GAxDhB,SAAyBiD,EAAQG,EAAOgnB,EAAME,GAC5C,IAAIvqB,EAAQ,EACRC,EAAMoD,EAAQ,EAClB,GAAIgnB,IAASE,EACX,KAAOvqB,EAAQqD,IAAUH,EAAOlD,GAAOkoB,MACrCloB,IAGJ,KAAOA,EAAQqD,GAASH,EAAOlD,GAAOkoB,MACpCloB,IAMF,IAJAA,GAASqD,EACLgnB,IACFpqB,GAAOD,GAEFC,EAAMD,GAASkD,EAAOjD,EAAMoD,GAAO6kB,MACxCjoB,IAGF,OADAA,GAAOoD,EACA,CAACrD,QAAOC,MACjB,CAoCuB88D,CAAgB75D,EAAQG,EAAOgnB,EAAME,GAC1D,OACS+H,GAAc9R,GADN,IAAb+J,EACyB,CAAC,CAACvqB,QAAOC,MAAKoqB,SArC7C,SAAuBnnB,EAAQlD,EAAOxB,EAAK6rB,GACzC,MAAMhnB,EAAQH,EAAOhK,OACf6yB,EAAS,GACf,IAEI9rB,EAFAkB,EAAOnB,EACPyqB,EAAOvnB,EAAOlD,GAElB,IAAKC,EAAMD,EAAQ,EAAGC,GAAOzB,IAAOyB,EAAK,CACvC,MAAM01B,EAAMzyB,EAAOjD,EAAMoD,GACrBsyB,EAAIzN,MAAQyN,EAAIE,KACbpL,EAAKvC,OACRmC,GAAO,EACP0B,EAAOpwB,KAAK,CAACqE,MAAOA,EAAQqD,EAAOpD,KAAMA,EAAM,GAAKoD,EAAOgnB,SAC3DrqB,EAAQmB,EAAOw0B,EAAIE,KAAO51B,EAAM,OAGlCkB,EAAOlB,EACHwqB,EAAKvC,OACPloB,EAAQC,IAGZwqB,EAAOkL,CACT,CAIA,OAHa,OAATx0B,GACF4qB,EAAOpwB,KAAK,CAACqE,MAAOA,EAAQqD,EAAOpD,IAAKkB,EAAOkC,EAAOgnB,SAEjD0B,CACT,CAe6BixC,CAAc95D,EAAQlD,EAFrCC,EAAMD,EAAQC,EAAMoD,EAAQpD,IACjBugB,EAAKqvB,WAAuB,IAAV7vC,GAAeC,IAAQoD,EAAQ,GAHrBH,EAAQqvB,EAK7D,CCgiI+C0qC,CAAiBnnD,KAAMA,KAAKxb,QAAQm3B,SACjF,CACAygB,KAAAA,GACE,MAAM9f,EAAWtc,KAAKsc,SAChBlvB,EAAS4S,KAAK5S,OACpB,OAAOkvB,EAASl5B,QAAUgK,EAAOkvB,EAAS,GAAGpyB,MAC/C,CACAmB,IAAAA,GACE,MAAMixB,EAAWtc,KAAKsc,SAChBlvB,EAAS4S,KAAK5S,OACdG,EAAQ+uB,EAASl5B,OACvB,OAAOmK,GAASH,EAAOkvB,EAAS/uB,EAAQ,GAAGpD,IAC7C,CACA2W,WAAAA,CAAYkI,EAAOxgB,GACjB,MAAMhE,EAAUwb,KAAKxb,QACfnD,EAAQ2nB,EAAMxgB,GACd4E,EAAS4S,KAAK5S,OACdkvB,EAAWD,GAAerc,KAAM,CAACxX,WAAU0B,MAAO7I,EAAO8I,IAAK9I,IACpE,IAAKi7B,EAASl5B,OACZ,OAEF,MAAM6yB,EAAS,GACTmxC,EAlGV,SAAiC5iE,GAC/B,OAAIA,EAAQmhE,QACHxsC,GAEL30B,EAAQowB,SAA8C,aAAnCpwB,EAAQkwB,uBACtB0E,GAEFF,EACT,CA0FyBmuC,CAAwB7iE,GAC7C,IAAIvB,EAAGO,EACP,IAAKP,EAAI,EAAGO,EAAO84B,EAASl5B,OAAQH,EAAIO,IAAQP,EAAG,CACjD,MAAM,MAACiH,EAAK,IAAEC,GAAOmyB,EAASr5B,GACxBwQ,EAAKrG,EAAOlD,GACZwJ,EAAKtG,EAAOjD,GAClB,GAAIsJ,IAAOC,EAAI,CACbuiB,EAAOpwB,KAAK4N,GACZ,QACF,CACA,MACM6zD,EAAeF,EAAa3zD,EAAIC,EAD5B7M,KAAKwB,KAAKhH,EAAQoS,EAAGjL,KAAckL,EAAGlL,GAAYiL,EAAGjL,KAClBhE,EAAQmhE,SACrD2B,EAAa9+D,GAAYwgB,EAAMxgB,GAC/BytB,EAAOpwB,KAAKyhE,EACd,CACA,OAAyB,IAAlBrxC,EAAO7yB,OAAe6yB,EAAO,GAAKA,CAC3C,CACAwvC,WAAAA,CAAYhiD,EAAKkY,EAAS6zB,GAExB,OADsB6W,GAAkBrmD,KACjC2mD,CAAcljD,EAAKzD,KAAM2b,EAAS6zB,EAC3C,CACAgX,IAAAA,CAAK/iD,EAAKvZ,EAAOqD,GACf,MAAM+uB,EAAWtc,KAAKsc,SAChBqqC,EAAgBN,GAAkBrmD,MACxC,IAAIuU,EAAOvU,KAAK+gB,MAChB72B,EAAQA,GAAS,EACjBqD,EAAQA,GAAUyS,KAAK5S,OAAOhK,OAAS8G,EACvC,IAAK,MAAMyxB,KAAWW,EACpB/H,GAAQoyC,EAAcljD,EAAKzD,KAAM2b,EAAS,CAACzxB,QAAOC,IAAKD,EAAQqD,EAAQ,IAEzE,QAASgnB,CACX,CACAwK,IAAAA,CAAKtb,EAAKooB,EAAW3hC,EAAOqD,GAC1B,MAAM/I,EAAUwb,KAAKxb,SAAW,CAAC,GAClBwb,KAAK5S,QAAU,IACnBhK,QAAUoB,EAAQqkB,cAC3BpF,EAAIgD,OACJsY,GAAKtb,EAAKzD,KAAM9V,EAAOqD,GACvBkW,EAAIoD,WAEF7G,KAAKm4B,WACPn4B,KAAKgnD,gBAAiB,EACtBhnD,KAAKymD,WAAQ57D,EAEjB,EAyBF,SAAS08D,GAAUxuC,EAAI7C,EAAKvoB,EAAMysC,GAChC,MAAM51C,EAAUu0B,EAAGv0B,SACZ,CAACmJ,GAAOtM,GAAS03B,EAAGshB,SAAS,CAAC1sC,GAAOysC,GAC5C,OAAQvzC,KAAKwB,IAAI6tB,EAAM70B,GAASmD,EAAQwjB,OAASxjB,EAAQgjE,SAC3D,CA3BAX,GAAY1lE,GAAK,OACjB0lE,GAAYvkD,SAAW,CACrBkb,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjB9U,YAAa,EACbgM,iBAAiB,EACjBH,uBAAwB,UACxB9L,MAAM,EACN6L,UAAU,EACVkxC,SAAS,EACT/wC,QAAS,GAEXiyC,GAAYrsB,cAAgB,CAC1B/3B,gBAAiB,kBACjBC,YAAa,eAEfmkD,GAAY7kD,YAAc,CACxByD,aAAa,EACbE,WAAaZ,GAAkB,eAATA,GAAkC,SAATA,GAQjD,MAAM0iD,WAAqBvtB,GACzBr6B,WAAAA,CAAY2gB,GACV0Q,QACAlxB,KAAKxb,aAAUqG,EACfmV,KAAKgS,YAASnnB,EACdmV,KAAKoS,UAAOvnB,EACZmV,KAAK+f,UAAOl1B,EACR21B,GACF/+B,OAAOiN,OAAOsR,KAAMwgB,EAExB,CACAwtB,OAAAA,CAAQ0Z,EAAQC,EAAQvtB,GACtB,MAAM51C,EAAUwb,KAAKxb,SACf,EAACW,EAAC,EAAEE,GAAK2a,KAAKq6B,SAAS,CAAC,IAAK,KAAMD,GACzC,OAASvzC,KAAKiB,IAAI4/D,EAASviE,EAAG,GAAK0B,KAAKiB,IAAI6/D,EAAStiE,EAAG,GAAMwB,KAAKiB,IAAItD,EAAQgjE,UAAYhjE,EAAQwjB,OAAQ,EAC7G,CACA4/C,QAAAA,CAASF,EAAQttB,GACf,OAAOmtB,GAAUvnD,KAAM0nD,EAAQ,IAAKttB,EACtC,CACAytB,QAAAA,CAASF,EAAQvtB,GACf,OAAOmtB,GAAUvnD,KAAM2nD,EAAQ,IAAKvtB,EACtC,CACAqU,cAAAA,CAAerU,GACb,MAAM,EAACj1C,EAAC,EAAEE,GAAK2a,KAAKq6B,SAAS,CAAC,IAAK,KAAMD,GACzC,MAAO,CAACj1C,IAAGE,IACb,CACAoB,IAAAA,CAAKjC,GAEH,IAAIwjB,GADJxjB,EAAUA,GAAWwb,KAAKxb,SAAW,CAAC,GACjBwjB,QAAU,EAC/BA,EAASnhB,KAAK6B,IAAIsf,EAAQA,GAAUxjB,EAAQsjE,aAAe,GAE3D,OAAgC,GAAxB9/C,GADYA,GAAUxjB,EAAQqkB,aAAe,GAEvD,CACAkW,IAAAA,CAAKtb,EAAKwF,GACR,MAAMzkB,EAAUwb,KAAKxb,QACjBwb,KAAKoS,MAAQ5tB,EAAQwjB,OAAS,KAAQe,GAAe/I,KAAMiJ,EAAMjJ,KAAKvZ,KAAKjC,GAAW,KAG1Fif,EAAIuH,YAAcxmB,EAAQke,YAC1Be,EAAIwH,UAAYzmB,EAAQqkB,YACxBpF,EAAImH,UAAYpmB,EAAQie,gBACxBgF,GAAUhE,EAAKjf,EAASwb,KAAK7a,EAAG6a,KAAK3a,GACvC,CACAsoD,QAAAA,GACE,MAAMnpD,EAAUwb,KAAKxb,SAAW,CAAC,EACjC,OAAOA,EAAQwjB,OAASxjB,EAAQgjE,SAClC,EAiBF,SAASO,GAAaC,EAAK5tB,GACzB,MAAM,EAACj1C,EAAC,EAAEE,EAAC,KAAEyjC,EAAI,MAAE1iB,EAAK,OAAEoB,GAAUwgD,EAAI3tB,SAAS,CAAC,IAAK,IAAK,OAAQ,QAAS,UAAWD,GACxF,IAAIjxB,EAAMC,EAAOC,EAAKC,EAAQ2+C,EAc9B,OAbID,EAAI13B,YACN23B,EAAOzgD,EAAS,EAChB2B,EAAOtiB,KAAK4B,IAAItD,EAAG2jC,GACnB1f,EAAQviB,KAAK6B,IAAIvD,EAAG2jC,GACpBzf,EAAMhkB,EAAI4iE,EACV3+C,EAASjkB,EAAI4iE,IAEbA,EAAO7hD,EAAQ,EACf+C,EAAOhkB,EAAI8iE,EACX7+C,EAAQjkB,EAAI8iE,EACZ5+C,EAAMxiB,KAAK4B,IAAIpD,EAAGyjC,GAClBxf,EAASziB,KAAK6B,IAAIrD,EAAGyjC,IAEhB,CAAC3f,OAAME,MAAKD,QAAOE,SAC5B,CACA,SAAS4+C,GAAY91C,EAAM/wB,EAAOoH,EAAKC,GACrC,OAAO0pB,EAAO,EAAI1nB,EAAYrJ,EAAOoH,EAAKC,EAC5C,CA0BA,SAASy/D,GAAcH,GACrB,MAAMpsC,EAASmsC,GAAaC,GACtB5hD,EAAQwV,EAAOxS,MAAQwS,EAAOzS,KAC9B3B,EAASoU,EAAOtS,OAASsS,EAAOvS,IAChCmvB,EA7BR,SAA0BwvB,EAAKI,EAAMC,GACnC,MAAMhnE,EAAQ2mE,EAAIxjE,QAAQqkB,YACpBuJ,EAAO41C,EAAI33B,cACXjrC,EAAI4nB,GAAO3rB,GACjB,MAAO,CACLuN,EAAGs5D,GAAY91C,EAAK/I,IAAKjkB,EAAEikB,IAAK,EAAGg/C,GACnC71D,EAAG01D,GAAY91C,EAAKhJ,MAAOhkB,EAAEgkB,MAAO,EAAGg/C,GACvC5hE,EAAG0hE,GAAY91C,EAAK9I,OAAQlkB,EAAEkkB,OAAQ,EAAG++C,GACzCj3D,EAAG82D,GAAY91C,EAAKjJ,KAAM/jB,EAAE+jB,KAAM,EAAGi/C,GAEzC,CAmBiBE,CAAiBN,EAAK5hD,EAAQ,EAAGoB,EAAS,GACnDQ,EAnBR,SAA2BggD,EAAKI,EAAMC,GACpC,MAAM,mBAAC73B,GAAsBw3B,EAAI3tB,SAAS,CAAC,uBACrCh5C,EAAQ2mE,EAAIxjE,QAAQ29D,aACpB/8D,EAAI6nB,GAAc5rB,GAClBknE,EAAO1hE,KAAK4B,IAAI2/D,EAAMC,GACtBj2C,EAAO41C,EAAI33B,cACXm4B,EAAeh4B,GAAsB1uC,EAAST,GACpD,MAAO,CACL2qB,QAASk8C,IAAaM,GAAgBp2C,EAAK/I,KAAO+I,EAAKjJ,KAAM/jB,EAAE4mB,QAAS,EAAGu8C,GAC3Ep8C,SAAU+7C,IAAaM,GAAgBp2C,EAAK/I,KAAO+I,EAAKhJ,MAAOhkB,EAAE+mB,SAAU,EAAGo8C,GAC9Et8C,WAAYi8C,IAAaM,GAAgBp2C,EAAK9I,QAAU8I,EAAKjJ,KAAM/jB,EAAE6mB,WAAY,EAAGs8C,GACpFr8C,YAAag8C,IAAaM,GAAgBp2C,EAAK9I,QAAU8I,EAAKhJ,MAAOhkB,EAAE8mB,YAAa,EAAGq8C,GAE3F,CAMiBE,CAAkBT,EAAK5hD,EAAQ,EAAGoB,EAAS,GAC1D,MAAO,CACLkhD,MAAO,CACLvjE,EAAGy2B,EAAOzS,KACV9jB,EAAGu2B,EAAOvS,IACVrW,EAAGoT,EACH/U,EAAGmW,EACHQ,UAEFk8C,MAAO,CACL/+D,EAAGy2B,EAAOzS,KAAOqvB,EAAOpnC,EACxB/L,EAAGu2B,EAAOvS,IAAMmvB,EAAO5pC,EACvBoE,EAAGoT,EAAQoyB,EAAOpnC,EAAIonC,EAAOhmC,EAC7BnB,EAAGmW,EAASgxB,EAAO5pC,EAAI4pC,EAAOhyC,EAC9BwhB,OAAQ,CACNgE,QAASnlB,KAAK6B,IAAI,EAAGsf,EAAOgE,QAAUnlB,KAAK6B,IAAI8vC,EAAO5pC,EAAG4pC,EAAOpnC,IAChE+a,SAAUtlB,KAAK6B,IAAI,EAAGsf,EAAOmE,SAAWtlB,KAAK6B,IAAI8vC,EAAO5pC,EAAG4pC,EAAOhmC,IAClEyZ,WAAYplB,KAAK6B,IAAI,EAAGsf,EAAOiE,WAAaplB,KAAK6B,IAAI8vC,EAAOhyC,EAAGgyC,EAAOpnC,IACtE8a,YAAarlB,KAAK6B,IAAI,EAAGsf,EAAOkE,YAAcrlB,KAAK6B,IAAI8vC,EAAOhyC,EAAGgyC,EAAOhmC,MAIhF,CACA,SAASw7C,GAAQga,EAAK7iE,EAAGE,EAAG+0C,GAC1B,MAAMuuB,EAAc,OAANxjE,EACRyjE,EAAc,OAANvjE,EAERu2B,EAASosC,KADEW,GAASC,IACSb,GAAaC,EAAK5tB,GACrD,OAAOxe,IACH+sC,GAASh+D,EAAWxF,EAAGy2B,EAAOzS,KAAMyS,EAAOxS,UAC3Cw/C,GAASj+D,EAAWtF,EAAGu2B,EAAOvS,IAAKuS,EAAOtS,QAChD,CAIA,SAASu/C,GAAkBplD,EAAKkF,GAC9BlF,EAAIkF,KAAKA,EAAKxjB,EAAGwjB,EAAKtjB,EAAGsjB,EAAK3V,EAAG2V,EAAKtX,EACxC,CACA,SAASy3D,GAAYngD,EAAMqkC,GAAsB,IAAd+b,EAAOn+D,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5C,MAAMzF,EAAIwjB,EAAKxjB,IAAM4jE,EAAQ5jE,GAAK6nD,EAAS,EACrC3nD,EAAIsjB,EAAKtjB,IAAM0jE,EAAQ1jE,GAAK2nD,EAAS,EACrCh6C,GAAK2V,EAAKxjB,EAAIwjB,EAAK3V,IAAM+1D,EAAQ5jE,EAAI4jE,EAAQ/1D,EAAIg6C,EAAS,GAAK7nD,EAC/DkM,GAAKsX,EAAKtjB,EAAIsjB,EAAKtX,IAAM03D,EAAQ1jE,EAAI0jE,EAAQ13D,EAAI27C,EAAS,GAAK3nD,EACrE,MAAO,CACLF,EAAGwjB,EAAKxjB,EAAIA,EACZE,EAAGsjB,EAAKtjB,EAAIA,EACZ2N,EAAG2V,EAAK3V,EAAIA,EACZ3B,EAAGsX,EAAKtX,EAAIA,EACZ2W,OAAQW,EAAKX,OAEjB,CApHAy/C,GAAatmE,GAAK,QAClBsmE,GAAanlD,SAAW,CACtBuG,YAAa,EACb2+C,UAAW,EACXlwB,iBAAkB,EAClBwwB,YAAa,EACbhgD,WAAY,SACZE,OAAQ,EACRD,SAAU,GAEZ0/C,GAAajtB,cAAgB,CAC3B/3B,gBAAiB,kBACjBC,YAAa,eAyGf,MAAMsmD,WAAmB9uB,GACvBr6B,WAAAA,CAAY2gB,GACV0Q,QACAlxB,KAAKxb,aAAUqG,EACfmV,KAAKswB,gBAAazlC,EAClBmV,KAAK8oB,UAAOj+B,EACZmV,KAAKoG,WAAQvb,EACbmV,KAAKwH,YAAS3c,EACdmV,KAAK8wB,mBAAgBjmC,EACjB21B,GACF/+B,OAAOiN,OAAOsR,KAAMwgB,EAExB,CACAzB,IAAAA,CAAKtb,GACH,MAAM,cAACqtB,EAAetsC,SAAS,YAACke,EAAW,gBAAED,IAAoBzC,MAC3D,MAACkkD,EAAK,MAAEwE,GAASP,GAAcnoD,MAC/BipD,GAnCSjhD,EAmCe0gD,EAAM1gD,QAlCxBgE,SAAWhE,EAAOmE,UAAYnE,EAAOiE,YAAcjE,EAAOkE,YAkCxBH,GAAqB88C,GAnCvE,IAAmB7gD,EAoCfvE,EAAIgD,OACAiiD,EAAM11D,IAAMkxD,EAAMlxD,GAAK01D,EAAMr3D,IAAM6yD,EAAM7yD,IAC3CoS,EAAI2E,YACJ6gD,EAAYxlD,EAAKqlD,GAAYJ,EAAO53B,EAAeozB,IACnDzgD,EAAI+F,OACJy/C,EAAYxlD,EAAKqlD,GAAY5E,GAAQpzB,EAAe43B,IACpDjlD,EAAImH,UAAYlI,EAChBe,EAAImF,KAAK,YAEXnF,EAAI2E,YACJ6gD,EAAYxlD,EAAKqlD,GAAY5E,EAAOpzB,IACpCrtB,EAAImH,UAAYnI,EAChBgB,EAAImF,OACJnF,EAAIoD,SACN,CACAmnC,OAAAA,CAAQ0Z,EAAQC,EAAQvtB,GACtB,OAAO4T,GAAQhuC,KAAM0nD,EAAQC,EAAQvtB,EACvC,CACAwtB,QAAAA,CAASF,EAAQttB,GACf,OAAO4T,GAAQhuC,KAAM0nD,EAAQ,KAAMttB,EACrC,CACAytB,QAAAA,CAASF,EAAQvtB,GACf,OAAO4T,GAAQhuC,KAAM,KAAM2nD,EAAQvtB,EACrC,CACAqU,cAAAA,CAAerU,GACb,MAAM,EAACj1C,EAAC,EAAEE,EAAC,KAAEyjC,EAAI,WAAEwH,GAActwB,KAAKq6B,SAAS,CAAC,IAAK,IAAK,OAAQ,cAAeD,GACjF,MAAO,CACLj1C,EAAGmrC,GAAcnrC,EAAI2jC,GAAQ,EAAI3jC,EACjCE,EAAGirC,EAAajrC,GAAKA,EAAIyjC,GAAQ,EAErC,CACA6kB,QAAAA,CAAShgD,GACP,MAAgB,MAATA,EAAeqS,KAAKoG,MAAQ,EAAIpG,KAAKwH,OAAS,CACvD,EAEFwhD,GAAW7nE,GAAK,MAChB6nE,GAAW1mD,SAAW,CACpB+tB,cAAe,QACfxnB,YAAa,EACbs5C,aAAc,EACdrxB,cAAe,OACfhpB,gBAAYjd,GAEdm+D,GAAWxuB,cAAgB,CACzB/3B,gBAAiB,kBACjBC,YAAa,eAwzCH,IAAIwmD,QA2ChB,MAAMC,GAAc,CAClBC,OAAAA,CAAQp9D,GACN,IAAKA,EAAM5I,OACT,OAAO,EAET,IAAIH,EAAGC,EACHiC,EAAI,EACJE,EAAI,EACJkI,EAAQ,EACZ,IAAKtK,EAAI,EAAGC,EAAM8I,EAAM5I,OAAQH,EAAIC,IAAOD,EAAG,CAC5C,MAAM81B,EAAK/sB,EAAM/I,GAAG2yB,QACpB,GAAImD,GAAMA,EAAGuhB,WAAY,CACvB,MAAMpkB,EAAM6C,EAAGohB,kBACfh1C,GAAK+wB,EAAI/wB,EACTE,GAAK6wB,EAAI7wB,IACPkI,CACJ,CACF,CACA,MAAO,CACLpI,EAAGA,EAAIoI,EACPlI,EAAGA,EAAIkI,EAEX,EACA0hD,OAAAA,CAAQjjD,EAAOq9D,GACb,IAAKr9D,EAAM5I,OACT,OAAO,EAET,IAGIH,EAAGC,EAAKomE,EAHRnkE,EAAIkkE,EAAclkE,EAClBE,EAAIgkE,EAAchkE,EAClBmpD,EAAcxsD,OAAOiF,kBAEzB,IAAKhE,EAAI,EAAGC,EAAM8I,EAAM5I,OAAQH,EAAIC,IAAOD,EAAG,CAC5C,MAAM81B,EAAK/sB,EAAM/I,GAAG2yB,QACpB,GAAImD,GAAMA,EAAGuhB,WAAY,CACvB,MACMrpC,EAAIrH,EAAsBy/D,EADjBtwC,EAAG01B,kBAEdx9C,EAAIu9C,IACNA,EAAcv9C,EACdq4D,EAAiBvwC,EAErB,CACF,CACA,GAAIuwC,EAAgB,CAClB,MAAMC,EAAKD,EAAenvB,kBAC1Bh1C,EAAIokE,EAAGpkE,EACPE,EAAIkkE,EAAGlkE,CACT,CACA,MAAO,CACLF,IACAE,IAEJ,GAEF,SAASmkE,GAAa1gC,EAAM2gC,GAQ1B,OAPIA,IACEnoE,EAAQmoE,GACVloE,MAAMG,UAAUmE,KAAKhD,MAAMimC,EAAM2gC,GAEjC3gC,EAAKjjC,KAAK4jE,IAGP3gC,CACT,CACA,SAAS4gC,GAAczjE,GACrB,OAAoB,kBAARA,GAAoBA,aAAe0jE,SAAW1jE,EAAI3B,QAAQ,OAAS,EACtE2B,EAAIP,MAAM,MAEZO,CACT,CACA,SAAS2jE,GAAkB9mD,EAAOpc,GAChC,MAAM,QAACkvB,EAAO,aAAEjyB,EAAY,MAAEC,GAAS8C,EACjCu+B,EAAaniB,EAAMslB,eAAezkC,GAAcshC,YAChD,MAACsG,EAAK,MAAElqC,GAAS4jC,EAAWqG,iBAAiB1nC,GACnD,MAAO,CACLkf,QACAyoB,QACAvZ,OAAQiT,EAAWqF,UAAU1mC,GAC7BqoC,IAAKnpB,EAAMgD,KAAKnD,SAAShf,GAAcmiB,KAAKliB,GAC5Cm0C,eAAgB12C,EAChBgmC,QAASpC,EAAWqC,aACpB0E,UAAWpoC,EACXD,eACAiyB,UAEJ,CACA,SAASi0C,GAAez1B,EAAS5vC,GAC/B,MAAMif,EAAM2wB,EAAQtxB,MAAMW,KACpB,KAACqmD,EAAI,OAAEC,EAAM,MAAE11B,GAASD,GACxB,SAAC41B,EAAQ,UAAEC,GAAazlE,EACxB0lE,EAAW/8C,GAAO3oB,EAAQ0lE,UAC1BC,EAAYh9C,GAAO3oB,EAAQ2lE,WAC3BC,EAAaj9C,GAAO3oB,EAAQ4lE,YAC5BC,EAAiBh2B,EAAMjxC,OACvBknE,EAAkBP,EAAO3mE,OACzBmnE,EAAoBT,EAAK1mE,OACzBm6C,EAAUrwB,GAAU1oB,EAAQ+4C,SAClC,IAAI/1B,EAAS+1B,EAAQ/1B,OACjBpB,EAAQ,EACRokD,EAAqBV,EAAKnqC,QAAO,CAACpyB,EAAOk9D,IAAal9D,EAAQk9D,EAASC,OAAOtnE,OAASqnE,EAASlgD,MAAMnnB,OAASqnE,EAASE,MAAMvnE,QAAQ,GAO1I,GANAonE,GAAsBp2B,EAAQw2B,WAAWxnE,OAASgxC,EAAQy2B,UAAUznE,OAChEinE,IACF7iD,GAAU6iD,EAAiBF,EAAU7mD,YACnC+mD,EAAiB,GAAK7lE,EAAQsmE,aAC/BtmE,EAAQumE,mBAEPP,EAAoB,CAEtBhjD,GAAU+iD,GADa/lE,EAAQwmE,cAAgBnkE,KAAK6B,IAAIuhE,EAAWC,EAAS5mD,YAAc4mD,EAAS5mD,aAEjGknD,EAAqBD,GAAqBL,EAAS5mD,YACnDknD,EAAqB,GAAKhmE,EAAQymE,WACtC,CACIX,IACF9iD,GAAUhjB,EAAQ0mE,gBACjBZ,EAAkBF,EAAW9mD,YAC5BgnD,EAAkB,GAAK9lE,EAAQ2mE,eAEnC,IAAIC,EAAe,EACnB,MAAMC,EAAe,SAAS3gD,GAC5BtE,EAAQvf,KAAK6B,IAAI0d,EAAO3C,EAAI0C,YAAYuE,GAAMtE,MAAQglD,EACxD,EAiBA,OAhBA3nD,EAAIgD,OACJhD,EAAIN,KAAOgnD,EAAUlkD,OACrBnjB,EAAKsxC,EAAQC,MAAOg3B,GACpB5nD,EAAIN,KAAO+mD,EAASjkD,OACpBnjB,EAAKsxC,EAAQw2B,WAAWvqD,OAAO+zB,EAAQy2B,WAAYQ,GACnDD,EAAe5mE,EAAQwmE,cAAiBhB,EAAW,EAAIxlE,EAAQ6rD,WAAc,EAC7EvtD,EAAKgnE,GAAOW,IACV3nE,EAAK2nE,EAASC,OAAQW,GACtBvoE,EAAK2nE,EAASlgD,MAAO8gD,GACrBvoE,EAAK2nE,EAASE,MAAOU,EAAa,IAEpCD,EAAe,EACf3nD,EAAIN,KAAOinD,EAAWnkD,OACtBnjB,EAAKsxC,EAAQ21B,OAAQsB,GACrB5nD,EAAIoD,UACJT,GAASm3B,EAAQn3B,MACV,CAACA,QAAOoB,SACjB,CAoBA,SAAS8jD,GAAgBxoD,EAAOte,EAASiC,EAAM8kE,GAC7C,MAAM,EAACpmE,EAAC,MAAEihB,GAAS3f,GACZ2f,MAAOolD,EAAY3/B,WAAW,KAAC1iB,EAAI,MAAEC,IAAUtG,EACtD,IAAI2oD,EAAS,SAWb,MAVe,WAAXF,EACFE,EAAStmE,IAAMgkB,EAAOC,GAAS,EAAI,OAAS,QACnCjkB,GAAKihB,EAAQ,EACtBqlD,EAAS,OACAtmE,GAAKqmE,EAAaplD,EAAQ,IACnCqlD,EAAS,SAnBb,SAA6BA,EAAQ3oD,EAAOte,EAASiC,GACnD,MAAM,EAACtB,EAAC,MAAEihB,GAAS3f,EACbilE,EAAQlnE,EAAQmnE,UAAYnnE,EAAQonE,aAC1C,MAAe,SAAXH,GAAqBtmE,EAAIihB,EAAQslD,EAAQ5oD,EAAMsD,OAGpC,UAAXqlD,GAAsBtmE,EAAIihB,EAAQslD,EAAQ,QAA9C,CAGF,CAYMG,CAAoBJ,EAAQ3oD,EAAOte,EAASiC,KAC9CglE,EAAS,UAEJA,CACT,CACA,SAASK,GAAmBhpD,EAAOte,EAASiC,GAC1C,MAAM8kE,EAAS9kE,EAAK8kE,QAAU/mE,EAAQ+mE,QApCxC,SAAyBzoD,EAAOrc,GAC9B,MAAM,EAACpB,EAAC,OAAEmiB,GAAU/gB,EACpB,OAAIpB,EAAImiB,EAAS,EACR,MACEniB,EAAKyd,EAAM0E,OAASA,EAAS,EAC/B,SAEF,QACT,CA4BkDukD,CAAgBjpD,EAAOrc,GACvE,MAAO,CACLglE,OAAQhlE,EAAKglE,QAAUjnE,EAAQinE,QAAUH,GAAgBxoD,EAAOte,EAASiC,EAAM8kE,GAC/EA,SAEJ,CAqBA,SAASS,GAAmBxnE,EAASiC,EAAMwlE,EAAWnpD,GACpD,MAAM,UAAC6oD,EAAS,aAAEC,EAAY,aAAE/jD,GAAgBrjB,GAC1C,OAACinE,EAAM,OAAEF,GAAUU,EACnBC,EAAiBP,EAAYC,GAC7B,QAAC5/C,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAee,GAAcpF,GACnE,IAAI1iB,EAzBN,SAAgBsB,EAAMglE,GACpB,IAAI,EAACtmE,EAAC,MAAEihB,GAAS3f,EAMjB,MALe,UAAXglE,EACFtmE,GAAKihB,EACe,WAAXqlD,IACTtmE,GAAMihB,EAAQ,GAETjhB,CACT,CAiBUgnE,CAAO1lE,EAAMglE,GACrB,MAAMpmE,EAjBR,SAAgBoB,EAAM8kE,EAAQW,GAC5B,IAAI,EAAC7mE,EAAC,OAAEmiB,GAAU/gB,EAQlB,MAPe,QAAX8kE,EACFlmE,GAAK6mE,EAEL7mE,GADoB,WAAXkmE,EACJ/jD,EAAS0kD,EAER1kD,EAAS,EAEVniB,CACT,CAOY+mE,CAAO3lE,EAAM8kE,EAAQW,GAY/B,MAXe,WAAXX,EACa,SAAXE,EACFtmE,GAAK+mE,EACe,UAAXT,IACTtmE,GAAK+mE,GAEa,SAAXT,EACTtmE,GAAK0B,KAAK6B,IAAIsjB,EAASC,GAAc0/C,EACjB,UAAXF,IACTtmE,GAAK0B,KAAK6B,IAAIyjB,EAAUD,GAAey/C,GAElC,CACLxmE,EAAGuF,EAAYvF,EAAG,EAAG2d,EAAMsD,MAAQ3f,EAAK2f,OACxC/gB,EAAGqF,EAAYrF,EAAG,EAAGyd,EAAM0E,OAAS/gB,EAAK+gB,QAE7C,CACA,SAAS6kD,GAAYj4B,EAASpnC,EAAOxI,GACnC,MAAM+4C,EAAUrwB,GAAU1oB,EAAQ+4C,SAClC,MAAiB,WAAVvwC,EACHonC,EAAQjvC,EAAIivC,EAAQhuB,MAAQ,EAClB,UAAVpZ,EACEonC,EAAQjvC,EAAIivC,EAAQhuB,MAAQm3B,EAAQn0B,MACpCgrB,EAAQjvC,EAAIo4C,EAAQp0B,IAC5B,CACA,SAASmjD,GAAwB7pE,GAC/B,OAAO+mE,GAAa,GAAIE,GAAcjnE,GACxC,CAQA,SAAS8pE,GAAkBnuC,EAAWvb,GACpC,MAAMgC,EAAWhC,GAAWA,EAAQwkB,SAAWxkB,EAAQwkB,QAAQ+M,SAAWvxB,EAAQwkB,QAAQ+M,QAAQhW,UAClG,OAAOvZ,EAAWuZ,EAAUvZ,SAASA,GAAYuZ,CACnD,CACA,MAAMouC,WAAgBtyB,GACpBr6B,WAAAA,CAAY6iB,GACVwO,QACAlxB,KAAKysD,QAAU,EACfzsD,KAAKgf,QAAU,GACfhf,KAAK0sD,oBAAiB7hE,EACtBmV,KAAK2sD,WAAQ9hE,EACbmV,KAAK4sD,uBAAoB/hE,EACzBmV,KAAK6sD,cAAgB,GACrB7sD,KAAKmjB,iBAAct4B,EACnBmV,KAAK8mB,cAAWj8B,EAChBmV,KAAK8C,MAAQ4f,EAAO5f,OAAS4f,EAAO/F,OACpC3c,KAAK2c,OAAS3c,KAAK8C,MACnB9C,KAAKxb,QAAUk+B,EAAOl+B,QACtBwb,KAAK8sD,gBAAajiE,EAClBmV,KAAKq0B,WAAQxpC,EACbmV,KAAK4qD,gBAAa//D,EAClBmV,KAAK8pD,UAAOj/D,EACZmV,KAAK6qD,eAAYhgE,EACjBmV,KAAK+pD,YAASl/D,EACdmV,KAAKyrD,YAAS5gE,EACdmV,KAAKurD,YAAS1gE,EACdmV,KAAK7a,OAAI0F,EACTmV,KAAK3a,OAAIwF,EACTmV,KAAKwH,YAAS3c,EACdmV,KAAKoG,WAAQvb,EACbmV,KAAK+sD,YAASliE,EACdmV,KAAKgtD,YAASniE,EACdmV,KAAKitD,iBAAcpiE,EACnBmV,KAAKktD,sBAAmBriE,EACxBmV,KAAKmtD,qBAAkBtiE,CACzB,CACAm8B,UAAAA,CAAWxiC,GACTwb,KAAKxb,QAAUA,EACfwb,KAAK4sD,uBAAoB/hE,EACzBmV,KAAK8mB,cAAWj8B,CAClB,CACA8hC,kBAAAA,GACE,MAAM3G,EAAShmB,KAAK4sD,kBACpB,GAAI5mC,EACF,OAAOA,EAET,MAAMljB,EAAQ9C,KAAK8C,MACbte,EAAUwb,KAAKxb,QAAQ2rB,WAAWnQ,KAAKqH,cACvCiD,EAAO9lB,EAAQy3C,SAAWn5B,EAAMte,QAAQge,WAAahe,EAAQ89B,WAC7DA,EAAa,IAAIG,GAAWziB,KAAK8C,MAAOwH,GAI9C,OAHIA,EAAKgE,aACPtO,KAAK4sD,kBAAoBnrE,OAAOirC,OAAOpK,IAElCA,CACT,CACAjb,UAAAA,GACE,OAAOrH,KAAK8mB,WACZ9mB,KAAK8mB,UAhEqBxV,EAgEWtR,KAAK8C,MAAMuE,aAhEd+sB,EAgE4Bp0B,KAhEnBotD,EAgEyBptD,KAAK6sD,cA/DpEj/C,GAAc0D,EAAQ,CAC3B8iB,UACAg5B,eACA5rE,KAAM,cAJV,IAA8B8vB,EAAQ8iB,EAASg5B,CAiE7C,CACAC,QAAAA,CAASxqD,EAASre,GAChB,MAAM,UAAC45B,GAAa55B,EACd8oE,EAAclvC,EAAUkvC,YAAYzqE,MAAMmd,KAAM,CAAC6C,IACjDwxB,EAAQjW,EAAUiW,MAAMxxC,MAAMmd,KAAM,CAAC6C,IACrC0qD,EAAanvC,EAAUmvC,WAAW1qE,MAAMmd,KAAM,CAAC6C,IACrD,IAAI0H,EAAQ,GAIZ,OAHAA,EAAQi/C,GAAaj/C,EAAOm/C,GAAc4D,IAC1C/iD,EAAQi/C,GAAaj/C,EAAOm/C,GAAcr1B,IAC1C9pB,EAAQi/C,GAAaj/C,EAAOm/C,GAAc6D,IACnChjD,CACT,CACAijD,aAAAA,CAAcJ,EAAc5oE,GAC1B,OAAO8nE,GAAwB9nE,EAAQ45B,UAAUwsC,WAAW/nE,MAAMmd,KAAM,CAACotD,IAC3E,CACAK,OAAAA,CAAQL,EAAc5oE,GACpB,MAAM,UAAC45B,GAAa55B,EACdkpE,EAAY,GAalB,OAZA5qE,EAAKsqE,GAAevqD,IAClB,MAAM4nD,EAAW,CACfC,OAAQ,GACRngD,MAAO,GACPogD,MAAO,IAEHgD,EAASpB,GAAkBnuC,EAAWvb,GAC5C2mD,GAAaiB,EAASC,OAAQhB,GAAciE,EAAOC,YAAYhsE,KAAKoe,KAAM6C,KAC1E2mD,GAAaiB,EAASlgD,MAAOojD,EAAOpiC,MAAM3pC,KAAKoe,KAAM6C,IACrD2mD,GAAaiB,EAASE,MAAOjB,GAAciE,EAAOE,WAAWjsE,KAAKoe,KAAM6C,KACxE6qD,EAAU7nE,KAAK4kE,EAAS,IAEnBiD,CACT,CACAI,YAAAA,CAAaV,EAAc5oE,GACzB,OAAO8nE,GAAwB9nE,EAAQ45B,UAAUysC,UAAUhoE,MAAMmd,KAAM,CAACotD,IAC1E,CACAW,SAAAA,CAAUX,EAAc5oE,GACtB,MAAM,UAAC45B,GAAa55B,EACdwpE,EAAe5vC,EAAU4vC,aAAanrE,MAAMmd,KAAM,CAACotD,IACnDrD,EAAS3rC,EAAU2rC,OAAOlnE,MAAMmd,KAAM,CAACotD,IACvCa,EAAc7vC,EAAU6vC,YAAYprE,MAAMmd,KAAM,CAACotD,IACvD,IAAI7iD,EAAQ,GAIZ,OAHAA,EAAQi/C,GAAaj/C,EAAOm/C,GAAcsE,IAC1CzjD,EAAQi/C,GAAaj/C,EAAOm/C,GAAcK,IAC1Cx/C,EAAQi/C,GAAaj/C,EAAOm/C,GAAcuE,IACnC1jD,CACT,CACA2jD,YAAAA,CAAa1pE,GACX,MAAM68B,EAASrhB,KAAKgf,QACdlZ,EAAO9F,KAAK8C,MAAMgD,KAClBmnD,EAAc,GACdC,EAAmB,GACnBC,EAAkB,GACxB,IACIlqE,EAAGC,EADHkqE,EAAe,GAEnB,IAAKnqE,EAAI,EAAGC,EAAMm+B,EAAOj+B,OAAQH,EAAIC,IAAOD,EAC1CmqE,EAAavnE,KAAK+jE,GAAkB5pD,KAAK8C,MAAOue,EAAOp+B,KAkBzD,OAhBIuB,EAAQosB,SACVw8C,EAAeA,EAAax8C,QAAO,CAACgF,EAAShyB,EAAO2E,IAAU/D,EAAQosB,OAAOgF,EAAShyB,EAAO2E,EAAOud,MAElGthB,EAAQ2pE,WACVf,EAAeA,EAAan+B,MAAK,CAAC1oC,EAAGC,IAAMhC,EAAQ2pE,SAAS5nE,EAAGC,EAAGsf,MAEpEhjB,EAAKsqE,GAAevqD,IAClB,MAAM8qD,EAASpB,GAAkB/nE,EAAQ45B,UAAWvb,GACpDoqD,EAAYpnE,KAAK8nE,EAAOS,WAAWxsE,KAAKoe,KAAM6C,IAC9CqqD,EAAiBrnE,KAAK8nE,EAAOU,gBAAgBzsE,KAAKoe,KAAM6C,IACxDsqD,EAAgBtnE,KAAK8nE,EAAOW,eAAe1sE,KAAKoe,KAAM6C,GAAS,IAEjE7C,KAAKitD,YAAcA,EACnBjtD,KAAKktD,iBAAmBA,EACxBltD,KAAKmtD,gBAAkBA,EACvBntD,KAAK8sD,WAAaM,EACXA,CACT,CACA9rC,MAAAA,CAAO7yB,EAASwyD,GACd,MAAMz8D,EAAUwb,KAAKxb,QAAQ2rB,WAAWnQ,KAAKqH,cACvCga,EAASrhB,KAAKgf,QACpB,IAAIkD,EACAkrC,EAAe,GACnB,GAAK/rC,EAAOj+B,OAML,CACL,MAAM27C,EAAWoqB,GAAY3kE,EAAQu6C,UAAUn9C,KAAKoe,KAAMqhB,EAAQrhB,KAAK0sD,gBACvEU,EAAeptD,KAAKkuD,aAAa1pE,GACjCwb,KAAKq0B,MAAQr0B,KAAKqtD,SAASD,EAAc5oE,GACzCwb,KAAK4qD,WAAa5qD,KAAKwtD,cAAcJ,EAAc5oE,GACnDwb,KAAK8pD,KAAO9pD,KAAKytD,QAAQL,EAAc5oE,GACvCwb,KAAK6qD,UAAY7qD,KAAK8tD,aAAaV,EAAc5oE,GACjDwb,KAAK+pD,OAAS/pD,KAAK+tD,UAAUX,EAAc5oE,GAC3C,MAAMiC,EAAOuZ,KAAK2sD,MAAQ9C,GAAe7pD,KAAMxb,GACzC+pE,EAAkB9sE,OAAOiN,OAAO,CAAC,EAAGqwC,EAAUt4C,GAC9CwlE,EAAYH,GAAmB9rD,KAAK8C,MAAOte,EAAS+pE,GACpDC,EAAkBxC,GAAmBxnE,EAAS+pE,EAAiBtC,EAAWjsD,KAAK8C,OACrF9C,KAAKyrD,OAASQ,EAAUR,OACxBzrD,KAAKurD,OAASU,EAAUV,OACxBrpC,EAAa,CACXuqC,QAAS,EACTtnE,EAAGqpE,EAAgBrpE,EACnBE,EAAGmpE,EAAgBnpE,EACnB+gB,MAAO3f,EAAK2f,MACZoB,OAAQ/gB,EAAK+gB,OACbulD,OAAQhuB,EAAS55C,EACjB6nE,OAAQjuB,EAAS15C,EAErB,MA5BuB,IAAjB2a,KAAKysD,UACPvqC,EAAa,CACXuqC,QAAS,IA2BfzsD,KAAK6sD,cAAgBO,EACrBptD,KAAK8mB,cAAWj8B,EACZq3B,GACFliB,KAAK2sB,qBAAqBrL,OAAOthB,KAAMkiB,GAErCzzB,GAAWjK,EAAQiqE,UACrBjqE,EAAQiqE,SAAS7sE,KAAKoe,KAAM,CAAC8C,MAAO9C,KAAK8C,MAAOsxB,QAASp0B,KAAMihD,UAEnE,CACAyN,SAAAA,CAAUC,EAAclrD,EAAKhd,EAAMjC,GACjC,MAAMoqE,EAAgB5uD,KAAK6uD,iBAAiBF,EAAcloE,EAAMjC,GAChEif,EAAIgF,OAAOmmD,EAAcpoB,GAAIooB,EAAcnoB,IAC3ChjC,EAAIgF,OAAOmmD,EAAcloB,GAAIkoB,EAAcjoB,IAC3CljC,EAAIgF,OAAOmmD,EAAcE,GAAIF,EAAcG,GAC7C,CACAF,gBAAAA,CAAiBF,EAAcloE,EAAMjC,GACnC,MAAM,OAACinE,EAAM,OAAEF,GAAUvrD,MACnB,UAAC2rD,EAAS,aAAE9jD,GAAgBrjB,GAC5B,QAACwnB,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAee,GAAcpF,IAC5D1iB,EAAG6pE,EAAK3pE,EAAG4pE,GAAON,GACnB,MAACvoD,EAAK,OAAEoB,GAAU/gB,EACxB,IAAI+/C,EAAIE,EAAIooB,EAAIroB,EAAIE,EAAIooB,EAoCxB,MAnCe,WAAXxD,GACF5kB,EAAKsoB,EAAOznD,EAAS,EACN,SAAXikD,GACFjlB,EAAKwoB,EACLtoB,EAAKF,EAAKmlB,EACVllB,EAAKE,EAAKglB,EACVoD,EAAKpoB,EAAKglB,IAEVnlB,EAAKwoB,EAAM5oD,EACXsgC,EAAKF,EAAKmlB,EACVllB,EAAKE,EAAKglB,EACVoD,EAAKpoB,EAAKglB,GAEZmD,EAAKtoB,IAGHE,EADa,SAAX+kB,EACGuD,EAAMnoE,KAAK6B,IAAIsjB,EAASC,GAAe0/C,EACxB,UAAXF,EACJuD,EAAM5oD,EAAQvf,KAAK6B,IAAIyjB,EAAUD,GAAey/C,EAEhD3rD,KAAK+sD,OAEG,QAAXxB,GACF9kB,EAAKwoB,EACLtoB,EAAKF,EAAKklB,EACVnlB,EAAKE,EAAKilB,EACVmD,EAAKpoB,EAAKilB,IAEVllB,EAAKwoB,EAAMznD,EACXm/B,EAAKF,EAAKklB,EACVnlB,EAAKE,EAAKilB,EACVmD,EAAKpoB,EAAKilB,GAEZoD,EAAKtoB,GAEA,CAACD,KAAIE,KAAIooB,KAAIroB,KAAIE,KAAIooB,KAC9B,CACAvmB,SAAAA,CAAUn0B,EAAI5Q,EAAKjf,GACjB,MAAM6vC,EAAQr0B,KAAKq0B,MACbjxC,EAASixC,EAAMjxC,OACrB,IAAI+mE,EAAWW,EAAc7nE,EAC7B,GAAIG,EAAQ,CACV,MAAM8rE,EAAY90C,GAAc51B,EAAQ61B,IAAKra,KAAK7a,EAAG6a,KAAKoG,OAQ1D,IAPAiO,EAAGlvB,EAAIknE,GAAYrsD,KAAMxb,EAAQs6C,WAAYt6C,GAC7Cif,EAAIoH,UAAYqkD,EAAUrkD,UAAUrmB,EAAQs6C,YAC5Cr7B,EAAIqH,aAAe,SACnBq/C,EAAYh9C,GAAO3oB,EAAQ2lE,WAC3BW,EAAetmE,EAAQsmE,aACvBrnD,EAAImH,UAAYpmB,EAAQ2qE,WACxB1rD,EAAIN,KAAOgnD,EAAUlkD,OAChBhjB,EAAI,EAAGA,EAAIG,IAAUH,EACxBwgB,EAAI2H,SAASipB,EAAMpxC,GAAIisE,EAAU/pE,EAAEkvB,EAAGlvB,GAAIkvB,EAAGhvB,EAAI8kE,EAAU7mD,WAAa,GACxE+Q,EAAGhvB,GAAK8kE,EAAU7mD,WAAawnD,EAC3B7nE,EAAI,IAAMG,IACZixB,EAAGhvB,GAAKb,EAAQumE,kBAAoBD,EAG1C,CACF,CACAsE,aAAAA,CAAc3rD,EAAK4Q,EAAIpxB,EAAGisE,EAAW1qE,GACnC,MAAMyoE,EAAcjtD,KAAKitD,YAAYhqE,GAC/BorE,EAAkBruD,KAAKktD,iBAAiBjqE,IACxC,UAACgnE,EAAS,SAAED,EAAQ,WAAE3Z,GAAc7rD,EACpC0lE,EAAW/8C,GAAO3oB,EAAQ0lE,UAC1BmF,EAAShD,GAAYrsD,KAAM,OAAQxb,GACnC8qE,EAAYJ,EAAU/pE,EAAEkqE,GACxBE,EAAUtF,EAAYC,EAAS5mD,YAAc4mD,EAAS5mD,WAAa2mD,GAAa,EAAI,EACpFuF,EAASn7C,EAAGhvB,EAAIkqE,EACtB,GAAI/qE,EAAQirE,cAAe,CACzB,MAAMC,EAAc,CAClB1nD,OAAQnhB,KAAK4B,IAAIuhE,EAAUC,GAAa,EACxCniD,WAAYumD,EAAgBvmD,WAC5BC,SAAUsmD,EAAgBtmD,SAC1Bc,YAAa,GAETouB,EAAUi4B,EAAUz0C,WAAW60C,EAAWtF,GAAYA,EAAW,EACjE9yB,EAAUs4B,EAASvF,EAAY,EACrCxmD,EAAIuH,YAAcxmB,EAAQmrE,mBAC1BlsD,EAAImH,UAAYpmB,EAAQmrE,mBACxBloD,GAAUhE,EAAKisD,EAAaz4B,EAASC,GACrCzzB,EAAIuH,YAAciiD,EAAYvqD,YAC9Be,EAAImH,UAAYqiD,EAAYxqD,gBAC5BgF,GAAUhE,EAAKisD,EAAaz4B,EAASC,EACvC,KAAO,CACLzzB,EAAIwH,UAAYnpB,EAASmrE,EAAYpkD,aAAehiB,KAAK6B,OAAOjH,OAAO4gB,OAAO4qD,EAAYpkD,cAAiBokD,EAAYpkD,aAAe,EACtIpF,EAAIuH,YAAciiD,EAAYvqD,YAC9Be,EAAI2kC,YAAY6kB,EAAYxvC,YAAc,IAC1Cha,EAAI4kC,eAAiB4kB,EAAYvvC,kBAAoB,EACrD,MAAMkyC,EAASV,EAAUz0C,WAAW60C,EAAWtF,EAAW3Z,GACpDwf,EAASX,EAAUz0C,WAAWy0C,EAAU10C,MAAM80C,EAAW,GAAItF,EAAW3Z,EAAa,GACrF8R,EAAel1C,GAAcggD,EAAY9K,cAC3C1gE,OAAO4gB,OAAO8/C,GAAcxK,MAAKzyD,GAAW,IAANA,KACxCue,EAAI2E,YACJ3E,EAAImH,UAAYpmB,EAAQmrE,mBACxB5jD,GAAmBtI,EAAK,CACtBte,EAAGyqE,EACHvqE,EAAGmqE,EACHx8D,EAAGg3D,EACH34D,EAAG44D,EACHjiD,OAAQm6C,IAEV1+C,EAAImF,OACJnF,EAAIqF,SACJrF,EAAImH,UAAYqiD,EAAYxqD,gBAC5BgB,EAAI2E,YACJ2D,GAAmBtI,EAAK,CACtBte,EAAG0qE,EACHxqE,EAAGmqE,EAAS,EACZx8D,EAAGg3D,EAAW,EACd34D,EAAG44D,EAAY,EACfjiD,OAAQm6C,IAEV1+C,EAAImF,SAEJnF,EAAImH,UAAYpmB,EAAQmrE,mBACxBlsD,EAAIukC,SAAS4nB,EAAQJ,EAAQxF,EAAUC,GACvCxmD,EAAIqsD,WAAWF,EAAQJ,EAAQxF,EAAUC,GACzCxmD,EAAImH,UAAYqiD,EAAYxqD,gBAC5BgB,EAAIukC,SAAS6nB,EAAQL,EAAS,EAAGxF,EAAW,EAAGC,EAAY,GAE/D,CACAxmD,EAAImH,UAAY5K,KAAKmtD,gBAAgBlqE,EACvC,CACA8sE,QAAAA,CAAS17C,EAAI5Q,EAAKjf,GAChB,MAAM,KAACslE,GAAQ9pD,MACT,YAACirD,EAAW,UAAE+E,EAAS,cAAEhF,EAAa,UAAEf,EAAS,SAAED,EAAQ,WAAE3Z,GAAc7rD,EAC3E0lE,EAAW/8C,GAAO3oB,EAAQ0lE,UAChC,IAAI+F,EAAiB/F,EAAS5mD,WAC1B4sD,EAAe,EACnB,MAAMhB,EAAY90C,GAAc51B,EAAQ61B,IAAKra,KAAK7a,EAAG6a,KAAKoG,OACpD+pD,EAAiB,SAASzlD,GAC9BjH,EAAI2H,SAASV,EAAMwkD,EAAU/pE,EAAEkvB,EAAGlvB,EAAI+qE,GAAe77C,EAAGhvB,EAAI4qE,EAAiB,GAC7E57C,EAAGhvB,GAAK4qE,EAAiBhF,CAC3B,EACMmF,EAA0BlB,EAAUrkD,UAAUmlD,GACpD,IAAIvF,EAAU4F,EAAW9lD,EAAOtnB,EAAGyb,EAAGlb,EAAMkjB,EAU5C,IATAjD,EAAIoH,UAAYmlD,EAChBvsD,EAAIqH,aAAe,SACnBrH,EAAIN,KAAO+mD,EAASjkD,OACpBoO,EAAGlvB,EAAIknE,GAAYrsD,KAAMowD,EAAyB5rE,GAClDif,EAAImH,UAAYpmB,EAAQ8rE,UACxBxtE,EAAKkd,KAAK4qD,WAAYuF,GACtBD,EAAelF,GAA6C,UAA5BoF,EACd,WAAdJ,EAA0BhG,EAAW,EAAI3Z,EAAe2Z,EAAW,EAAI3Z,EACvE,EACCptD,EAAI,EAAGO,EAAOsmE,EAAK1mE,OAAQH,EAAIO,IAAQP,EAAG,CAU7C,IATAwnE,EAAWX,EAAK7mE,GAChBotE,EAAYrwD,KAAKmtD,gBAAgBlqE,GACjCwgB,EAAImH,UAAYylD,EAChBvtE,EAAK2nE,EAASC,OAAQyF,GACtB5lD,EAAQkgD,EAASlgD,MACbygD,GAAiBzgD,EAAMnnB,SACzB4c,KAAKovD,cAAc3rD,EAAK4Q,EAAIpxB,EAAGisE,EAAW1qE,GAC1CyrE,EAAiBppE,KAAK6B,IAAIwhE,EAAS5mD,WAAY2mD,IAE5CvrD,EAAI,EAAGgI,EAAO6D,EAAMnnB,OAAQsb,EAAIgI,IAAQhI,EAC3CyxD,EAAe5lD,EAAM7L,IACrBuxD,EAAiB/F,EAAS5mD,WAE5BxgB,EAAK2nE,EAASE,MAAOwF,EACvB,CACAD,EAAe,EACfD,EAAiB/F,EAAS5mD,WAC1BxgB,EAAKkd,KAAK6qD,UAAWsF,GACrB97C,EAAGhvB,GAAK4lE,CACV,CACAsF,UAAAA,CAAWl8C,EAAI5Q,EAAKjf,GAClB,MAAMulE,EAAS/pD,KAAK+pD,OACd3mE,EAAS2mE,EAAO3mE,OACtB,IAAIgnE,EAAYnnE,EAChB,GAAIG,EAAQ,CACV,MAAM8rE,EAAY90C,GAAc51B,EAAQ61B,IAAKra,KAAK7a,EAAG6a,KAAKoG,OAQ1D,IAPAiO,EAAGlvB,EAAIknE,GAAYrsD,KAAMxb,EAAQgsE,YAAahsE,GAC9C6vB,EAAGhvB,GAAKb,EAAQ0mE,gBAChBznD,EAAIoH,UAAYqkD,EAAUrkD,UAAUrmB,EAAQgsE,aAC5C/sD,EAAIqH,aAAe,SACnBs/C,EAAaj9C,GAAO3oB,EAAQ4lE,YAC5B3mD,EAAImH,UAAYpmB,EAAQisE,YACxBhtD,EAAIN,KAAOinD,EAAWnkD,OACjBhjB,EAAI,EAAGA,EAAIG,IAAUH,EACxBwgB,EAAI2H,SAAS2+C,EAAO9mE,GAAIisE,EAAU/pE,EAAEkvB,EAAGlvB,GAAIkvB,EAAGhvB,EAAI+kE,EAAW9mD,WAAa,GAC1E+Q,EAAGhvB,GAAK+kE,EAAW9mD,WAAa9e,EAAQ2mE,aAE5C,CACF,CACApjB,cAAAA,CAAe1zB,EAAI5Q,EAAKitD,EAAalsE,GACnC,MAAM,OAACinE,EAAM,OAAEF,GAAUvrD,MACnB,EAAC7a,EAAC,EAAEE,GAAKgvB,GACT,MAACjO,EAAK,OAAEoB,GAAUkpD,GAClB,QAAC1kD,EAAO,SAAEG,EAAQ,WAAEF,EAAU,YAAEC,GAAee,GAAczoB,EAAQqjB,cAC3EpE,EAAImH,UAAYpmB,EAAQie,gBACxBgB,EAAIuH,YAAcxmB,EAAQke,YAC1Be,EAAIwH,UAAYzmB,EAAQqkB,YACxBpF,EAAI2E,YACJ3E,EAAI+E,OAAOrjB,EAAI6mB,EAAS3mB,GACT,QAAXkmE,GACFvrD,KAAK0uD,UAAUr6C,EAAI5Q,EAAKitD,EAAalsE,GAEvCif,EAAIgF,OAAOtjB,EAAIihB,EAAQ+F,EAAU9mB,GACjCoe,EAAIktD,iBAAiBxrE,EAAIihB,EAAO/gB,EAAGF,EAAIihB,EAAO/gB,EAAI8mB,GACnC,WAAXo/C,GAAkC,UAAXE,GACzBzrD,KAAK0uD,UAAUr6C,EAAI5Q,EAAKitD,EAAalsE,GAEvCif,EAAIgF,OAAOtjB,EAAIihB,EAAO/gB,EAAImiB,EAAS0E,GACnCzI,EAAIktD,iBAAiBxrE,EAAIihB,EAAO/gB,EAAImiB,EAAQriB,EAAIihB,EAAQ8F,EAAa7mB,EAAImiB,GAC1D,WAAX+jD,GACFvrD,KAAK0uD,UAAUr6C,EAAI5Q,EAAKitD,EAAalsE,GAEvCif,EAAIgF,OAAOtjB,EAAI8mB,EAAY5mB,EAAImiB,GAC/B/D,EAAIktD,iBAAiBxrE,EAAGE,EAAImiB,EAAQriB,EAAGE,EAAImiB,EAASyE,GACrC,WAAXs/C,GAAkC,SAAXE,GACzBzrD,KAAK0uD,UAAUr6C,EAAI5Q,EAAKitD,EAAalsE,GAEvCif,EAAIgF,OAAOtjB,EAAGE,EAAI2mB,GAClBvI,EAAIktD,iBAAiBxrE,EAAGE,EAAGF,EAAI6mB,EAAS3mB,GACxCoe,EAAI8E,YACJ9E,EAAImF,OACApkB,EAAQqkB,YAAc,GACxBpF,EAAIqF,QAER,CACA8nD,sBAAAA,CAAuBpsE,GACrB,MAAMse,EAAQ9C,KAAK8C,MACbob,EAAQle,KAAKmjB,YACb0tC,EAAQ3yC,GAASA,EAAM/4B,EACvB2rE,EAAQ5yC,GAASA,EAAM74B,EAC7B,GAAIwrE,GAASC,EAAO,CAClB,MAAM/xB,EAAWoqB,GAAY3kE,EAAQu6C,UAAUn9C,KAAKoe,KAAMA,KAAKgf,QAAShf,KAAK0sD,gBAC7E,IAAK3tB,EACH,OAEF,MAAMt4C,EAAOuZ,KAAK2sD,MAAQ9C,GAAe7pD,KAAMxb,GACzC+pE,EAAkB9sE,OAAOiN,OAAO,CAAC,EAAGqwC,EAAU/+B,KAAK2sD,OACnDV,EAAYH,GAAmBhpD,EAAOte,EAAS+pE,GAC/CvlD,EAAQgjD,GAAmBxnE,EAAS+pE,EAAiBtC,EAAWnpD,GAClE+tD,EAAM1vC,MAAQnY,EAAM7jB,GAAK2rE,EAAM3vC,MAAQnY,EAAM3jB,IAC/C2a,KAAKyrD,OAASQ,EAAUR,OACxBzrD,KAAKurD,OAASU,EAAUV,OACxBvrD,KAAKoG,MAAQ3f,EAAK2f,MAClBpG,KAAKwH,OAAS/gB,EAAK+gB,OACnBxH,KAAK+sD,OAAShuB,EAAS55C,EACvB6a,KAAKgtD,OAASjuB,EAAS15C,EACvB2a,KAAK2sB,qBAAqBrL,OAAOthB,KAAMgJ,GAE3C,CACF,CACA+nD,WAAAA,GACE,QAAS/wD,KAAKysD,OAChB,CACA1tC,IAAAA,CAAKtb,GACH,MAAMjf,EAAUwb,KAAKxb,QAAQ2rB,WAAWnQ,KAAKqH,cAC7C,IAAIolD,EAAUzsD,KAAKysD,QACnB,IAAKA,EACH,OAEFzsD,KAAK4wD,uBAAuBpsE,GAC5B,MAAMksE,EAAc,CAClBtqD,MAAOpG,KAAKoG,MACZoB,OAAQxH,KAAKwH,QAET6M,EAAK,CACTlvB,EAAG6a,KAAK7a,EACRE,EAAG2a,KAAK3a,GAEVonE,EAAU5lE,KAAKwB,IAAIokE,GAAW,KAAO,EAAIA,EACzC,MAAMlvB,EAAUrwB,GAAU1oB,EAAQ+4C,SAC5ByzB,EAAoBhxD,KAAKq0B,MAAMjxC,QAAU4c,KAAK4qD,WAAWxnE,QAAU4c,KAAK8pD,KAAK1mE,QAAU4c,KAAK6qD,UAAUznE,QAAU4c,KAAK+pD,OAAO3mE,OAC9HoB,EAAQy3C,SAAW+0B,IACrBvtD,EAAIgD,OACJhD,EAAIwtD,YAAcxE,EAClBzsD,KAAK+nC,eAAe1zB,EAAI5Q,EAAKitD,EAAalsE,GAC1Cq2B,GAAsBpX,EAAKjf,EAAQ0sE,eACnC78C,EAAGhvB,GAAKk4C,EAAQl0B,IAChBrJ,KAAKwoC,UAAUn0B,EAAI5Q,EAAKjf,GACxBwb,KAAK+vD,SAAS17C,EAAI5Q,EAAKjf,GACvBwb,KAAKuwD,WAAWl8C,EAAI5Q,EAAKjf,GACzB22B,GAAqB1X,EAAKjf,EAAQ0sE,eAClCztD,EAAIoD,UAER,CACA+5C,iBAAAA,GACE,OAAO5gD,KAAKgf,SAAW,EACzB,CACA6hC,iBAAAA,CAAkBC,EAAgBuI,GAChC,MAAMtI,EAAa/gD,KAAKgf,QAClBqC,EAASy/B,EAAe/8D,KAAIotE,IAA2B,IAA1B,aAACxtE,EAAY,MAAEC,GAAMutE,EACtD,MAAMhkE,EAAO6S,KAAK8C,MAAMslB,eAAezkC,GACvC,IAAKwJ,EACH,MAAM,IAAImjB,MAAM,kCAAoC3sB,GAEtD,MAAO,CACLA,eACAiyB,QAASzoB,EAAK2Y,KAAKliB,GACnBA,QACD,IAEG6K,GAAWpL,EAAe09D,EAAY1/B,GACtC+vC,EAAkBpxD,KAAKqxD,iBAAiBhwC,EAAQgoC,IAClD56D,GAAW2iE,KACbpxD,KAAKgf,QAAUqC,EACfrhB,KAAK0sD,eAAiBrD,EACtBrpD,KAAKsxD,qBAAsB,EAC3BtxD,KAAKshB,QAAO,GAEhB,CACAiwC,WAAAA,CAAYvoE,EAAGi4D,GAA4B,IAApBI,IAAWz2D,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,KAAAA,UAAA,GAChC,GAAIq2D,GAAUjhD,KAAKsxD,oBACjB,OAAO,EAETtxD,KAAKsxD,qBAAsB,EAC3B,MAAM9sE,EAAUwb,KAAKxb,QACfu8D,EAAa/gD,KAAKgf,SAAW,GAC7BqC,EAASrhB,KAAKwhD,mBAAmBx4D,EAAG+3D,EAAYE,EAAQI,GACxD+P,EAAkBpxD,KAAKqxD,iBAAiBhwC,EAAQr4B,GAChDyF,EAAUwyD,IAAW59D,EAAeg+B,EAAQ0/B,IAAeqQ,EAWjE,OAVI3iE,IACFuR,KAAKgf,QAAUqC,GACX78B,EAAQy3C,SAAWz3C,EAAQiqE,YAC7BzuD,KAAK0sD,eAAiB,CACpBvnE,EAAG6D,EAAE7D,EACLE,EAAG2D,EAAE3D,GAEP2a,KAAKshB,QAAO,EAAM2/B,KAGfxyD,CACT,CACA+yD,kBAAAA,CAAmBx4D,EAAG+3D,EAAYE,EAAQI,GACxC,MAAM78D,EAAUwb,KAAKxb,QACrB,GAAe,aAAXwE,EAAExH,KACJ,MAAO,GAET,IAAK6/D,EACH,OAAON,EAET,MAAM1/B,EAASrhB,KAAK8C,MAAMi9C,0BAA0B/2D,EAAGxE,EAAQsf,KAAMtf,EAASy8D,GAI9E,OAHIz8D,EAAQxB,SACVq+B,EAAOr+B,UAEFq+B,CACT,CACAgwC,gBAAAA,CAAiBhwC,EAAQr4B,GACvB,MAAM,OAAC+jE,EAAM,OAAEC,EAAM,QAAExoE,GAAWwb,KAC5B++B,EAAWoqB,GAAY3kE,EAAQu6C,UAAUn9C,KAAKoe,KAAMqhB,EAAQr4B,GAClE,OAAoB,IAAb+1C,IAAuBguB,IAAWhuB,EAAS55C,GAAK6nE,IAAWjuB,EAAS15C,EAC7E,EAEFmnE,GAAQrD,YAAcA,GAmMtB,SAASqI,GAAevnC,EAAQgC,EAAKroC,EAAO6tE,GAC1C,MAAMr1B,EAAQnS,EAAO3lC,QAAQ2nC,GAC7B,IAAe,IAAXmQ,EACF,MAZgBs1B,EAACznC,EAAQgC,EAAKroC,EAAO6tE,KACpB,kBAARxlC,GACTroC,EAAQqmC,EAAOpkC,KAAKomC,GAAO,EAC3BwlC,EAAYE,QAAQ,CAAC/tE,QAAO2nC,MAAOU,KAC1B9jC,MAAM8jC,KACfroC,EAAQ,MAEHA,GAKE8tE,CAAYznC,EAAQgC,EAAKroC,EAAO6tE,GAGzC,OAAOr1B,IADMnS,EAAO2nC,YAAY3lC,GACRroC,EAAQw4C,CAClC,CAEA,MAAMy1B,WAAsB5yB,GAC1Bp/B,WAAAA,CAAY2gB,GACV0Q,MAAM1Q,GACNxgB,KAAK8xD,iBAAcjnE,EACnBmV,KAAK+xD,YAAc,EACnB/xD,KAAKgyD,aAAe,EACtB,CACA3xB,IAAAA,CAAK4X,GACH,MAAMga,EAAQjyD,KAAKgyD,aACnB,GAAIC,EAAM7uE,OAAQ,CAChB,MAAM6mC,EAASjqB,KAAKkqB,YACpB,IAAK,MAAM,MAACtmC,EAAK,MAAE2nC,KAAU0mC,EACvBhoC,EAAOrmC,KAAW2nC,GACpBtB,EAAOp+B,OAAOjI,EAAO,GAGzBoc,KAAKgyD,aAAe,EACtB,CACA9gC,MAAMmP,KAAK4X,EACb,CACAhmC,KAAAA,CAAMga,EAAKroC,GACT,GAAIxC,EAAc6qC,GAChB,OAAO,KAET,MAAMhC,EAASjqB,KAAKkqB,YAGpB,MA5BewU,EAAC96C,EAAO8E,IAAkB,OAAV9E,EAAiB,KAAO8G,EAAY7D,KAAKc,MAAM/D,GAAQ,EAAG8E,GA4BlFg2C,CAFP96C,EAAQ3B,SAAS2B,IAAUqmC,EAAOrmC,KAAWqoC,EAAMroC,EAC/C4tE,GAAevnC,EAAQgC,EAAK7pC,EAAewB,EAAOqoC,GAAMjsB,KAAKgyD,cACxC/nC,EAAO7mC,OAAS,EAC3C,CACAg+C,mBAAAA,GACE,MAAM,WAACxzC,EAAU,WAAEC,GAAcmS,KAAKlS,gBACtC,IAAI,IAACrF,EAAG,IAAEC,GAAOsX,KAAK2qB,WAAU,GACJ,UAAxB3qB,KAAKxb,QAAQo3B,SACVhuB,IACHnF,EAAM,GAEHoF,IACHnF,EAAMsX,KAAKkqB,YAAY9mC,OAAS,IAGpC4c,KAAKvX,IAAMA,EACXuX,KAAKtX,IAAMA,CACb,CACAi5C,UAAAA,GACE,MAAMl5C,EAAMuX,KAAKvX,IACXC,EAAMsX,KAAKtX,IACXqrC,EAAS/zB,KAAKxb,QAAQuvC,OACtBzE,EAAQ,GACd,IAAIrF,EAASjqB,KAAKkqB,YAClBD,EAAkB,IAARxhC,GAAaC,IAAQuhC,EAAO7mC,OAAS,EAAK6mC,EAASA,EAAOpoC,MAAM4G,EAAKC,EAAM,GACrFsX,KAAK+xD,YAAclrE,KAAK6B,IAAIuhC,EAAO7mC,QAAU2wC,EAAS,EAAI,GAAI,GAC9D/zB,KAAK8xD,YAAc9xD,KAAKvX,KAAOsrC,EAAS,GAAM,GAC9C,IAAK,IAAI1yC,EAAQoH,EAAKpH,GAASqH,EAAKrH,IAClCiuC,EAAMzpC,KAAK,CAACxE,UAEd,OAAOiuC,CACT,CACA9D,gBAAAA,CAAiBnqC,GACf,MAAM4oC,EAASjqB,KAAKkqB,YACpB,OAAI7oC,GAAS,GAAKA,EAAQ4oC,EAAO7mC,OACxB6mC,EAAO5oC,GAETA,CACT,CACAuhC,SAAAA,GACEsO,MAAMtO,YACD5iB,KAAKqxB,iBACRrxB,KAAK6/B,gBAAkB7/B,KAAK6/B,eAEhC,CACA9xC,gBAAAA,CAAiB1M,GAIf,MAHqB,kBAAVA,IACTA,EAAQ2e,KAAKiS,MAAM5wB,IAEJ,OAAVA,EAAiBqpC,IAAM1qB,KAAKizB,oBAAoB5xC,EAAQ2e,KAAK8xD,aAAe9xD,KAAK+xD,YAC1F,CACAxiC,eAAAA,CAAgB3rC,GACd,MAAM0rC,EAAQtvB,KAAKsvB,MACnB,OAAI1rC,EAAQ,GAAKA,EAAQ0rC,EAAMlsC,OAAS,EAC/B,KAEF4c,KAAKjS,iBAAiBuhC,EAAM1rC,GAAOvC,MAC5C,CACA+jD,gBAAAA,CAAiBp+B,GACf,OAAOngB,KAAKc,MAAMqY,KAAK8xD,YAAc9xD,KAAKslC,mBAAmBt+B,GAAShH,KAAK+xD,YAC7E,CACA3gC,YAAAA,GACE,OAAOpxB,KAAKsJ,MACd,EASF,SAAS4oD,GAAgBC,EAAmBC,GAC1C,MAAM9iC,EAAQ,IAER,OAAC1T,EAAM,KAAEkrB,EAAI,IAAEr+C,EAAG,IAAEC,EAAG,UAAE2pE,EAAS,MAAE9kE,EAAK,SAAE+kE,EAAQ,UAAEC,EAAS,cAAEC,GAAiBL,EACjFllB,EAAOnG,GAAQ,EACf2rB,EAAYH,EAAW,GACtB7pE,IAAKiqE,EAAMhqE,IAAKiqE,GAAQP,EACzBxkE,GAAcxM,EAAcqH,GAC5BoF,GAAczM,EAAcsH,GAC5BkqE,GAAgBxxE,EAAcmM,GAC9BslE,GAAcF,EAAOD,IAASH,EAAY,GAChD,IACInyC,EAAQ0yC,EAASC,EAASC,EAD1Bh+B,EAAUxtC,GAASmrE,EAAOD,GAAQD,EAAYxlB,GAAQA,EAE1D,GAAIjY,EAXgB,QAWUpnC,IAAeC,EAC3C,MAAO,CAAC,CAACxM,MAAOqxE,GAAO,CAACrxE,MAAOsxE,IAEjCK,EAAYnsE,KAAKy1C,KAAKq2B,EAAO39B,GAAWnuC,KAAKkB,MAAM2qE,EAAO19B,GACtDg+B,EAAYP,IACdz9B,EAAUxtC,EAAQwrE,EAAYh+B,EAAUy9B,EAAYxlB,GAAQA,GAEzD7rD,EAAcixE,KACjBjyC,EAASv5B,KAAKiB,IAAI,GAAIuqE,GACtBr9B,EAAUnuC,KAAKy1C,KAAKtH,EAAU5U,GAAUA,GAE3B,UAAXxE,GACFk3C,EAAUjsE,KAAKkB,MAAM2qE,EAAO19B,GAAWA,EACvC+9B,EAAUlsE,KAAKy1C,KAAKq2B,EAAO39B,GAAWA,IAEtC89B,EAAUJ,EACVK,EAAUJ,GAER/kE,GAAcC,GAAci5C,GD/gSlC,SAAqB3hD,EAAGiD,GACtB,MAAM6qE,EAAUpsE,KAAKc,MAAMxC,GAC3B,OAAS8tE,EAAU7qE,GAAYjD,GAAQ8tE,EAAU7qE,GAAYjD,CAC/D,CC4gS0C+tE,EAAaxqE,EAAMD,GAAOq+C,EAAM9R,EAAU,MAChFg+B,EAAYnsE,KAAKc,MAAMd,KAAK4B,KAAKC,EAAMD,GAAOusC,EAASs9B,IACvDt9B,GAAWtsC,EAAMD,GAAOuqE,EACxBF,EAAUrqE,EACVsqE,EAAUrqE,GACDkqE,GACTE,EAAUllE,EAAanF,EAAMqqE,EAC7BC,EAAUllE,EAAanF,EAAMqqE,EAC7BC,EAAYzlE,EAAQ,EACpBynC,GAAW+9B,EAAUD,GAAWE,IAEhCA,GAAaD,EAAUD,GAAW99B,EAEhCg+B,EADEprE,EAAaorE,EAAWnsE,KAAKc,MAAMqrE,GAAYh+B,EAAU,KAC/CnuC,KAAKc,MAAMqrE,GAEXnsE,KAAKy1C,KAAK02B,IAG1B,MAAMG,EAAgBtsE,KAAK6B,IACzBK,EAAeisC,GACfjsC,EAAe+pE,IAEjB1yC,EAASv5B,KAAKiB,IAAI,GAAI1G,EAAcixE,GAAac,EAAgBd,GACjES,EAAUjsE,KAAKc,MAAMmrE,EAAU1yC,GAAUA,EACzC2yC,EAAUlsE,KAAKc,MAAMorE,EAAU3yC,GAAUA,EACzC,IAAI1hB,EAAI,EAcR,IAbI9Q,IACE4kE,GAAiBM,IAAYrqE,GAC/B6mC,EAAMzpC,KAAK,CAACxE,MAAOoH,IACfqqE,EAAUrqE,GACZiW,IAEE9W,EAAaf,KAAKc,OAAOmrE,EAAUp0D,EAAIs2B,GAAW5U,GAAUA,EAAQ33B,EAAK2qE,GAAkB3qE,EAAKoqE,EAAYV,KAC9GzzD,KAEOo0D,EAAUrqE,GACnBiW,KAGGA,EAAIs0D,IAAat0D,EACtB4wB,EAAMzpC,KAAK,CAACxE,MAAOwF,KAAKc,OAAOmrE,EAAUp0D,EAAIs2B,GAAW5U,GAAUA,IAWpE,OATIvyB,GAAc2kE,GAAiBO,IAAYrqE,EACzC4mC,EAAMlsC,QAAUwE,EAAa0nC,EAAMA,EAAMlsC,OAAS,GAAG/B,MAAOqH,EAAK0qE,GAAkB1qE,EAAKmqE,EAAYV,IACtG7iC,EAAMA,EAAMlsC,OAAS,GAAG/B,MAAQqH,EAEhC4mC,EAAMzpC,KAAK,CAACxE,MAAOqH,IAEXmF,GAAcklE,IAAYrqE,GACpC4mC,EAAMzpC,KAAK,CAACxE,MAAO0xE,IAEdzjC,CACT,CACA,SAAS8jC,GAAkB/xE,EAAOwxE,EAAUQ,GAA6B,IAA3B,WAAC/iC,EAAU,YAAEkN,GAAY61B,EACrE,MAAMprD,EAAMtf,EAAU60C,GAChBn+B,GAASixB,EAAazpC,KAAKiI,IAAImZ,GAAOphB,KAAKkJ,IAAIkY,KAAS,KACxD7kB,EAAS,IAAOyvE,GAAc,GAAKxxE,GAAO+B,OAChD,OAAOyD,KAAK4B,IAAIoqE,EAAaxzD,EAAOjc,EACtC,CAhGAyuE,GAAc1wE,GAAK,WACnB0wE,GAAcvvD,SAAW,CACvBgtB,MAAO,CACL7sC,SAAUovE,GAAcnwE,UAAU8pC,mBA8FtC,MAAM8nC,WAAwBr0B,GAC5Bp/B,WAAAA,CAAY2gB,GACV0Q,MAAM1Q,GACNxgB,KAAK9V,WAAQW,EACbmV,KAAK7V,SAAMU,EACXmV,KAAK8xD,iBAAcjnE,EACnBmV,KAAKuzD,eAAY1oE,EACjBmV,KAAK+xD,YAAc,CACrB,CACA9/C,KAAAA,CAAMga,EAAKroC,GACT,OAAIxC,EAAc6qC,KAGE,kBAARA,GAAoBA,aAAejqC,UAAYC,UAAUgqC,GAF5D,MAKDA,CACV,CACAunC,sBAAAA,GACE,MAAM,YAACt/B,GAAel0B,KAAKxb,SACrB,WAACoJ,EAAU,WAAEC,GAAcmS,KAAKlS,gBACtC,IAAI,IAACrF,EAAG,IAAEC,GAAOsX,KACjB,MAAMyzD,EAASvuE,GAAMuD,EAAMmF,EAAanF,EAAMvD,EACxCwuE,EAASxuE,GAAMwD,EAAMmF,EAAanF,EAAMxD,EAC9C,GAAIgvC,EAAa,CACf,MAAMy/B,EAAUpsE,EAAKkB,GACfmrE,EAAUrsE,EAAKmB,GACjBirE,EAAU,GAAKC,EAAU,EAC3BF,EAAO,GACEC,EAAU,GAAKC,EAAU,GAClCH,EAAO,EAEX,CACA,GAAIhrE,IAAQC,EAAK,CACf,IAAIqrC,EAAS,GACTrrC,GAAO1G,OAAO6xE,kBAAoBprE,GAAOzG,OAAO8xE,oBAClD//B,EAASltC,KAAKwB,IAAU,IAANK,IAEpBgrE,EAAOhrE,EAAMqrC,GACRG,GACHu/B,EAAOhrE,EAAMsrC,EAEjB,CACA/zB,KAAKvX,IAAMA,EACXuX,KAAKtX,IAAMA,CACb,CACAqrE,YAAAA,GACE,MAAMz4B,EAAWt7B,KAAKxb,QAAQ8qC,MAC9B,IACIgjC,GADA,cAAC92B,EAAa,SAAEw4B,GAAY14B,EAehC,OAbI04B,GACF1B,EAAWzrE,KAAKy1C,KAAKt8B,KAAKtX,IAAMsrE,GAAYntE,KAAKkB,MAAMiY,KAAKvX,IAAMurE,GAAY,EAC1E1B,EAAW,MACbjlD,QAAQC,KAAK,UAADjN,OAAWL,KAAK7e,GAAE,qBAAAkf,OAAoB2zD,EAAQ,mCAAA3zD,OAAkCiyD,EAAQ,8BACpGA,EAAW,OAGbA,EAAWtyD,KAAKi0D,mBAChBz4B,EAAgBA,GAAiB,IAE/BA,IACF82B,EAAWzrE,KAAK4B,IAAI+yC,EAAe82B,IAE9BA,CACT,CACA2B,gBAAAA,GACE,OAAOjyE,OAAOiF,iBAChB,CACA06C,UAAAA,GACE,MAAMr3B,EAAOtK,KAAKxb,QACZ82C,EAAWhxB,EAAKglB,MACtB,IAAIgjC,EAAWtyD,KAAK+zD,eACpBzB,EAAWzrE,KAAK6B,IAAI,EAAG4pE,GACvB,MAcMhjC,EAAQ4iC,GAdkB,CAC9BI,WACA12C,OAAQtR,EAAKsR,OACbnzB,IAAK6hB,EAAK7hB,IACVC,IAAK4hB,EAAK5hB,IACV2pE,UAAW/2B,EAAS+2B,UACpBvrB,KAAMxL,EAAS04B,SACfzmE,MAAO+tC,EAAS/tC,MAChBglE,UAAWvyD,KAAKkpC,aAChB5Y,WAAYtwB,KAAKqxB,eACjBmM,YAAalC,EAASkC,aAAe,EACrCg1B,eAA0C,IAA3Bl3B,EAASk3B,eAERxyD,KAAKw/B,QAAUx/B,MAajC,MAXoB,UAAhBsK,EAAKsR,QACPtzB,EAAmBgnC,EAAOtvB,KAAM,SAE9BsK,EAAKtnB,SACPssC,EAAMtsC,UACNgd,KAAK9V,MAAQ8V,KAAKtX,IAClBsX,KAAK7V,IAAM6V,KAAKvX,MAEhBuX,KAAK9V,MAAQ8V,KAAKvX,IAClBuX,KAAK7V,IAAM6V,KAAKtX,KAEX4mC,CACT,CACA1M,SAAAA,GACE,MAAM0M,EAAQtvB,KAAKsvB,MACnB,IAAIplC,EAAQ8V,KAAKvX,IACb0B,EAAM6V,KAAKtX,IAEf,GADAwoC,MAAMtO,YACF5iB,KAAKxb,QAAQuvC,QAAUzE,EAAMlsC,OAAQ,CACvC,MAAM2wC,GAAU5pC,EAAMD,GAASrD,KAAK6B,IAAI4mC,EAAMlsC,OAAS,EAAG,GAAK,EAC/D8G,GAAS6pC,EACT5pC,GAAO4pC,CACT,CACA/zB,KAAK8xD,YAAc5nE,EACnB8V,KAAKuzD,UAAYppE,EACjB6V,KAAK+xD,YAAc5nE,EAAMD,CAC3B,CACAshC,gBAAAA,CAAiBnqC,GACf,OAAOo4B,GAAap4B,EAAO2e,KAAK8C,MAAMte,QAAQm1B,OAAQ3Z,KAAKxb,QAAQ8qC,MAAMnV,OAC3E,EAGF,MAAM+5C,WAAoBZ,GACxBlyB,mBAAAA,GACE,MAAM,IAAC34C,EAAG,IAAEC,GAAOsX,KAAK2qB,WAAU,GAClC3qB,KAAKvX,IAAM1G,EAAe0G,GAAOA,EAAM,EACvCuX,KAAKtX,IAAM3G,EAAe2G,GAAOA,EAAM,EACvCsX,KAAKwzD,wBACP,CACAS,gBAAAA,GACE,MAAM3jC,EAAatwB,KAAKqxB,eAClBjuC,EAASktC,EAAatwB,KAAKoG,MAAQpG,KAAKwH,OACxCg2B,EAAc70C,EAAUqX,KAAKxb,QAAQ8qC,MAAMkO,aAC3Cn+B,GAASixB,EAAazpC,KAAKiI,IAAI0uC,GAAe32C,KAAKkJ,IAAIytC,KAAiB,KACxEoH,EAAW5kC,KAAKilC,wBAAwB,GAC9C,OAAOp+C,KAAKy1C,KAAKl5C,EAASyD,KAAK4B,IAAI,GAAIm8C,EAASthC,WAAajE,GAC/D,CACAtR,gBAAAA,CAAiB1M,GACf,OAAiB,OAAVA,EAAiBqpC,IAAM1qB,KAAKizB,oBAAoB5xC,EAAQ2e,KAAK8xD,aAAe9xD,KAAK+xD,YAC1F,CACA3sB,gBAAAA,CAAiBp+B,GACf,OAAOhH,KAAK8xD,YAAc9xD,KAAKslC,mBAAmBt+B,GAAShH,KAAK+xD,WAClE,EASF,SAASoC,GAAQC,GAEf,OAAkB,IADHA,EAAWvtE,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAM8sE,IAE1D,CAVAF,GAAY/yE,GAAK,SACjB+yE,GAAY5xD,SAAW,CACrBgtB,MAAO,CACL7sC,SAAU24C,GAAMX,WAAWC,UA8B/B,MAAM25B,WAAyBp1B,GAC7Bp/B,WAAAA,CAAY2gB,GACV0Q,MAAM1Q,GACNxgB,KAAK9V,WAAQW,EACbmV,KAAK7V,SAAMU,EACXmV,KAAK8xD,iBAAcjnE,EACnBmV,KAAK+xD,YAAc,CACrB,CACA9/C,KAAAA,CAAMga,EAAKroC,GACT,MAAMvC,EAAQiyE,GAAgB5xE,UAAUuwB,MAAMpvB,MAAMmd,KAAM,CAACisB,EAAKroC,IAChE,GAAc,IAAVvC,EAIJ,OAAOU,EAAeV,IAAUA,EAAQ,EAAIA,EAAQ,KAHlD2e,KAAKs0D,OAAQ,CAIjB,CACAlzB,mBAAAA,GACE,MAAM,IAAC34C,EAAG,IAAEC,GAAOsX,KAAK2qB,WAAU,GAClC3qB,KAAKvX,IAAM1G,EAAe0G,GAAO5B,KAAK6B,IAAI,EAAGD,GAAO,KACpDuX,KAAKtX,IAAM3G,EAAe2G,GAAO7B,KAAK6B,IAAI,EAAGA,GAAO,KAChDsX,KAAKxb,QAAQ0vC,cACfl0B,KAAKs0D,OAAQ,GAEft0D,KAAKwzD,wBACP,CACAA,sBAAAA,GACE,MAAM,WAAC5lE,EAAU,WAAEC,GAAcmS,KAAKlS,gBACtC,IAAIrF,EAAMuX,KAAKvX,IACXC,EAAMsX,KAAKtX,IACf,MAAM+qE,EAASvuE,GAAMuD,EAAMmF,EAAanF,EAAMvD,EACxCwuE,EAASxuE,GAAMwD,EAAMmF,EAAanF,EAAMxD,EACxCqvE,EAAMA,CAACrvE,EAAG8L,IAAMnK,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAMpC,IAAM8L,GACtDvI,IAAQC,IACND,GAAO,GACTgrE,EAAO,GACPC,EAAO,MAEPD,EAAOc,EAAI9rE,GAAM,IACjBirE,EAAOa,EAAI7rE,EAAK,MAGhBD,GAAO,GACTgrE,EAAOc,EAAI7rE,GAAM,IAEfA,GAAO,GACTgrE,EAAOa,EAAI9rE,EAAK,IAEduX,KAAKs0D,OAASt0D,KAAKvX,MAAQuX,KAAKigC,eAAiBx3C,IAAQ8rE,EAAIv0D,KAAKvX,IAAK,IACzEgrE,EAAOc,EAAI9rE,GAAM,IAEnBuX,KAAKvX,IAAMA,EACXuX,KAAKtX,IAAMA,CACb,CACAi5C,UAAAA,GACE,MAAMr3B,EAAOtK,KAAKxb,QAKZ8qC,EAjFV,SAAuB6iC,EAAmBC,GACxC,MAAMoC,EAAS3tE,KAAKkB,MAAMT,EAAM8qE,EAAU1pE,MACpC+rE,EAAiB5tE,KAAKy1C,KAAK81B,EAAU1pE,IAAM7B,KAAKiB,IAAI,GAAI0sE,IACxDllC,EAAQ,GACd,IAAI8kC,EAAUlyE,EAAgBiwE,EAAkB1pE,IAAK5B,KAAKiB,IAAI,GAAIjB,KAAKkB,MAAMT,EAAM8qE,EAAU3pE,QACzF8rE,EAAM1tE,KAAKkB,MAAMT,EAAM8sE,IACvBM,EAAc7tE,KAAKkB,MAAMqsE,EAAUvtE,KAAKiB,IAAI,GAAIysE,IAChDlC,EAAYkC,EAAM,EAAI1tE,KAAKiB,IAAI,GAAIjB,KAAKwB,IAAIksE,IAAQ,EACxD,GACEjlC,EAAMzpC,KAAK,CAACxE,MAAO+yE,EAASp4B,MAAOm4B,GAAQC,OACzCM,EACkB,KAAhBA,IACFA,EAAc,IACZH,EACFlC,EAAYkC,GAAO,EAAI,EAAIlC,GAE7B+B,EAAUvtE,KAAKc,MAAM+sE,EAAc7tE,KAAKiB,IAAI,GAAIysE,GAAOlC,GAAaA,QAC7DkC,EAAMC,GAAWD,IAAQC,GAAUE,EAAcD,GAC1D,MAAME,EAAWzyE,EAAgBiwE,EAAkBzpE,IAAK0rE,GAExD,OADA9kC,EAAMzpC,KAAK,CAACxE,MAAOszE,EAAU34B,MAAOm4B,GAAQC,KACrC9kC,CACT,CA4DkBslC,CAJY,CACxBnsE,IAAKuX,KAAK+/B,SACVr3C,IAAKsX,KAAK8/B,UAEmC9/B,MAY/C,MAXoB,UAAhBsK,EAAKsR,QACPtzB,EAAmBgnC,EAAOtvB,KAAM,SAE9BsK,EAAKtnB,SACPssC,EAAMtsC,UACNgd,KAAK9V,MAAQ8V,KAAKtX,IAClBsX,KAAK7V,IAAM6V,KAAKvX,MAEhBuX,KAAK9V,MAAQ8V,KAAKvX,IAClBuX,KAAK7V,IAAM6V,KAAKtX,KAEX4mC,CACT,CACA9D,gBAAAA,CAAiBnqC,GACf,YAAiBwJ,IAAVxJ,EACH,IACAo4B,GAAap4B,EAAO2e,KAAK8C,MAAMte,QAAQm1B,OAAQ3Z,KAAKxb,QAAQ8qC,MAAMnV,OACxE,CACAyI,SAAAA,GACE,MAAM14B,EAAQ8V,KAAKvX,IACnByoC,MAAMtO,YACN5iB,KAAK8xD,YAAcxqE,EAAM4C,GACzB8V,KAAK+xD,YAAczqE,EAAM0Y,KAAKtX,KAAOpB,EAAM4C,EAC7C,CACA6D,gBAAAA,CAAiB1M,GAIf,YAHcwJ,IAAVxJ,GAAiC,IAAVA,IACzBA,EAAQ2e,KAAKvX,KAED,OAAVpH,GAAkB8G,MAAM9G,GACnBqpC,IAEF1qB,KAAKizB,mBAAmB5xC,IAAU2e,KAAKvX,IAC1C,GACCnB,EAAMjG,GAAS2e,KAAK8xD,aAAe9xD,KAAK+xD,YAC/C,CACA3sB,gBAAAA,CAAiBp+B,GACf,MAAMq+B,EAAUrlC,KAAKslC,mBAAmBt+B,GACxC,OAAOngB,KAAKiB,IAAI,GAAIkY,KAAK8xD,YAAczsB,EAAUrlC,KAAK+xD,YACxD,EAYF,SAAS8C,GAAsBvqD,GAC7B,MAAMgxB,EAAWhxB,EAAKglB,MACtB,GAAIgM,EAAS5B,SAAWpvB,EAAKovB,QAAS,CACpC,MAAM6D,EAAUrwB,GAAUouB,EAAS6C,iBACnC,OAAO/7C,EAAek5C,EAASn4B,MAAQm4B,EAASn4B,KAAK1c,KAAM6b,GAASa,KAAK1c,MAAQ82C,EAAQ/1B,MAC3F,CACA,OAAO,CACT,CAQA,SAASstD,GAAgBrrE,EAAOysB,EAAKzvB,EAAMgC,EAAKC,GAC9C,OAAIe,IAAUhB,GAAOgB,IAAUf,EACtB,CACLwB,MAAOgsB,EAAOzvB,EAAO,EACrB0D,IAAK+rB,EAAOzvB,EAAO,GAEZgD,EAAQhB,GAAOgB,EAAQf,EACzB,CACLwB,MAAOgsB,EAAMzvB,EACb0D,IAAK+rB,GAGF,CACLhsB,MAAOgsB,EACP/rB,IAAK+rB,EAAMzvB,EAEf,CACA,SAASsuE,GAAmBxwD,GAC1B,MAAMmsB,EAAO,CACXt/B,EAAGmT,EAAM4E,KAAO5E,EAAMywD,SAAS7rD,KAC/B3W,EAAG+R,EAAM6E,MAAQ7E,EAAMywD,SAAS5rD,MAChCxa,EAAG2V,EAAM8E,IAAM9E,EAAMywD,SAAS3rD,IAC9B7iB,EAAG+d,EAAM+E,OAAS/E,EAAMywD,SAAS1rD,QAE7B2rD,EAASxzE,OAAOiN,OAAO,CAAC,EAAGgiC,GAC3BwS,EAAa,GACb3F,EAAU,GACV23B,EAAa3wD,EAAM4wD,aAAa/xE,OAChCgyE,EAAiB7wD,EAAM/f,QAAQo1C,YAC/By7B,EAAkBD,EAAeE,kBAAoB1uE,EAAKsuE,EAAa,EAC7E,IAAK,IAAIjyE,EAAI,EAAGA,EAAIiyE,EAAYjyE,IAAK,CACnC,MAAMqnB,EAAO8qD,EAAejlD,WAAW5L,EAAMgxD,qBAAqBtyE,IAClEs6C,EAAQt6C,GAAKqnB,EAAKizB,QAClB,MAAMvD,EAAgBz1B,EAAMixD,iBAAiBvyE,EAAGshB,EAAMkxD,YAAcl4B,EAAQt6C,GAAIoyE,GAC1EK,EAASvoD,GAAO7C,EAAKnH,MACrBwyD,GA1CgBlyD,EA0CYc,EAAMd,IA1CbN,EA0CkBuyD,EAzC/CnqC,EAAQjqC,EAD2BiqC,EA0CoBhnB,EAAM4wD,aAAalyE,IAzCjDsoC,EAAQ,CAACA,GAC3B,CACLv4B,EAAGqT,GAAa5C,EAAKN,EAAK8C,OAAQslB,GAClCl6B,EAAGk6B,EAAMnoC,OAAS+f,EAAKG,aAuCvB4/B,EAAWjgD,GAAK0yE,EAChB,MAAM9xB,EAAe75C,EAAgBua,EAAM60B,cAAcn2C,GAAKoyE,GACxD5rE,EAAQ5C,KAAKc,MAAMkB,EAAUg7C,IAGnC+xB,GAAaX,EAAQvkC,EAAMmT,EAFXixB,GAAgBrrE,EAAOuwC,EAAc70C,EAAGwwE,EAAS3iE,EAAG,EAAG,KACvD8hE,GAAgBrrE,EAAOuwC,EAAc30C,EAAGswE,EAAStkE,EAAG,GAAI,KAE1E,CAjDF,IAA0BoS,EAAKN,EAAMooB,EAkDnChnB,EAAMsxD,eACJnlC,EAAKt/B,EAAI6jE,EAAO7jE,EAChB6jE,EAAOziE,EAAIk+B,EAAKl+B,EAChBk+B,EAAK9hC,EAAIqmE,EAAOrmE,EAChBqmE,EAAOzuE,EAAIkqC,EAAKlqC,GAElB+d,EAAMuxD,iBAsBR,SAA8BvxD,EAAO2+B,EAAY3F,GAC/C,MAAMvxC,EAAQ,GACRkpE,EAAa3wD,EAAM4wD,aAAa/xE,OAChCknB,EAAO/F,EAAM/f,QACbuxE,EAAQlB,GAAsBvqD,GAAQ,EACtC0rD,EAAgBzxD,EAAMkxD,YACtBJ,EAAkB/qD,EAAKsvB,YAAY07B,kBAAoB1uE,EAAKsuE,EAAa,EAC/E,IAAK,IAAIjyE,EAAI,EAAGA,EAAIiyE,EAAYjyE,IAAK,CACnC,MAAMgzE,EAAqB1xD,EAAMixD,iBAAiBvyE,EAAG+yE,EAAgBD,EAAQx4B,EAAQt6C,GAAIoyE,GACnF5rE,EAAQ5C,KAAKc,MAAMkB,EAAUmB,EAAgBisE,EAAmBxsE,MAAQtC,KACxEV,EAAOy8C,EAAWjgD,GAClBoC,EAAI6wE,GAAUD,EAAmB5wE,EAAGoB,EAAK4K,EAAG5H,GAC5CohB,EAAYsrD,GAAqB1sE,GACjC0f,EAAOitD,GAAiBH,EAAmB9wE,EAAGsB,EAAKuM,EAAG6X,GAC5D7e,EAAMnG,KAAK,CACTV,EAAG8wE,EAAmB9wE,EACtBE,IACAwlB,YACA1B,OACAE,IAAKhkB,EACL+jB,MAAOD,EAAO1iB,EAAKuM,EACnBsW,OAAQjkB,EAAIoB,EAAK4K,GAErB,CACA,OAAOrF,CACT,CA/C2BqqE,CAAqB9xD,EAAO2+B,EAAY3F,EACnE,CACA,SAASq4B,GAAaX,EAAQvkC,EAAMjnC,EAAO6sE,EAASC,GAClD,MAAMznE,EAAMjI,KAAKwB,IAAIxB,KAAKiI,IAAIrF,IACxBsG,EAAMlJ,KAAKwB,IAAIxB,KAAKkJ,IAAItG,IAC9B,IAAItE,EAAI,EACJE,EAAI,EACJixE,EAAQpsE,MAAQwmC,EAAKt/B,GACvBjM,GAAKurC,EAAKt/B,EAAIklE,EAAQpsE,OAAS4E,EAC/BmmE,EAAO7jE,EAAIvK,KAAK4B,IAAIwsE,EAAO7jE,EAAGs/B,EAAKt/B,EAAIjM,IAC9BmxE,EAAQnsE,IAAMumC,EAAKl+B,IAC5BrN,GAAKmxE,EAAQnsE,IAAMumC,EAAKl+B,GAAK1D,EAC7BmmE,EAAOziE,EAAI3L,KAAK6B,IAAIusE,EAAOziE,EAAGk+B,EAAKl+B,EAAIrN,IAErCoxE,EAAQrsE,MAAQwmC,EAAK9hC,GACvBvJ,GAAKqrC,EAAK9hC,EAAI2nE,EAAQrsE,OAAS6F,EAC/BklE,EAAOrmE,EAAI/H,KAAK4B,IAAIwsE,EAAOrmE,EAAG8hC,EAAK9hC,EAAIvJ,IAC9BkxE,EAAQpsE,IAAMumC,EAAKlqC,IAC5BnB,GAAKkxE,EAAQpsE,IAAMumC,EAAKlqC,GAAKuJ,EAC7BklE,EAAOzuE,EAAIK,KAAK6B,IAAIusE,EAAOzuE,EAAGkqC,EAAKlqC,EAAInB,GAE3C,CA2BA,SAAS8wE,GAAqB1sE,GAC5B,OAAc,IAAVA,GAAyB,MAAVA,EACV,SACEA,EAAQ,IACV,OAEF,OACT,CACA,SAAS2sE,GAAiBjxE,EAAG6N,EAAGhG,GAM9B,MALc,UAAVA,EACF7H,GAAK6N,EACc,WAAVhG,IACT7H,GAAM6N,EAAI,GAEL7N,CACT,CACA,SAAS+wE,GAAU7wE,EAAGgM,EAAG5H,GAMvB,OALc,KAAVA,GAA0B,MAAVA,EAClBpE,GAAMgM,EAAI,GACD5H,EAAQ,KAAOA,EAAQ,MAChCpE,GAAKgM,GAEAhM,CACT,CA4CA,SAASmxE,GAAejyD,EAAOyD,EAAQ2xB,EAAU88B,GAC/C,MAAM,IAAChzD,GAAOc,EACd,GAAIo1B,EACFl2B,EAAI6E,IAAI/D,EAAM00B,QAAS10B,EAAM20B,QAASlxB,EAAQ,EAAGlhB,OAC5C,CACL,IAAIkzC,EAAgBz1B,EAAMixD,iBAAiB,EAAGxtD,GAC9CvE,EAAI+E,OAAOwxB,EAAc70C,EAAG60C,EAAc30C,GAC1C,IAAK,IAAIpC,EAAI,EAAGA,EAAIwzE,EAAYxzE,IAC9B+2C,EAAgBz1B,EAAMixD,iBAAiBvyE,EAAG+kB,GAC1CvE,EAAIgF,OAAOuxB,EAAc70C,EAAG60C,EAAc30C,EAE9C,CACF,CAzMAgvE,GAAiBlzE,GAAK,cACtBkzE,GAAiB/xD,SAAW,CAC1BgtB,MAAO,CACL7sC,SAAU24C,GAAMX,WAAWU,YAC3Ba,MAAO,CACLC,SAAS,KA8Nf,MAAMy6B,WAA0BpD,GAC9BzzD,WAAAA,CAAY2gB,GACV0Q,MAAM1Q,GACNxgB,KAAKi5B,aAAUpuC,EACfmV,KAAKk5B,aAAUruC,EACfmV,KAAKy1D,iBAAc5qE,EACnBmV,KAAKm1D,aAAe,GACpBn1D,KAAK81D,iBAAmB,EAC1B,CACA70B,aAAAA,GACE,MAAM1D,EAAUv9B,KAAKg1D,SAAW9nD,GAAU2nD,GAAsB70D,KAAKxb,SAAW,GAC1EwO,EAAIgN,KAAKoG,MAAQpG,KAAKmL,SAAWoyB,EAAQn3B,MACzC/U,EAAI2O,KAAKwH,OAASxH,KAAKyX,UAAY8lB,EAAQ/1B,OACjDxH,KAAKi5B,QAAUpyC,KAAKkB,MAAMiY,KAAKmJ,KAAOnW,EAAI,EAAIuqC,EAAQp0B,MACtDnJ,KAAKk5B,QAAUryC,KAAKkB,MAAMiY,KAAKqJ,IAAMhY,EAAI,EAAIksC,EAAQl0B,KACrDrJ,KAAKy1D,YAAc5uE,KAAKkB,MAAMlB,KAAK4B,IAAIuK,EAAG3B,GAAK,EACjD,CACA+vC,mBAAAA,GACE,MAAM,IAAC34C,EAAG,IAAEC,GAAOsX,KAAK2qB,WAAU,GAClC3qB,KAAKvX,IAAM1G,EAAe0G,KAASN,MAAMM,GAAOA,EAAM,EACtDuX,KAAKtX,IAAM3G,EAAe2G,KAASP,MAAMO,GAAOA,EAAM,EACtDsX,KAAKwzD,wBACP,CACAS,gBAAAA,GACE,OAAOptE,KAAKy1C,KAAKt8B,KAAKy1D,YAAcZ,GAAsB70D,KAAKxb,SACjE,CACAq+C,kBAAAA,CAAmBvT,GACjBgkC,GAAgB5xE,UAAUmhD,mBAAmBjhD,KAAKoe,KAAMsvB,GACxDtvB,KAAKm1D,aAAen1D,KAAKkqB,YACtBnmC,KAAI,CAAC1C,EAAOuC,KACX,MAAM2nC,EAAQ9oC,EAASud,KAAKxb,QAAQo1C,YAAYn3C,SAAU,CAACpB,EAAOuC,GAAQoc,MAC1E,OAAOurB,GAAmB,IAAVA,EAAcA,EAAQ,EAAE,IAEzC3a,QAAO,CAAC1rB,EAAGjC,IAAM+c,KAAK8C,MAAMgwB,kBAAkB7vC,IACnD,CACAm/C,GAAAA,GACE,MAAM93B,EAAOtK,KAAKxb,QACd8lB,EAAKovB,SAAWpvB,EAAKsvB,YAAYF,QACnCq7B,GAAmB/0D,MAEnBA,KAAK61D,eAAe,EAAG,EAAG,EAAG,EAEjC,CACAA,cAAAA,CAAec,EAAcC,EAAeC,EAAaC,GACvD92D,KAAKi5B,SAAWpyC,KAAKkB,OAAO4uE,EAAeC,GAAiB,GAC5D52D,KAAKk5B,SAAWryC,KAAKkB,OAAO8uE,EAAcC,GAAkB,GAC5D92D,KAAKy1D,aAAe5uE,KAAK4B,IAAIuX,KAAKy1D,YAAc,EAAG5uE,KAAK6B,IAAIiuE,EAAcC,EAAeC,EAAaC,GACxG,CACA19B,aAAAA,CAAcx1C,GAGZ,OAAOoG,EAAgBpG,GAFCkD,GAAOkZ,KAAKm1D,aAAa/xE,QAAU,IAEVuF,EAD9BqX,KAAKxb,QAAQkxC,YAAc,GAEhD,CACA8D,6BAAAA,CAA8Bn4C,GAC5B,GAAID,EAAcC,GAChB,OAAOqpC,IAET,MAAMqsC,EAAgB/2D,KAAKy1D,aAAez1D,KAAKtX,IAAMsX,KAAKvX,KAC1D,OAAIuX,KAAKxb,QAAQxB,SACPgd,KAAKtX,IAAMrH,GAAS01E,GAEtB11E,EAAQ2e,KAAKvX,KAAOsuE,CAC9B,CACAC,6BAAAA,CAA8BrtE,GAC5B,GAAIvI,EAAcuI,GAChB,OAAO+gC,IAET,MAAMusC,EAAiBttE,GAAYqW,KAAKy1D,aAAez1D,KAAKtX,IAAMsX,KAAKvX,MACvE,OAAOuX,KAAKxb,QAAQxB,QAAUgd,KAAKtX,IAAMuuE,EAAiBj3D,KAAKvX,IAAMwuE,CACvE,CACA1B,oBAAAA,CAAqB3xE,GACnB,MAAMg2C,EAAc55B,KAAKm1D,cAAgB,GACzC,GAAIvxE,GAAS,GAAKA,EAAQg2C,EAAYx2C,OAAQ,CAC5C,MAAM8zE,EAAat9B,EAAYh2C,GAC/B,OAjFN,SAAiC0tB,EAAQ1tB,EAAO2nC,GAC9C,OAAO3d,GAAc0D,EAAQ,CAC3Bia,QACA3nC,QACApC,KAAM,cAEV,CA2Ea21E,CAAwBn3D,KAAKqH,aAAczjB,EAAOszE,EAC3D,CACF,CACA1B,gBAAAA,CAAiB5xE,EAAOwzE,GAAyC,IAArB/B,EAAezqE,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC5D,MAAMnB,EAAQuW,KAAKo5B,cAAcx1C,GAASuD,EAAUkuE,EACpD,MAAO,CACLlwE,EAAG0B,KAAKkJ,IAAItG,GAAS2tE,EAAqBp3D,KAAKi5B,QAC/C5zC,EAAGwB,KAAKiI,IAAIrF,GAAS2tE,EAAqBp3D,KAAKk5B,QAC/CzvC,QAEJ,CACAwwC,wBAAAA,CAAyBr2C,EAAOvC,GAC9B,OAAO2e,KAAKw1D,iBAAiB5xE,EAAOoc,KAAKw5B,8BAA8Bn4C,GACzE,CACAg2E,eAAAA,CAAgBzzE,GACd,OAAOoc,KAAKi6B,yBAAyBr2C,GAAS,EAAGoc,KAAKulC,eACxD,CACA+xB,qBAAAA,CAAsB1zE,GACpB,MAAM,KAACulB,EAAI,IAAEE,EAAG,MAAED,EAAK,OAAEE,GAAUtJ,KAAK81D,iBAAiBlyE,GACzD,MAAO,CACLulB,OACAE,MACAD,QACAE,SAEJ,CACAy+B,cAAAA,GACE,MAAM,gBAACtlC,EAAiBuxB,MAAM,SAAC2F,IAAa35B,KAAKxb,QACjD,GAAIie,EAAiB,CACnB,MAAMgB,EAAMzD,KAAKyD,IACjBA,EAAIgD,OACJhD,EAAI2E,YACJouD,GAAex2D,KAAMA,KAAKw5B,8BAA8Bx5B,KAAKuzD,WAAY55B,EAAU35B,KAAKm1D,aAAa/xE,QACrGqgB,EAAI8E,YACJ9E,EAAImH,UAAYnI,EAChBgB,EAAImF,OACJnF,EAAIoD,SACN,CACF,CACAqhC,QAAAA,GACE,MAAMzkC,EAAMzD,KAAKyD,IACX6G,EAAOtK,KAAKxb,SACZ,WAACi1C,EAAU,KAAEzF,GAAQ1pB,EACrBmsD,EAAaz2D,KAAKm1D,aAAa/xE,OACrC,IAAIH,EAAG8wC,EAAQgL,EAaf,GAZIz0B,EAAKsvB,YAAYF,SAxMzB,SAAyBn1B,EAAOkyD,GAC9B,MAAM,IAAChzD,EAAKjf,SAAS,YAACo1C,IAAgBr1B,EACtC,IAAK,IAAIthB,EAAIwzE,EAAa,EAAGxzE,GAAK,EAAGA,IAAK,CACxC,MAAM8jD,EAAcnN,EAAYzpB,WAAW5L,EAAMgxD,qBAAqBtyE,IAChEyyE,EAASvoD,GAAO45B,EAAY5jC,OAC5B,EAAChe,EAAC,EAAEE,EAAC,UAAEwlB,EAAS,KAAE1B,EAAI,IAAEE,EAAG,MAAED,EAAK,OAAEE,GAAU/E,EAAMuxD,iBAAiB7yE,IACrE,cAACi7C,GAAiB6I,EACxB,IAAK3lD,EAAc88C,GAAgB,CACjC,MAAMikB,EAAel1C,GAAc85B,EAAYob,cACzC5kB,EAAUrwB,GAAU65B,EAAY5I,iBACtC16B,EAAImH,UAAYszB,EAChB,MAAMq5B,EAAepuD,EAAOo0B,EAAQp0B,KAC9BquD,EAAcnuD,EAAMk0B,EAAQl0B,IAC5BouD,EAAgBruD,EAAQD,EAAOo0B,EAAQn3B,MACvCsxD,EAAiBpuD,EAASD,EAAMk0B,EAAQ/1B,OAC1C/lB,OAAO4gB,OAAO8/C,GAAcxK,MAAKzyD,GAAW,IAANA,KACxCue,EAAI2E,YACJ2D,GAAmBtI,EAAK,CACtBte,EAAGoyE,EACHlyE,EAAGmyE,EACHxkE,EAAGykE,EACHpmE,EAAGqmE,EACH1vD,OAAQm6C,IAEV1+C,EAAImF,QAEJnF,EAAIukC,SAASuvB,EAAcC,EAAaC,EAAeC,EAE3D,CACAttD,GACE3G,EACAc,EAAM4wD,aAAalyE,GACnBkC,EACAE,EAAKqwE,EAAOpyD,WAAa,EACzBoyD,EACA,CACEl1D,MAAOumC,EAAYvmC,MACnBqK,UAAWA,EACXC,aAAc,UAGpB,CACF,CA+JM6sD,CAAgB33D,KAAMy2D,GAEpBziC,EAAK0F,SACP15B,KAAKsvB,MAAMxjC,SAAQ,CAACozB,EAAMt7B,KACxB,GAAc,IAAVA,EAAa,CACfmwC,EAAS/zB,KAAKw5B,8BAA8Bta,EAAK79B,QAtJ3D,SAAwBkjB,EAAOqzD,EAAc5vD,EAAQyuD,GACnD,MAAMhzD,EAAMc,EAAMd,IACZk2B,EAAWi+B,EAAaj+B,UACxB,MAACn5B,EAAK,UAAEyK,GAAa2sD,GACrBj+B,IAAa88B,IAAgBj2D,IAAUyK,GAAajD,EAAS,IAGnEvE,EAAIgD,OACJhD,EAAIuH,YAAcxK,EAClBiD,EAAIwH,UAAYA,EAChBxH,EAAI2kC,YAAYwvB,EAAan6C,YAC7Bha,EAAI4kC,eAAiBuvB,EAAal6C,iBAClCja,EAAI2E,YACJouD,GAAejyD,EAAOyD,EAAQ2xB,EAAU88B,GACxChzD,EAAI8E,YACJ9E,EAAIqF,SACJrF,EAAIoD,UACN,CAuIUgxD,CAAe73D,KADKg0B,EAAK7jB,WAAWnQ,KAAKqH,WAAWzjB,EAAQ,IAC1BmwC,EAAQ0iC,EAC5C,KAGAh9B,EAAWC,QAAS,CAEtB,IADAj2B,EAAIgD,OACCxjB,EAAIwzE,EAAa,EAAGxzE,GAAK,EAAGA,IAAK,CACpC,MAAM8jD,EAActN,EAAWtpB,WAAWnQ,KAAKu1D,qBAAqBtyE,KAC9D,MAACud,EAAK,UAAEyK,GAAa87B,EACtB97B,GAAczK,IAGnBiD,EAAIwH,UAAYA,EAChBxH,EAAIuH,YAAcxK,EAClBiD,EAAI2kC,YAAYrB,EAAYtpB,YAC5Bha,EAAI4kC,eAAiBtB,EAAYrpB,iBACjCqW,EAAS/zB,KAAKw5B,8BAA8BlvB,EAAKglB,MAAMtsC,QAAUgd,KAAKvX,IAAMuX,KAAKtX,KACjFq2C,EAAW/+B,KAAKw1D,iBAAiBvyE,EAAG8wC,GACpCtwB,EAAI2E,YACJ3E,EAAI+E,OAAOxI,KAAKi5B,QAASj5B,KAAKk5B,SAC9Bz1B,EAAIgF,OAAOs2B,EAAS55C,EAAG45C,EAAS15C,GAChCoe,EAAIqF,SACN,CACArF,EAAIoD,SACN,CACF,CACAq2B,UAAAA,GAAc,CACdqL,UAAAA,GACE,MAAM9kC,EAAMzD,KAAKyD,IACX6G,EAAOtK,KAAKxb,QACZ82C,EAAWhxB,EAAKglB,MACtB,IAAKgM,EAAS5B,QACZ,OAEF,MAAMhE,EAAa11B,KAAKo5B,cAAc,GACtC,IAAIrF,EAAQ3tB,EACZ3C,EAAIgD,OACJhD,EAAIyE,UAAUlI,KAAKi5B,QAASj5B,KAAKk5B,SACjCz1B,EAAI/B,OAAOg0B,GACXjyB,EAAIoH,UAAY,SAChBpH,EAAIqH,aAAe,SACnB9K,KAAKsvB,MAAMxjC,SAAQ,CAACozB,EAAMt7B,KACxB,GAAc,IAAVA,IAAgB0mB,EAAKtnB,QACvB,OAEF,MAAM+jD,EAAczL,EAASnrB,WAAWnQ,KAAKqH,WAAWzjB,IAClDghD,EAAWz3B,GAAO45B,EAAY5jC,MAEpC,GADA4wB,EAAS/zB,KAAKw5B,8BAA8Bx5B,KAAKsvB,MAAM1rC,GAAOvC,OAC1D0lD,EAAY9I,kBAAmB,CACjCx6B,EAAIN,KAAOyhC,EAAS3+B,OACpBG,EAAQ3C,EAAI0C,YAAY+Y,EAAKqM,OAAOnlB,MACpC3C,EAAImH,UAAYm8B,EAAY7I,cAC5B,MAAMX,EAAUrwB,GAAU65B,EAAY5I,iBACtC16B,EAAIukC,UACD5hC,EAAQ,EAAIm3B,EAAQp0B,MACpB4qB,EAAS6Q,EAASn+C,KAAO,EAAI82C,EAAQl0B,IACtCjD,EAAQm3B,EAAQn3B,MAChBw+B,EAASn+C,KAAO82C,EAAQ/1B,OAE5B,CACA4C,GAAW3G,EAAKyb,EAAKqM,MAAO,GAAIwI,EAAQ6Q,EAAU,CAChDpkC,MAAOumC,EAAYvmC,OACnB,IAEJiD,EAAIoD,SACN,CACA2hC,SAAAA,GAAa,EAEfkuB,GAAkBv1E,GAAK,eACvBu1E,GAAkBp0D,SAAW,CAC3Bo3B,SAAS,EACTo+B,SAAS,EACT/4B,SAAU,YACVtF,WAAY,CACVC,SAAS,EACTzuB,UAAW,EACXwS,WAAY,GACZC,iBAAkB,GAEpBsW,KAAM,CACJ2F,UAAU,GAEZjE,WAAY,EACZpG,MAAO,CACL2O,mBAAmB,EACnBx7C,SAAU24C,GAAMX,WAAWC,SAE7Bd,YAAa,CACXsE,mBAAerzC,EACfszC,gBAAiB,EACjBzE,SAAS,EACTv2B,KAAM,CACJ1c,KAAM,IAERhE,SAAS8oC,GACAA,EAETgS,QAAS,EACT+3B,mBAAmB,IAGvBoB,GAAkBl8B,cAAgB,CAChC,mBAAoB,cACpB,oBAAqB,QACrB,cAAe,SAEjBk8B,GAAkB10D,YAAc,CAC9By3B,WAAY,CACV7zB,UAAW,SAIf,MAAMmyD,GAAY,CAChBC,YAAa,CAACC,QAAQ,EAAMxxE,KAAM,EAAGyxE,MAAO,KAC5CC,OAAQ,CAACF,QAAQ,EAAMxxE,KAAM,IAAMyxE,MAAO,IAC1CE,OAAQ,CAACH,QAAQ,EAAMxxE,KAAM,IAAOyxE,MAAO,IAC3CG,KAAM,CAACJ,QAAQ,EAAMxxE,KAAM,KAASyxE,MAAO,IAC3CI,IAAK,CAACL,QAAQ,EAAMxxE,KAAM,MAAUyxE,MAAO,IAC3CK,KAAM,CAACN,QAAQ,EAAOxxE,KAAM,OAAWyxE,MAAO,GAC9CM,MAAO,CAACP,QAAQ,EAAMxxE,KAAM,OAASyxE,MAAO,IAC5CO,QAAS,CAACR,QAAQ,EAAOxxE,KAAM,OAASyxE,MAAO,GAC/CQ,KAAM,CAACT,QAAQ,EAAMxxE,KAAM,SAEvBkyE,GAASl3E,OAAO0B,KAAK40E,IAC3B,SAASa,GAAOryE,EAAGC,GACjB,OAAOD,EAAIC,CACb,CACA,SAASyrB,GAAM1N,EAAO9E,GACpB,GAAIre,EAAcqe,GAChB,OAAO,KAET,MAAMo5D,EAAUt0D,EAAMu0D,UAChB,OAACC,EAAM,MAAEpxE,EAAK,WAAEqxE,GAAcz0D,EAAM00D,WAC1C,IAAI53E,EAAQoe,EASZ,MARsB,oBAAXs5D,IACT13E,EAAQ03E,EAAO13E,IAEZU,EAAeV,KAClBA,EAA0B,kBAAX03E,EACXF,EAAQ5mD,MAAM5wB,EAAO03E,GACrBF,EAAQ5mD,MAAM5wB,IAEN,OAAVA,EACK,MAELsG,IACFtG,EAAkB,SAAVsG,IAAqBM,EAAS+wE,KAA8B,IAAfA,EAEjDH,EAAQ3rB,QAAQ7rD,EAAOsG,GADvBkxE,EAAQ3rB,QAAQ7rD,EAAO,UAAW23E,KAGhC33E,EACV,CACA,SAAS63E,GAA0BC,EAAS1wE,EAAKC,EAAK0wE,GACpD,MAAM51E,EAAOm1E,GAAMv1E,OACnB,IAAK,IAAIH,EAAI01E,GAAMr0E,QAAQ60E,GAAUl2E,EAAIO,EAAO,IAAKP,EAAG,CACtD,MAAMo2E,EAAWtB,GAAUY,GAAM11E,IAC3Bm9B,EAASi5C,EAASnB,MAAQmB,EAASnB,MAAQl2E,OAAO6xE,iBACxD,GAAIwF,EAASpB,QAAUpxE,KAAKy1C,MAAM5zC,EAAMD,IAAQ23B,EAASi5C,EAAS5yE,QAAU2yE,EAC1E,OAAOT,GAAM11E,EAEjB,CACA,OAAO01E,GAAMn1E,EAAO,EACtB,CAiBA,SAAS81E,GAAQhqC,EAAOiqC,EAAMC,GAC5B,GAAKA,GAEE,GAAIA,EAAWp2E,OAAQ,CAC5B,MAAM,GAAC+H,EAAE,GAAED,GAAMJ,EAAQ0uE,EAAYD,GAErCjqC,EADkBkqC,EAAWruE,IAAOouE,EAAOC,EAAWruE,GAAMquE,EAAWtuE,KACpD,CACrB,OALEokC,EAAMiqC,IAAQ,CAMlB,CAcA,SAASE,GAAoBl1D,EAAOlC,EAAQq3D,GAC1C,MAAMpqC,EAAQ,GACRvrC,EAAM,CAAC,EACPP,EAAO6e,EAAOjf,OACpB,IAAIH,EAAG5B,EACP,IAAK4B,EAAI,EAAGA,EAAIO,IAAQP,EACtB5B,EAAQghB,EAAOpf,GACfc,EAAI1C,GAAS4B,EACbqsC,EAAMzpC,KAAK,CACTxE,QACA26C,OAAO,IAGX,OAAiB,IAATx4C,GAAek2E,EA1BzB,SAAuBn1D,EAAO+qB,EAAOvrC,EAAK21E,GACxC,MAAMb,EAAUt0D,EAAMu0D,SAChB18B,GAASy8B,EAAQ3rB,QAAQ5d,EAAM,GAAGjuC,MAAOq4E,GACzCruE,EAAOikC,EAAMA,EAAMlsC,OAAS,GAAG/B,MACrC,IAAI26C,EAAOp4C,EACX,IAAKo4C,EAAQI,EAAOJ,GAAS3wC,EAAM2wC,GAAS68B,EAAQ1sE,IAAI6vC,EAAO,EAAG09B,GAChE91E,EAAQG,EAAIi4C,GACRp4C,GAAS,IACX0rC,EAAM1rC,GAAOo4C,OAAQ,GAGzB,OAAO1M,CACT,CAc8CqqC,CAAcp1D,EAAO+qB,EAAOvrC,EAAK21E,GAAzCpqC,CACtC,CACA,MAAMsqC,WAAkB36B,GACtBp/B,WAAAA,CAAY+M,GACVskB,MAAMtkB,GACN5M,KAAK8uB,OAAS,CACZhpB,KAAM,GACNmkB,OAAQ,GACR1G,IAAK,IAEPvjB,KAAK65D,MAAQ,MACb75D,KAAK85D,gBAAajvE,EAClBmV,KAAK+5D,SAAW,CAAC,EACjB/5D,KAAKg6D,aAAc,EACnBh6D,KAAKi5D,gBAAapuE,CACpB,CACAw1C,IAAAA,CAAKmd,EAAWlzC,GACd,MAAMivD,EAAO/b,EAAU+b,OAAS/b,EAAU+b,KAAO,CAAC,GAC5CV,EAAU74D,KAAK84D,SAAW,IAAIxrB,GAASC,MAAMiQ,EAAUlQ,SAASnvB,MACtE06C,EAAQx4B,KAAK/1B,GACbxlB,EAAQy0E,EAAKU,eAAgBpB,EAAQ/rB,WACrC9sC,KAAKi5D,WAAa,CAChBF,OAAQQ,EAAKR,OACbpxE,MAAO4xE,EAAK5xE,MACZqxE,WAAYO,EAAKP,YAEnB9nC,MAAMmP,KAAKmd,GACXx9C,KAAKg6D,YAAc1vD,EAAK4vD,UAC1B,CACAjoD,KAAAA,CAAMga,EAAKroC,GACT,YAAYiH,IAARohC,EACK,KAEFha,GAAMjS,KAAMisB,EACrB,CACA4U,YAAAA,GACE3P,MAAM2P,eACN7gC,KAAK8uB,OAAS,CACZhpB,KAAM,GACNmkB,OAAQ,GACR1G,IAAK,GAET,CACA6d,mBAAAA,GACE,MAAM58C,EAAUwb,KAAKxb,QACfq0E,EAAU74D,KAAK84D,SACf7rB,EAAOzoD,EAAQ+0E,KAAKtsB,MAAQ,MAClC,IAAI,IAACxkD,EAAG,IAAEC,EAAG,WAAEkF,EAAU,WAAEC,GAAcmS,KAAKlS,gBAC9C,SAASqsE,EAAav+C,GACfhuB,GAAezF,MAAMyzB,EAAOnzB,OAC/BA,EAAM5B,KAAK4B,IAAIA,EAAKmzB,EAAOnzB,MAExBoF,GAAe1F,MAAMyzB,EAAOlzB,OAC/BA,EAAM7B,KAAK6B,IAAIA,EAAKkzB,EAAOlzB,KAE/B,CACKkF,GAAeC,IAClBssE,EAAan6D,KAAKo6D,mBACK,UAAnB51E,EAAQo3B,QAA+C,WAAzBp3B,EAAQ8qC,MAAMxrC,QAC9Cq2E,EAAan6D,KAAK2qB,WAAU,KAGhCliC,EAAM1G,EAAe0G,KAASN,MAAMM,GAAOA,GAAOowE,EAAQ3rB,QAAQvuB,KAAKC,MAAOquB,GAC9EvkD,EAAM3G,EAAe2G,KAASP,MAAMO,GAAOA,GAAOmwE,EAAQzrB,MAAMzuB,KAAKC,MAAOquB,GAAQ,EACpFjtC,KAAKvX,IAAM5B,KAAK4B,IAAIA,EAAKC,EAAM,GAC/BsX,KAAKtX,IAAM7B,KAAK6B,IAAID,EAAM,EAAGC,EAC/B,CACA0xE,eAAAA,GACE,MAAMzpD,EAAM3Q,KAAKq6D,qBACjB,IAAI5xE,EAAMzG,OAAOiF,kBACbyB,EAAM1G,OAAOgpC,kBAKjB,OAJIra,EAAIvtB,SACNqF,EAAMkoB,EAAI,GACVjoB,EAAMioB,EAAIA,EAAIvtB,OAAS,IAElB,CAACqF,MAAKC,MACf,CACAi5C,UAAAA,GACE,MAAMn9C,EAAUwb,KAAKxb,QACf81E,EAAW91E,EAAQ+0E,KACnBj+B,EAAW92C,EAAQ8qC,MACnBkqC,EAAiC,WAApBl+B,EAASx3C,OAAsBkc,KAAKq6D,qBAAuBr6D,KAAKu6D,YAC5D,UAAnB/1E,EAAQo3B,QAAsB49C,EAAWp2E,SAC3C4c,KAAKvX,IAAMuX,KAAK+/B,UAAYy5B,EAAW,GACvCx5D,KAAKtX,IAAMsX,KAAK8/B,UAAY05B,EAAWA,EAAWp2E,OAAS,IAE7D,MAAMqF,EAAMuX,KAAKvX,IAEX6mC,ED74TV,SAAwBjtB,EAAQ5Z,EAAKC,GACnC,IAAIwB,EAAQ,EACRC,EAAMkY,EAAOjf,OACjB,KAAO8G,EAAQC,GAAOkY,EAAOnY,GAASzB,GACpCyB,IAEF,KAAOC,EAAMD,GAASmY,EAAOlY,EAAM,GAAKzB,GACtCyB,IAEF,OAAOD,EAAQ,GAAKC,EAAMkY,EAAOjf,OAC7Bif,EAAOxgB,MAAMqI,EAAOC,GACpBkY,CACN,CCi4TkBm4D,CAAehB,EAAY/wE,EAD7BuX,KAAKtX,KAWjB,OATAsX,KAAK65D,MAAQS,EAASrtB,OAAS3R,EAASD,SACpC69B,GAA0BoB,EAASnB,QAASn5D,KAAKvX,IAAKuX,KAAKtX,IAAKsX,KAAKy6D,kBAAkBhyE,IA7I/F,SAAoC8b,EAAOw+B,EAAUo2B,EAAS1wE,EAAKC,GACjE,IAAK,IAAIzF,EAAI01E,GAAMv1E,OAAS,EAAGH,GAAK01E,GAAMr0E,QAAQ60E,GAAUl2E,IAAK,CAC/D,MAAMgqD,EAAO0rB,GAAM11E,GACnB,GAAI80E,GAAU9qB,GAAMgrB,QAAU1zD,EAAMu0D,SAASr8B,KAAK/zC,EAAKD,EAAKwkD,IAASlK,EAAW,EAC9E,OAAOkK,CAEX,CACA,OAAO0rB,GAAMQ,EAAUR,GAAMr0E,QAAQ60E,GAAW,EAClD,CAsIQuB,CAA2B16D,KAAMsvB,EAAMlsC,OAAQk3E,EAASnB,QAASn5D,KAAKvX,IAAKuX,KAAKtX,MACpFsX,KAAK85D,WAAcx+B,EAASU,MAAMC,SAA0B,SAAfj8B,KAAK65D,MAtItD,SAA4B5sB,GAC1B,IAAK,IAAIhqD,EAAI01E,GAAMr0E,QAAQ2oD,GAAQ,EAAGzpD,EAAOm1E,GAAMv1E,OAAQH,EAAIO,IAAQP,EACrE,GAAI80E,GAAUY,GAAM11E,IAAIg1E,OACtB,OAAOU,GAAM11E,EAGnB,CAiIQ03E,CAAmB36D,KAAK65D,YADyChvE,EAErEmV,KAAK46D,YAAYpB,GACbh1E,EAAQxB,SACVssC,EAAMtsC,UAEDy2E,GAAoBz5D,KAAMsvB,EAAOtvB,KAAK85D,WAC/C,CACA53B,aAAAA,GACMliC,KAAKxb,QAAQq2E,qBACf76D,KAAK46D,YAAY56D,KAAKsvB,MAAMvrC,KAAIm7B,IAASA,EAAK79B,QAElD,CACAu5E,WAAAA,CAAYpB,GACV,IAEIp9B,EAAO/wC,EAFPnB,EAAQ,EACRC,EAAM,EAEN6V,KAAKxb,QAAQuvC,QAAUylC,EAAWp2E,SACpCg5C,EAAQp8B,KAAK86D,mBAAmBtB,EAAW,IAEzCtvE,EADwB,IAAtBsvE,EAAWp2E,OACL,EAAIg5C,GAEHp8B,KAAK86D,mBAAmBtB,EAAW,IAAMp9B,GAAS,EAE7D/wC,EAAO2U,KAAK86D,mBAAmBtB,EAAWA,EAAWp2E,OAAS,IAE5D+G,EADwB,IAAtBqvE,EAAWp2E,OACPiI,GAECA,EAAO2U,KAAK86D,mBAAmBtB,EAAWA,EAAWp2E,OAAS,KAAO,GAGhF,MAAMyjD,EAAQ2yB,EAAWp2E,OAAS,EAAI,GAAM,IAC5C8G,EAAQQ,EAAYR,EAAO,EAAG28C,GAC9B18C,EAAMO,EAAYP,EAAK,EAAG08C,GAC1B7mC,KAAK+5D,SAAW,CAAC7vE,QAAOC,MAAKi2B,OAAQ,GAAKl2B,EAAQ,EAAIC,GACxD,CACAowE,SAAAA,GACE,MAAM1B,EAAU74D,KAAK84D,SACfrwE,EAAMuX,KAAKvX,IACXC,EAAMsX,KAAKtX,IACXlE,EAAUwb,KAAKxb,QACf81E,EAAW91E,EAAQ+0E,KACnBx7B,EAAQu8B,EAASrtB,MAAQisB,GAA0BoB,EAASnB,QAAS1wE,EAAKC,EAAKsX,KAAKy6D,kBAAkBhyE,IACtGurE,EAAW5xE,EAAek4E,EAAStG,SAAU,GAC7C7mB,EAAoB,SAAVpP,GAAmBu8B,EAAStB,WACtC+B,EAAa9yE,EAASklD,KAAwB,IAAZA,EAClC7d,EAAQ,CAAC,EACf,IACIiqC,EAAMhsE,EADN6uC,EAAQ3zC,EAMZ,GAJIsyE,IACF3+B,GAASy8B,EAAQ3rB,QAAQ9Q,EAAO,UAAW+Q,IAE7C/Q,GAASy8B,EAAQ3rB,QAAQ9Q,EAAO2+B,EAAa,MAAQh9B,GACjD86B,EAAQp8B,KAAK/zC,EAAKD,EAAKs1C,GAAS,IAASi2B,EAC3C,MAAM,IAAI1jD,MAAM7nB,EAAM,QAAUC,EAAM,uCAAyCsrE,EAAW,IAAMj2B,GAElG,MAAMy7B,EAAsC,SAAzBh1E,EAAQ8qC,MAAMxrC,QAAqBkc,KAAKg7D,oBAC3D,IAAKzB,EAAOn9B,EAAO7uC,EAAQ,EAAGgsE,EAAO7wE,EAAK6wE,GAAQV,EAAQ1sE,IAAIotE,EAAMvF,EAAUj2B,GAAQxwC,IACpF+rE,GAAQhqC,EAAOiqC,EAAMC,GAKvB,OAHID,IAAS7wE,GAA0B,UAAnBlE,EAAQo3B,QAAgC,IAAVruB,GAChD+rE,GAAQhqC,EAAOiqC,EAAMC,GAEhB/3E,OAAO0B,KAAKmsC,GAAOL,MAAK,CAAC1oC,EAAGC,IAAMD,EAAIC,IAAGzC,KAAIoB,IAAMA,GAC5D,CACAqmC,gBAAAA,CAAiBnqC,GACf,MAAMw3E,EAAU74D,KAAK84D,SACfwB,EAAWt6D,KAAKxb,QAAQ+0E,KAC9B,OAAIe,EAASW,cACJpC,EAAQ1+C,OAAO94B,EAAOi5E,EAASW,eAEjCpC,EAAQ1+C,OAAO94B,EAAOi5E,EAASL,eAAeiB,SACvD,CACAC,mBAAAA,CAAoB5B,EAAM31E,EAAO0rC,EAAOnV,GACtC,MAAM31B,EAAUwb,KAAKxb,QACfsoD,EAAUtoD,EAAQ+0E,KAAKU,eACvBhtB,EAAOjtC,KAAK65D,MACZH,EAAY15D,KAAK85D,WACjBsB,EAAcnuB,GAAQH,EAAQG,GAC9BouB,EAAc3B,GAAa5sB,EAAQ4sB,GACnCx6C,EAAOoQ,EAAM1rC,GACbo4C,EAAQ09B,GAAa2B,GAAen8C,GAAQA,EAAK8c,MACjDzQ,EAAQvrB,KAAK84D,SAAS3+C,OAAOo/C,EAAMp/C,IAAW6hB,EAAQq/B,EAAcD,IACpErhD,EAAYv1B,EAAQ8qC,MAAM7sC,SAChC,OAAOs3B,EAAYt3B,EAASs3B,EAAW,CAACwR,EAAO3nC,EAAO0rC,GAAQtvB,MAAQurB,CACxE,CACAsX,kBAAAA,CAAmBvT,GACjB,IAAIrsC,EAAGO,EAAM07B,EACb,IAAKj8B,EAAI,EAAGO,EAAO8rC,EAAMlsC,OAAQH,EAAIO,IAAQP,EAC3Ci8B,EAAOoQ,EAAMrsC,GACbi8B,EAAKqM,MAAQvrB,KAAKm7D,oBAAoBj8C,EAAK79B,MAAO4B,EAAGqsC,EAEzD,CACAwrC,kBAAAA,CAAmBz5E,GACjB,OAAiB,OAAVA,EAAiBqpC,KAAOrpC,EAAQ2e,KAAKvX,MAAQuX,KAAKtX,IAAMsX,KAAKvX,IACtE,CACAsF,gBAAAA,CAAiB1M,GACf,MAAMi6E,EAAUt7D,KAAK+5D,SACf7jD,EAAMlW,KAAK86D,mBAAmBz5E,GACpC,OAAO2e,KAAKizB,oBAAoBqoC,EAAQpxE,MAAQgsB,GAAOolD,EAAQl7C,OACjE,CACAglB,gBAAAA,CAAiBp+B,GACf,MAAMs0D,EAAUt7D,KAAK+5D,SACf7jD,EAAMlW,KAAKslC,mBAAmBt+B,GAASs0D,EAAQl7C,OAASk7C,EAAQnxE,IACtE,OAAO6V,KAAKvX,IAAMytB,GAAOlW,KAAKtX,IAAMsX,KAAKvX,IAC3C,CACA8yE,aAAAA,CAAchwC,GACZ,MAAMiwC,EAAYx7D,KAAKxb,QAAQ8qC,MACzBmsC,EAAiBz7D,KAAKyD,IAAI0C,YAAYolB,GAAOnlB,MAC7C3c,EAAQd,EAAUqX,KAAKqxB,eAAiBmqC,EAAU/9B,YAAc+9B,EAAUh+B,aAC1Ek+B,EAAc70E,KAAKkJ,IAAItG,GACvBkyE,EAAc90E,KAAKiI,IAAIrF,GACvBmyE,EAAe57D,KAAKilC,wBAAwB,GAAGx+C,KACrD,MAAO,CACLuM,EAAIyoE,EAAiBC,EAAgBE,EAAeD,EACpDtqE,EAAIoqE,EAAiBE,EAAgBC,EAAeF,EAExD,CACAjB,iBAAAA,CAAkBoB,GAChB,MAAMvB,EAAWt6D,KAAKxb,QAAQ+0E,KACxBU,EAAiBK,EAASL,eAC1B9/C,EAAS8/C,EAAeK,EAASrtB,OAASgtB,EAAejC,YACzD8D,EAAe97D,KAAKm7D,oBAAoBU,EAAa,EAAGpC,GAAoBz5D,KAAM,CAAC67D,GAAc77D,KAAK85D,YAAa3/C,GACnH1zB,EAAOuZ,KAAKu7D,cAAcO,GAC1B1C,EAAWvyE,KAAKkB,MAAMiY,KAAKqxB,eAAiBrxB,KAAKoG,MAAQ3f,EAAKuM,EAAIgN,KAAKwH,OAAS/gB,EAAK4K,GAAK,EAChG,OAAO+nE,EAAW,EAAIA,EAAW,CACnC,CACA4B,iBAAAA,GACE,IACI/3E,EAAGO,EADHg2E,EAAax5D,KAAK8uB,OAAOhpB,MAAQ,GAErC,GAAI0zD,EAAWp2E,OACb,OAAOo2E,EAET,MAAMh5B,EAAQxgC,KAAK+kB,0BACnB,GAAI/kB,KAAKg6D,aAAex5B,EAAMp9C,OAC5B,OAAQ4c,KAAK8uB,OAAOhpB,KAAO06B,EAAM,GAAGvb,WAAWmG,mBAAmBprB,MAEpE,IAAK/c,EAAI,EAAGO,EAAOg9C,EAAMp9C,OAAQH,EAAIO,IAAQP,EAC3Cu2E,EAAaA,EAAWn5D,OAAOmgC,EAAMv9C,GAAGgiC,WAAWmG,mBAAmBprB,OAExE,OAAQA,KAAK8uB,OAAOhpB,KAAO9F,KAAKub,UAAUi+C,EAC5C,CACAa,kBAAAA,GACE,MAAMb,EAAax5D,KAAK8uB,OAAO7E,QAAU,GACzC,IAAIhnC,EAAGO,EACP,GAAIg2E,EAAWp2E,OACb,OAAOo2E,EAET,MAAMvvC,EAASjqB,KAAKkqB,YACpB,IAAKjnC,EAAI,EAAGO,EAAOymC,EAAO7mC,OAAQH,EAAIO,IAAQP,EAC5Cu2E,EAAW3zE,KAAKosB,GAAMjS,KAAMiqB,EAAOhnC,KAErC,OAAQ+c,KAAK8uB,OAAO7E,OAASjqB,KAAKg6D,YAAcR,EAAax5D,KAAKub,UAAUi+C,EAC9E,CACAj+C,SAAAA,CAAUlZ,GACR,OAAOtW,EAAasW,EAAO4sB,KAAK2pC,IAClC,EAsBF,SAAS93D,GAAY/V,EAAOoW,EAAKne,GAC/B,IAEI+4E,EAAYC,EAAYC,EAAYC,EAFpC/wE,EAAK,EACLD,EAAKH,EAAM3H,OAAS,EAEpBJ,GACEme,GAAOpW,EAAMI,GAAI+qB,KAAO/U,GAAOpW,EAAMG,GAAIgrB,OACzC/qB,KAAID,MAAME,EAAaL,EAAO,MAAOoW,MAEvC+U,IAAK6lD,EAAYxC,KAAM0C,GAAclxE,EAAMI,MAC3C+qB,IAAK8lD,EAAYzC,KAAM2C,GAAcnxE,EAAMG,MAEzCiW,GAAOpW,EAAMI,GAAIouE,MAAQp4D,GAAOpW,EAAMG,GAAIquE,QAC1CpuE,KAAID,MAAME,EAAaL,EAAO,OAAQoW,MAExCo4D,KAAMwC,EAAY7lD,IAAK+lD,GAAclxE,EAAMI,MAC3CouE,KAAMyC,EAAY9lD,IAAKgmD,GAAcnxE,EAAMG,KAE/C,MAAMixE,EAAOH,EAAaD,EAC1B,OAAOI,EAAOF,GAAcC,EAAaD,IAAe96D,EAAM46D,GAAcI,EAAOF,CACrF,CAvCArC,GAAUz4E,GAAK,OACfy4E,GAAUt3D,SAAW,CACnBsZ,OAAQ,OACR0xB,SAAU,CAAC,EACXisB,KAAM,CACJR,QAAQ,EACR9rB,MAAM,EACNtlD,OAAO,EACPqxE,YAAY,EACZG,QAAS,cACTc,eAAgB,CAAC,GAEnB3qC,MAAO,CACLxrC,OAAQ,OACRk4C,MAAO,CACLC,SAAS,KAyBf,MAAMmgC,WAAwBxC,GAC5B/5D,WAAAA,CAAY+M,GACVskB,MAAMtkB,GACN5M,KAAKq8D,OAAS,GACdr8D,KAAKs8D,aAAUzxE,EACfmV,KAAKu8D,iBAAc1xE,CACrB,CACA+vE,WAAAA,GACE,MAAMpB,EAAax5D,KAAKw8D,yBAClBzxE,EAAQiV,KAAKq8D,OAASr8D,KAAKy8D,iBAAiBjD,GAClDx5D,KAAKs8D,QAAUx7D,GAAY/V,EAAOiV,KAAKvX,KACvCuX,KAAKu8D,YAAcz7D,GAAY/V,EAAOiV,KAAKtX,KAAOsX,KAAKs8D,QACvDprC,MAAM0pC,YAAYpB,EACpB,CACAiD,gBAAAA,CAAiBjD,GACf,MAAM,IAAC/wE,EAAG,IAAEC,GAAOsX,KACbhU,EAAQ,GACRjB,EAAQ,GACd,IAAI9H,EAAGO,EAAMmxB,EAAMwa,EAAMxc,EACzB,IAAK1vB,EAAI,EAAGO,EAAOg2E,EAAWp2E,OAAQH,EAAIO,IAAQP,EAChDksC,EAAOqqC,EAAWv2E,GACdksC,GAAQ1mC,GAAO0mC,GAAQzmC,GACzBsD,EAAMnG,KAAKspC,GAGf,GAAInjC,EAAM5I,OAAS,EACjB,MAAO,CACL,CAACm2E,KAAM9wE,EAAKytB,IAAK,GACjB,CAACqjD,KAAM7wE,EAAKwtB,IAAK,IAGrB,IAAKjzB,EAAI,EAAGO,EAAOwI,EAAM5I,OAAQH,EAAIO,IAAQP,EAC3C0vB,EAAO3mB,EAAM/I,EAAI,GACjB0xB,EAAO3oB,EAAM/I,EAAI,GACjBksC,EAAOnjC,EAAM/I,GACT4D,KAAKc,OAAOgrB,EAAOgC,GAAQ,KAAOwa,GACpCpkC,EAAMlF,KAAK,CAAC0zE,KAAMpqC,EAAMjZ,IAAKjzB,GAAKO,EAAO,KAG7C,OAAOuH,CACT,CACAyxE,sBAAAA,GACE,IAAIhD,EAAax5D,KAAK8uB,OAAOvL,KAAO,GACpC,GAAIi2C,EAAWp2E,OACb,OAAOo2E,EAET,MAAM1zD,EAAO9F,KAAKg7D,oBACZzvC,EAAQvrB,KAAKq6D,qBAOnB,OALEb,EADE1zD,EAAK1iB,QAAUmoC,EAAMnoC,OACV4c,KAAKub,UAAUzV,EAAKzF,OAAOkrB,IAE3BzlB,EAAK1iB,OAAS0iB,EAAOylB,EAEpCiuC,EAAax5D,KAAK8uB,OAAOvL,IAAMi2C,EACxBA,CACT,CACAsB,kBAAAA,CAAmBz5E,GACjB,OAAQyf,GAAYd,KAAKq8D,OAAQh7E,GAAS2e,KAAKs8D,SAAWt8D,KAAKu8D,WACjE,CACAn3B,gBAAAA,CAAiBp+B,GACf,MAAMs0D,EAAUt7D,KAAK+5D,SACf10B,EAAUrlC,KAAKslC,mBAAmBt+B,GAASs0D,EAAQl7C,OAASk7C,EAAQnxE,IAC1E,OAAO2W,GAAYd,KAAKq8D,OAAQh3B,EAAUrlC,KAAKu8D,YAAcv8D,KAAKs8D,SAAS,EAC7E,EAEFF,GAAgBj7E,GAAK,aACrBi7E,GAAgB95D,SAAWs3D,GAAUt3D","sources":["../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","part","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","arguments","undefined","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","_len2","rest","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","constructor","ret","hexParse","this","_rgb","_valid","valid","rgbString","concat","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","sort","getAllScaleValues","curr","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","ScatterController","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","textDirection","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","findOrAddLabel","addedLabels","addIfString","unshift","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","labelCount","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}