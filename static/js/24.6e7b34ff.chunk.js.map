{"version":3,"file":"static/js/24.6e7b34ff.chunk.js","mappings":"2LAIO,MAAMA,EAAS,sCACTC,EAAS,mC,8JCSP,SAASC,IAGnB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,SAAEC,EAAQ,aAAEC,IAAgBC,EAAAA,EAAAA,OAE3B,MAAEC,EAAOC,SAAUC,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC9C,aAAEC,EAAY,OAAGC,GAAWN,EAqCtC,OANEO,EAAAA,EAAAA,YAAU,KACLD,IACDX,EAAS,QACTO,EAAY,CAAEM,KAAM,UAAWC,SAAS,IAC1C,GACA,CAACH,KAEHI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iCAAiCC,MAAO,CAACC,gBAAgB,6LAA2LC,UACjQJ,EAAAA,EAAAA,KAAA,WAASC,UAAU,iDAAgDG,UACnEJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BG,UACxCC,EAAAA,EAAAA,MAAA,QAAMJ,UAAU,mBAAmBK,SAAUlB,GAvC1BmB,IAInBC,EAAAA,EAAMC,KAAK,GAADC,OAAI5B,EAAAA,EAAQ,oBAAmB,CACvC,MAAUyB,EAAKI,MACf,SAAWJ,EAAKK,UAChB,CAACC,OANY,CACb,8BAA6B,KAM9BC,MAAMC,IACLvB,EAAY,CAAEM,KAAM,eAAgBC,QAASgB,EAASR,KAAKS,SAC3DxB,EAAY,CAAEM,KAAM,gBAAiBC,QAASgB,EAASR,KAAKU,UAE5DC,aAAaC,QAAQ,cAAcJ,EAASR,KAAKS,QACjDE,aAAaC,QAAQ,eAAeJ,EAASR,KAAKU,SAClDhC,EAAS,IAAI,IAEdmC,OAAOC,IACY,gBAAfA,EAAMC,KACP9B,EAAY,CAAEM,KAAM,UAAWC,SAAS,IAGX,MAA1BsB,EAAMN,SAASQ,QAChBC,MAAMH,EAAMN,SAASR,KAAKkB,OAG9B,GAEA,IAYsEC,aAAa,MAAKtB,SAAA,EACxFC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,8DAA4DG,SAAA,EACzEJ,EAAAA,EAAAA,KAAA,SAAOF,KAAK,QAAQ6B,KAAK,iBAAiBC,GAAG,iBAAiB3B,UAAU,6NAA6N4B,YAAY,IAAIC,UAAQ,KAAK3C,EAAS,YAC3Ua,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,iBAAiB9B,UAAU,uYAAsYG,SAAC,sBAEnbC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,8DAA4DG,SAAA,EACzEJ,EAAAA,EAAAA,KAAA,SAAOF,KAAK,WAAW6B,KAAK,oBAAoBC,GAAG,oBAAoB3B,UAAU,4NAA4N4B,YAAY,GAAGC,UAAQ,KAAM3C,EAAS,eACnVa,EAAAA,EAAAA,KAAA,SAAO+B,QAAQ,iBAAiB9B,UAAU,uYAAsYG,SAAC,iBAEnbJ,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAAA5B,UACHJ,EAAAA,EAAAA,KAACiC,EAAAA,GAAI,CAAA7B,UACLJ,EAAAA,EAAAA,KAAA,UAAQF,KAAK,SAASG,UAAU,0GAA0GC,MAAO,CAACgC,WAAW,WAAW9B,SAAC,iBAGzKJ,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAAC/B,UAAU,sBAAqBG,UACnCJ,EAAAA,EAAAA,KAACiC,EAAAA,GAAI,CAAChC,UAAU,qBAAoBG,UACpCC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,aAAYG,SAAA,CAAC,8BAA0BJ,EAAAA,EAAAA,KAACmC,EAAAA,GAAI,CAACC,GAAI,YAAanC,UAAU,OAAOC,MAAO,CAACmC,MAAM,WAAWjC,SAAC,4BAUtI,C","sources":["base_url.js","views/pages/login/Login.js"],"sourcesContent":["// export const base_url= `http://${window.location.host}`;\n// export const websocket = `ws://${window.location.host}`;\n// export const base_url= `${window.location.protocol}//${window.location.host}`;\n// export const websocket = `wss://${window.location.host}`;\nexport const base_url= `https://smartroll.ldce.mnv-dev.live`;\nexport const websocket = `wss://smartroll.ldce.mnv-dev.live`;\n// export const base_url= `http://localhost:8001`;\n// export const websocket = `ws://localhost:8001`;\n// const token = localStorage.getItem('accessToken')\n// const header = {\n//     \"Content-Type\":\"application/json\",\n//     \"Authorization\": `Bearer ${token}`,\n//     'ngrok-skip-browser-warning':true\n//   }\n","import React, { useEffect } from 'react';\nimport Axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store';\nimport {base_url} from 'src/base_url';\nimport \"./LoginForm.css\";\nimport expireToken from 'src/global_function/unauthorizedToken';\nimport '../../../css/tailwind.css'\nimport { useForm } from \"react-hook-form\";\nimport { CCol, CRow } from '@coreui/react';\n\n\nexport default function Login(){\n      \n\n     const navigate = useNavigate();\n     const { register, handleSubmit} = useForm();      \n    \n      const { state, dispatch: ctxDispatch } = useContext(Store);\n      const { refreshToken , set404 } = state;\n\n      const SubmitLogin = (data) => {\n        const header = {\n          'ngrok-skip-browser-warning':true\n        }\n        Axios.post(`${base_url}/auth/api/login/`,{\n          \"email\":  data.email,\n          \"password\":data.password        \n        },{header})\n        .then((response)=>{        \n          ctxDispatch({ type: 'ACCESS_TOKEN', payload: response.data.access});\n          ctxDispatch({ type: 'REFRESH_TOKEN', payload: response.data.refresh });\n\n          localStorage.setItem('accessToken',response.data.access)\n          localStorage.setItem('refreshToken',response.data.refresh)        \n          navigate('/')\n        })\n        .catch((error)=>{          \n          if(error.code === \"ERR_NETWORK\"){\n            ctxDispatch({ type: 'SET_404', payload: true });\n          }\n          else{\n            if(error.response.status === 401){\n              alert(error.response.data.detail)\n              \n          }\n          }\n          \n        })\n    }\n    useEffect(()=>{      \n      if(set404){\n        navigate(\"/404\")\n        ctxDispatch({ type: 'SET_404', payload: false });        \n      }\n    },[set404])    \n  return (\n    <div className=\"h-screen bg-center sm:p-10 p-2\" style={{backgroundImage:`url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32' width='32' height='32' fill='none' stroke='%23f1f5f9'%3e%3cpath d='M0 .5H31.5V32'/%3e%3c/svg%3e\")`}}>\n      <section className=\"w-full h-full flex justify-center items-center\">\n      <div className=\"text-white sm:w-full w-75\">        \n        <form className=\"max-w-sm mx-auto\" onSubmit={handleSubmit(SubmitLogin)} autoComplete='off'>\n          <div className=\"relative border-b-2\tborder-slate-500 z-0 w-full mb-5 group\">\n            <input type=\"email\" name=\"floating_email\" id=\"floating_email\" className=\"block py-2.5 px-0 w-full text-sm  bg-transparent border-0 border-b-2 border-gray-300 appearance-none text-black dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\" placeholder=\" \" required {...register('email')}/>\n            <label htmlFor=\"floating_email\" className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\">Email address</label>\n          </div>\n          <div className=\"relative z-0 border-b-2\tborder-slate-500 w-full mb-5 group\">\n            <input type=\"password\" name=\"floating_password\" id=\"floating_password\" className=\"block py-2.5 px-0 w-full text-sm bg-transparent border-0 border-b-2 border-gray-300 appearance-none text-black dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer\" placeholder=\"\" required  {...register('password')}/>\n            <label htmlFor=\"floating_email\" className=\"peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6\">Password</label>\n          </div>\n          <CRow>\n            <CCol>\n            <button type=\"submit\" className=\"w-100 focus:ring-4  font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center  text-black\" style={{background:'#ffa31a'}}> Login </button>\n            </CCol>\n          </CRow>\n            <CRow className='justify-center mt-4'>\n              <CCol className='w-full text-center'>\n              <div className='text-black'> Do not have an account?  <Link to={\"/register\"} className='ml-2' style={{color:'#ffa31a'}}>Register</Link></div>\n              </CCol>\n            </CRow>\n            \n        </form>\n          \n      </div>\n      </section>\n    </div>    \n  );\n};"],"names":["base_url","websocket","Login","navigate","useNavigate","register","handleSubmit","useForm","state","dispatch","ctxDispatch","useContext","Store","refreshToken","set404","useEffect","type","payload","_jsx","className","style","backgroundImage","children","_jsxs","onSubmit","data","Axios","post","concat","email","password","header","then","response","access","refresh","localStorage","setItem","catch","error","code","status","alert","detail","autoComplete","name","id","placeholder","required","htmlFor","CRow","CCol","background","Link","to","color"],"sourceRoot":""}