{"version":3,"file":"static/js/551.983e0991.chunk.js","mappings":"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","sources":["views/student_controller/StudentDashboard.js"],"sourcesContent":["import React from 'react'\n\nimport { useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CToast,\n  CToastHeader,\n  CToastBody,\n  CAlert,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nimport useAPI from 'src/global_function/useApi'\nimport moment from 'moment'\n\n\nconst StudentDashboard = () => {\n    const [StoredTokens, CallAPI] = useAPI()\n    const [TimeTables, setTimeTables] = useState(null)    \n    const load_teacher_timetable = async () => {\n      const headers = {\n        'Content-Type': 'application/json',\n        'ngrok-skip-browser-warning': true,\n      }\n      const axiosInstance = axios.create()\n      const response_obj = await CallAPI(\n        StoredTokens,\n        axiosInstance,\n        '/manage/get_timetable_for_student',\n        'get',\n        headers,\n        null,\n        null,\n      )\n      if (response_obj.error === false) {\n        const response = response_obj.response\n        console.log(response.data.data)\n        setTimeTables(response.data.data)\n      }\n    }\n\n    const mark_attendance =async (btn,lecture_slug)=>{\n        const headers = {\n          'Content-Type':\"application/json\",\n          'ngrok-skip-browser-warning': true,\n        } \n        const axiosInstance = axios.create()\n        const response_obj = await CallAPI(StoredTokens,axiosInstance,\"/manage/session/mark_attendance_for_student/\",\"post\",headers,{\"lecture_slug\":lecture_slug},null)\n        if(response_obj.error === false)\n        {\n          const response = response_obj.response\n          if(response.data.data === true)\n          btn.disabled = true\n          btn.classList.add('btn-outline-secondary');\n          {\n            alert(\"your Attendance Marked successfully\")            \n          }\n        }\n        else{\n          if (response_obj.errorMessage.code == 100){            \n            btn.disabled = true\n            btn.classList.add('btn-outline-secondary');\n          }\n          alert(response_obj.errorMessage.message)\n        }\n    }\n\n\n\n    useEffect(() => {\n      load_teacher_timetable()\n    }, [])\n  \n    return (\n      <>\n        <CRow className=\"mb-3\">\n      <CCol>\n        {TimeTables ? (\n          TimeTables.map((timetable, index) => (\n            <CRow key={index} className=\"text-center mb-5 justify-content-center\">\n              <CCol className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                <CCard className=\"\">\n                  <CCardHeader className=\"d-flex justify-content-center justify-content-sm-between flex-wrap\">\n                    <span className='mx-2'>Semester - {timetable.division.semester.no}</span>\n                    <span className='mx-2'>Division - {timetable.division.division_name}</span>\n                  </CCardHeader>\n                  <CCardBody>\n                    <>\n                      <CRow className=\"text-center justify-content-center\">\n                        <CCol className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                          <div className=\"\">\n                            <div>\n                              <CRow className=\"flex-column\" style={{ padding: '0' }}>\n                                {timetable && timetable.schedules.length > 0 ? (\n                                  timetable.schedules.map((item, index) => (\n                                    <>\n                                      <CCol\n                                        className=\"d-flex align-items-center flex-column\"\n                                        key={index}\n                                      >\n                                        <CAlert\n                                          className=\"m-0 rounded-0 w-100 p-2 d-flex justify-content-between align-items-center\"\n                                          color=\"primary\"\n                                          visible={true}\n                                          \n                                        >\n                                          {item.day.toUpperCase()}\n                                        </CAlert>\n                                        <div className=\"w-100  rounded-0 border-0\">\n                                          <div className=\"\" style={{paddingBottom:\"0px\"}}>\n                                            <div className=\"justify-content-center w-100\">\n                                              {item.lectures.length > 0 ? (\n                                                item.lectures.map((lecture, index) => (\n                                                  <CToast\n                                                    key={index}\n                                                    autohide={false}\n                                                    visible={true}\n                                                    className=\"mt-2 w-100\"\n                                                    \n                                                  >\n                                                    <CToastHeader className=\"d-flex flex-wrap justify-content-sm-between justify-content-center\">\n                                                      <div className=\"fw-bold mx-2 my-2\">\n                                                        {lecture.subject.subject_name.charAt(0).toUpperCase() + lecture.subject.subject_name.slice(1)}\n                                                      </div>\n                                                        <small className='mx-2 my-2'>\n                                                          {lecture.type.toUpperCase()}\n                                                        </small>\n                                                      <small className='mx-2 my-2'>\n                                                      {moment(lecture.start_time.slice(0,5), 'HH:mm').format('h:mm A')} |{' '}\n                                                      {moment(lecture.end_time.slice(0,5), 'HH:mm').format('h:mm A')}\n                                                      </small>\n                                                    </CToastHeader>\n                                                    <CToastBody className=\"d-flex flex-row flex-wrap justify-content-center justify-content-md-between\">\n                                                      <CRow className='w-100 align-items-center'>\n                                                        <CCol className='text-sm-start col-12 col-sm-4 col-lg-4 col-md-4'>\n                                                          \n                                                        Prof - {lecture.teacher.charAt(0).toUpperCase() + lecture.teacher.slice(1)}{' '}\n                                                         \n                                                        </CCol>\n                                                        <CCol className=' text-sm-end col-12 col-sm-4 col-lg-4 col-md-4'>\n                                                        <div className='w-100 text-center'>\n                                                        {' '}\n                                                        {lecture.batches.map((batch, index) => (\n                                                          <span key={index}>\n                                                            {batch.batch_name.toUpperCase()}\n                                                            {index < lecture.batches.length - 1 &&\n                                                              ', '}\n                                                          </span>\n                                                        ))}{' '}\n                                                      </div>\n                                                        </CCol>\n                                                        <CCol className='text-sm-end col-12 col-sm-4 col-lg-4 col-md-4'>\n                                                        \n                                                        {lecture.classroom.class_name.charAt(0).toUpperCase() + lecture.classroom.class_name.slice(1)}\n                                                      {' '}\n                                                        </CCol>\n                                                      </CRow>\n                                                        <div className='d-flex flex-wrap w-100'>\n                                                      <div className='w-100 mt-3'>                                                      \n                                                      {\n                                                            (lecture.session.active === \"pre\" ||  lecture.session.active === \"ongoing\") && <button className={`btn ${lecture.session.attendances.is_present ? 'btn-outline-secondary':'btn-outline-primary'} w-100 mt-3`} value={lecture.slug} onClick={(e)=> !lecture.session.attendances.is_present && mark_attendance(e.target,e.target.value)} disabled={lecture.session.attendances.is_present}>Mark Your Attendance</button>\n                                                            \n                                                          }\n                                                           {\n                                                            lecture.session.active === \"post\" && <button className='btn btn-outline-secondary w-100 mt-3' disabled={true}>Session Ended</button>\n                                                            \n                                                          }\n                                                        </div>\n                                                      </div>\n                                                      \n                                                      \n                                                      <div>\n                                                        <hr></hr>\n                                                      </div>\n                                                      \n                                                    </CToastBody>\n                                                  </CToast>\n                                                ))\n                                              ) : (\n                                                <CToast className=\"w-100 d-flex justify-content-center mt-3\" autohide={false} visible={true}>\n                                                  <CToastBody>No Lectures Today</CToastBody>\n                                                </CToast>\n                                              )}\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </CCol>\n                                    </>\n                                  ))\n                                ) : (\n                                  <CToast className=\"w-100 d-flex justify-content-center mt-3\" autohide={false} visible={true}>\n                                                  <CToastBody>No Lectures Today</CToastBody>\n                                                </CToast>\n                                )}\n                              </CRow>\n                            </div>\n                          </div>\n                        </CCol>\n                      </CRow>\n                    </>\n                  </CCardBody>\n                </CCard>\n              </CCol>\n            </CRow>\n          ))\n        ) : (\n          <CToast animation={false} autohide={false} visible={true} className=\"mx-auto w-100\">\n            <CToastHeader className=\"bg-dark d-flex justify-content-center\">\n              <img\n                src=\"/static/media/smartroll_logo.a3c3e21d0b4a56919e74.png\"\n                width={100}\n                alt=\"SmartRoll Logo\"\n              />\n            </CToastHeader>\n            <CToastBody>\n              <p>No Timetable Found</p>\n            </CToastBody>\n          </CToast>\n        )}\n        </CCol>\n      \n      </CRow>\n      </>\n    )\n}\n\nexport default StudentDashboard"],"names":["StudentDashboard","StoredTokens","CallAPI","useAPI","TimeTables","setTimeTables","useState","useEffect","async","axiosInstance","axios","create","response_obj","error","response","console","log","data","load_teacher_timetable","_jsx","_Fragment","children","CRow","className","CCol","map","timetable","index","_jsxs","CCard","CCardHeader","division","semester","no","division_name","CCardBody","style","padding","schedules","length","item","CAlert","color","visible","day","toUpperCase","paddingBottom","lectures","lecture","CToast","autohide","CToastHeader","subject","subject_name","charAt","slice","type","moment","start_time","format","end_time","CToastBody","teacher","batches","batch","batch_name","classroom","class_name","session","active","concat","attendances","is_present","value","slug","onClick","e","btn","lecture_slug","disabled","classList","add","alert","errorMessage","code","message","mark_attendance","target","animation","src","width","alt"],"sourceRoot":""}