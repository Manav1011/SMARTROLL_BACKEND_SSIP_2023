{"version":3,"file":"static/js/9063.b7545783.chunk.js","mappings":"qLAAA,MAOA,EAPgB,uB,0DCGhB,MAgBA,EAhBoBA,MAAOC,EAAaC,KAIpCC,EAAAA,EAAMC,KAAK,GAADC,OAAIC,EAAAA,EAAQ,4BAA2B,CAC7C,QAAUL,GACZ,CAACM,QALY,CACX,8BAA6B,KAKhCC,MAAMC,IACHC,aAAaC,QAAQ,cAAcF,EAASG,KAAKC,QACjDH,aAAaC,QAAQ,eAAeF,EAASG,KAAKE,SAClDZ,GAAoB,EAAK,IAE5Ba,OAAOC,IACJC,QAAQC,IAAIF,EAAM,GACpB,C,4LCJS,SAASG,IAGnB,MAAMC,GAAWC,EAAAA,EAAAA,OAGXC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAElC,MAAEG,EAAOC,SAAUC,IAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAC9C,aAAE9B,EAAY,OAAG+B,GAAWL,EA0CrC,OAREM,EAAAA,EAAAA,YAAU,KACLD,IACDZ,EAAS,QACTS,EAAY,CAAEK,KAAM,UAAWC,SAAS,IACxClB,QAAQC,IAAIc,GACd,GACA,CAACA,KAGHI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mDAAmDC,MAAO,CAACC,OAAO,QAAQC,SAAS,QAAQC,SAAA,EAC1GC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,8BAA8BC,MAAO,CAACK,KAAK,IAAKC,SAAS,SAASH,UAC/EC,EAAAA,EAAAA,KAAA,OAAKG,IAAKC,EAAmBC,IAAI,GAAGT,MAAO,CAACU,MAAM,OAAOT,OAAO,aAElEH,EAAAA,EAAAA,MAAA,OAAKa,GAAG,aAAaX,MAAO,CAACY,WAAW,OAAOC,YAAY,OAAOR,KAAK,KAAKF,SAAA,EAC1EC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJL,EAAAA,EAAAA,MAAA,QAAMgB,SA9CcpD,UAEpBqD,EAAEC,iBAIFC,EAAAA,EAAMnD,KAAK,GAADC,OAAIC,EAAAA,EAAQ,oBAAmB,CACvC,MAAUgB,EACT,SAAWG,GACZ,CAAC+B,OANY,CACb,8BAA6B,KAM9BhD,MAAMC,IACLoB,EAAY,CAAEK,KAAM,eAAgBC,QAAS1B,EAASG,KAAKC,SAC3DgB,EAAY,CAAEK,KAAM,gBAAiBC,QAAS1B,EAASG,KAAKE,UAC5DJ,aAAaC,QAAQ,cAAcF,EAASG,KAAKC,QACjDH,aAAaC,QAAQ,eAAeF,EAASG,KAAKE,SAClDM,EAAS,IAAI,IAEdL,OAAOC,IACNC,QAAQC,IAAIF,EAAMyC,MACA,gBAAfzC,EAAMyC,KACP5B,EAAY,CAAEK,KAAM,UAAWC,SAAS,IAGX,MAA1BnB,EAAMP,SAASiD,SAChBC,EAAAA,EAAAA,GAAY1D,EAEhB,GAEA,EAkB4BwC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,WAAUnB,SAAC,YAC1BC,EAAAA,EAAAA,KAAA,SAAOR,KAAK,OAAOe,GAAG,YAAWY,KAAK,QAAQC,SAAUT,GAAK9B,EAAS8B,EAAEU,OAAOC,OAAQC,YAAY,uBACnGvB,EAAAA,EAAAA,KAAA,SAAOkB,QAAQ,WAAUnB,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,SAAOR,KAAK,WAAW4B,SAAUT,GAAK3B,EAAY2B,EAAEU,OAAOC,OAAQC,YAAY,WAAWJ,KAAK,cAC/FnB,EAAAA,EAAAA,KAAA,UAAQL,UAAU,oCAAoCH,KAAK,SAAS8B,MAAM,SAAQvB,SAAC,kBAK3F,C","sources":["base_url.js","global_function/unauthorizedToken.js","views/pages/login/Login.js"],"sourcesContent":["const base_url= \"https://356f-49-36-66-75.ngrok-free.app\";\n// const token = localStorage.getItem('accessToken')\n// const header = {\n//     \"Content-Type\":\"application/json\",\n//     \"Authorization\": `Bearer ${token}`,\n//     'ngrok-skip-browser-warning':true\n//   }\nexport default base_url;","import axios  from \"axios\";\nimport base_url from '../base_url';\n\nconst expireToken = async (refreshToken,setAccessTokenValid)=>{\n    const header = {\n        'ngrok-skip-browser-warning':true\n      }\n    axios.post(`${base_url}/auth/api/token/refresh/`,{\n        \"refresh\":refreshToken\n    },{headers:header})\n    .then((response)=>{        \n        localStorage.setItem('accessToken',response.data.access)\n        localStorage.setItem('refreshToken',response.data.refresh)        \n        setAccessTokenValid(true)\n    })\n    .catch((error)=>{\n        console.log(error)\n    })\n}\nexport default expireToken","import React, { useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate , redirect } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store';\nimport base_url from 'src/base_url';\nimport \"./LoginForm.css\";\nimport expireToken from 'src/global_function/unauthorizedToken';\nimport meet_illustration from './remote-meet.png'\n\n\n\nexport default function Login(){\n      \n\n     const navigate = useNavigate();\n  \n  \n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n  \n     const { state, dispatch: ctxDispatch } = useContext(Store);\n     const { refreshToken , set404 } = state;\n    \n  \n    const submitHandler = async (e) => {\n\n      e.preventDefault();\n      const header = {\n        'ngrok-skip-browser-warning':true\n      }\n      Axios.post(`${base_url}/auth/api/login/`,{\n        \"email\":  email,\n         \"password\":password        \n      },{header})\n      .then((response)=>{        \n        ctxDispatch({ type: 'ACCESS_TOKEN', payload: response.data.access});\n        ctxDispatch({ type: 'REFRESH_TOKEN', payload: response.data.refresh });\n        localStorage.setItem('accessToken',response.data.access)\n        localStorage.setItem('refreshToken',response.data.refresh)        \n        navigate('/')\n      })\n      .catch((error)=>{\n        console.log(error.code);\n        if(error.code === \"ERR_NETWORK\"){\n          ctxDispatch({ type: 'SET_404', payload: true });\n        }\n        else{\n          if(error.response.status === 401){\n            expireToken(refreshToken)            \n        }\n        }\n        \n      })\n\n    };\n    useEffect(()=>{      \n      if(set404){\n        navigate(\"/404\")\n        ctxDispatch({ type: 'SET_404', payload: false });\n        console.log(set404);\n      }\n    },[set404])    \n\n  return (\n    <div className='d-flex justify-content-center align-items-center' style={{height:'100vh',flexWrap:'wrap'}}>\n    <div className=\"illustration-auth container\" style={{flex:'1', minWidth:'300px'}}>\n      <img src={meet_illustration} alt=\"\" style={{width:'100%',height:'auto'}}/>\n    </div>\n    <div id=\"login-form\" style={{marginLeft:'2rem',marginRight:'2rem',flex:'1'}}>\n      <h1>Login</h1>\n      <form onSubmit={submitHandler}>\n        <label htmlFor=\"username\">Email:</label>\n        <input type=\"text\" id=\"usermail \"name=\"email\" onChange={e => setEmail(e.target.value)} placeholder=\"example@gmail.com\"></input>\n        <label htmlFor=\"password\">Password:</label>\n        <input type=\"password\" onChange={e => setPassword(e.target.value)} placeholder=\"Password\" name=\"password\"></input>\n        <button className=\"form-control btn btn-outline-dark\" type=\"submit\" value=\"Submit\">Login</button>\n      </form>\n    </div>    \n    </div>\n  );\n};"],"names":["async","refreshToken","setAccessTokenValid","axios","post","concat","base_url","headers","then","response","localStorage","setItem","data","access","refresh","catch","error","console","log","Login","navigate","useNavigate","email","setEmail","useState","password","setPassword","state","dispatch","ctxDispatch","useContext","Store","set404","useEffect","type","payload","_jsxs","className","style","height","flexWrap","children","_jsx","flex","minWidth","src","meet_illustration","alt","width","id","marginLeft","marginRight","onSubmit","e","preventDefault","Axios","header","code","status","expireToken","htmlFor","name","onChange","target","value","placeholder"],"sourceRoot":""}