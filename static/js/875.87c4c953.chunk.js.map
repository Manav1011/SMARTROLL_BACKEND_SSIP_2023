{"version":3,"file":"static/js/875.87c4c953.chunk.js","mappings":"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","sources":["_nav.js","base_url.js","components/AppSidebarNav.js","global_function/GlobalFunctions.js","global_function/useApi.js","views/teacher/LectureHistory.js","views/teacher/AdditionalFeatures.js","routes.js","components/AppContent.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebar.js","layout/DefaultLayout.js","views/subject/Subject.js","views/teacher/Session_history.js"],"sourcesContent":["import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilDrop,\n  cilPencil,\n  cilAccountLogout,\n  cilCalendar,\n  cilNotes,\n  cilPeople,\n  cilLibraryBuilding,\n  cilSchool,\n  cilClock\n  //cilSpeedometer,\n} from '@coreui/icons'\nimport { CNavItem, CNavTitle } from '@coreui/react'\nimport { useContext } from 'react'\n\n\n\n\n\n\nconst _nav = {\n  admin_role:[\n    {\n      component: CNavTitle,\n      name: 'ADMNISTRATION',\n    },\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Subject',\n      to: '/subject',    \n      icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Teachers',\n      to: '/manage-teachers',\n      icon: <CIcon icon={cilSchool} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Add Student',\n      to: '/addstudent',\n      icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Timetable',\n      to: '/timetable',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Attendance History',\n      to: '/attendance-history',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },  \n      \n  ],\n  teacher_role:[\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/teacher/dashboard',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'LectureHistory',\n      to: '/teacher/lectures/history',    \n      icon: <CIcon icon={cilClock} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Additional Features',\n      to: '/teacher/lectures/additional-features',    \n      icon: <CIcon icon={cilClock} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n  ],\n  student_role:[\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/studentdashboard',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    }, \n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n  ]\n}\n\nexport default _nav\n","export const base_url= `http://192.168.157.106:8000`;\nexport const websocket = `ws://192.168.157.106:8000`;\n// export const base_url= `http://192.168.157.106:8000`;\n// export const websocket = `ws://192.168.157.106:8000`;\n\n// const token = localStorage.getItem('accessToken')\n// const header = {\n//     \"Content-Type\":\"application/json\",\n//     \"Authorization\": `Bearer ${token}`,\n//     'ngrok-skip-browser-warning':true\n//   }\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import axios from 'axios'\nimport {base_url} from 'src/base_url'\n\nimport Swal from 'sweetalert';\n\n// Used for handling expired tokens\nconst APIMiddleware = async (reqInstance, endpoint, method, headers, body = null, params = null) => {\n    // Get the access and refresh tokens\n    const access = localStorage.getItem('accessToken');\n    const refresh = localStorage.getItem('refreshToken');\n    headers['Authorization'] = `Bearer ${access}`;\n\n    let response_obj;\n    window.setProgress(100)\n    if (method === 'get') {\n        try {\n            const response = await reqInstance.get(`${base_url}${endpoint}`, { headers, params });\n            response_obj = { 'error': false, 'response': response };\n        } catch (error) {\n            if (error.response && error.response.status === 401) {                \n                const result = await expireToken(refresh);\n                localStorage.setItem('accessToken', result.access);\n                localStorage.setItem('refreshToken', result.refresh);                                \n                response_obj = await APIMiddleware(reqInstance, endpoint, method, headers, body, params);                \n            } else {\n                response_obj = { 'error': true, 'error': error };\n            }\n        }\n    } else if (method === 'post') {\n        try {\n            const response = await reqInstance.post(`${base_url}${endpoint}`, body, { headers });\n            response_obj = { 'error': false, 'response': response };\n        } catch (error) {\n            if (error.response && error.response.status === 401) {\n                const result = await expireToken(refresh);\n                localStorage.setItem('accessToken', result.access);\n                localStorage.setItem('refreshToken', result.refresh);\n                response_obj = await APIMiddleware(reqInstance, endpoint, method, headers, body, params);                \n            } else {\n                response_obj = { 'error': true, 'error': error };\n            }\n        }\n    }    \n    return response_obj;\n};\n\nconst expireToken = async (refreshToken) => {\n    const header = {\n        'ngrok-skip-browser-warning': true\n    };\n\n    return axios.post(`${base_url}/auth/api/token/refresh/`, { \"refresh\": refreshToken }, { headers: header })\n        .then((response) => response.data)\n        .catch((error) => { throw error; });\n};\n\nconst showAlert = (title,text) => {\n    \n    Swal({\n        title: title,\n        text: text,\n        icon: 'success',\n        button: 'OK',\n      });\n  \n  };\n\nexport {APIMiddleware , showAlert}","import axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { Store } from \"src/views/forms/validation/store\";\nimport {base_url} from \"src/base_url\";\n\n\nconst useAPI = () => {  \n  const navigate = useNavigate()\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken , refreshToken, loader_state } = state\n\n  const StoredTokens = {\n    accessToken,\n    refreshToken\n  }\n  const CallAPI = async (tokens=StoredTokens,reqInstance, endpoint, method, headers, body = null, params = null) => {    \n    ctxDispatch({ type: 'LOADER_STATE', payload: true});\n    headers['Authorization'] = `Bearer ${tokens.accessToken}`;    \n    try {\n      const response = await makeRequest(reqInstance, endpoint, method, headers, body, params);\n      ctxDispatch({ type: 'LOADER_STATE', payload: false});\n      return { error: false, response };\n    } catch (error) {            \n        if (error.response && error.response.status === 401) {\n          const result = await expireToken(tokens.refreshToken);          \n          if(result.access && result.refresh){\n            const token_data = {\n              \"accessToken\" : result.access,\n              \"refreshToken\": result.refresh\n            }\n            localStorage.setItem('accessToken',result.access)\n            localStorage.setItem('refreshToken',result.refresh)\n            ctxDispatch({ type: 'ACCESS_TOKEN', payload: result.access});\n            ctxDispatch({ type: 'REFRESH_TOKEN', payload: result.refresh });\n            return CallAPI(token_data, reqInstance, endpoint, method, headers, body, params);\n          }\n          if(result.action == 'tokenExpired' && result.status === 401){\n            localStorage.removeItem('accessToken')\n            localStorage.removeItem('refreshToken')\n            navigate('/auth/sign-in/')\n            ctxDispatch({ type: 'LOADER_STATE', payload: false});\n            return { error: true, result };\n          }\n        } else {\n          ctxDispatch({ type: 'LOADER_STATE', payload: false});\n          return { error: true, errorMessage: error.response.data || 'Unknown error' };\n        }      \n    }\n  }\n  return [StoredTokens,CallAPI]\n};\n\nconst makeRequest = async (reqInstance, endpoint, method, headers, body, params) => {\n  if (method === 'get') {\n    return await axios.get(`${base_url}${endpoint}`, { headers, params });\n  } else if (method === 'post') {\n    return await axios.post(`${base_url}${endpoint}`, body, { headers });\n  } else {\n    throw new Error('Invalid HTTP method');\n  }\n};\n\nconst expireToken = async (refreshToken) => {\n  const header = {\n    'ngrok-skip-browser-warning': true,\n  };  \n  try {\n    const response = await axios.post(`${base_url}/auth/api/token/refresh/, { refresh: ${refreshToken} }, { headers: header }`);\n    return response.data;\n  } catch (error) {\n    if(error.response.status === 401){       \n      return {'action':'tokenExpired','status':error.response.status};\n    }\n  }\n};\n\nexport default useAPI;","import React, { useEffect, useState } from 'react'\nimport { \n    CRow,\n    CCol,\n    CCardHeader,\n    CCard,\n    CCardBody,\n    CTable,\n    CTableHead,\n    CTableRow,\n    CTableHeaderCell,\n    CTableBody,\n    CTableDataCell,\n    CFormInput\n} from '@coreui/react'\nimport useAPI from 'src/global_function/useApi'\nimport axios from 'axios'\nimport '../../css/tailwind.css'\nimport Subject from '../subject/Subject'\nimport Session_history from './Session_history'\nimport moment from 'moment';\n\nconst LectureHistory = () => {\nconst [StoredTokens, CallAPI] = useAPI()\nconst [subjects,SetSubjects] = useState(null)\nconst [lecture,setLecture] = useState(null)\nconst [FilterLecture,setFilterLecture] = useState(null)\nconst [attendances, setAttendances] = useState(null)\nconst [visible , setVisible] = useState(false)\nconst [session_data, setSessionData] = useState(null)\n\nconst load_subjects_of_teacher = async () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/get_subjects_of_teacher',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      SetSubjects(response.data.data)  \n       \n    }\n    else{\n      alert(response_obj.errorMessage.message)\n    }\n  }\n  const load_lectures = async (subject_slug) => {\n    const headers = {\n        'Content-Type': 'application/json',\n        'ngrok-skip-browser-warning': true,\n      }\n      const axiosInstance = axios.create()\n      const response_obj = await CallAPI(\n        StoredTokens,\n        axiosInstance,\n        '/manage/get_lecture_sessions_for_teacher',\n        'get',\n        headers,\n        null,\n        {subject_slug:subject_slug},\n      )\n      if (response_obj.error === false) {\n        const response = response_obj.response        \n        setLecture(response.data.data)     \n      }\n      else{\n        alert(response_obj.errorMessage.message)\n      }\n  }\n\n  const search_lecture = (day)=>{\n    // console.log(day);\n    const filteredData = lecture.filter(item => item.session.some(session => session.day === day));\n    \n    if(filteredData.length > 0) {\n      setFilterLecture(filteredData)\n    }\n    else{\n      setFilterLecture(null)\n    }\n    \n  }\n\n\n  const get_session_data = async(session_id)=>{\n    const headers = {\n      'Content-Type':\"application/json\",\n      'ngrok-skip-browser-warning':true\n    }\n\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      `/manage/session/get_session_data_for_export/${session_id}`,\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      setAttendances(response.data.data.marked_attendances)\n      setSessionData(response.data.data)\n      setVisible(true)\n    }\n    else{\n      alert(response_obj.errorMessage.message)\n    }\n  }\n  useEffect(() => {\n    load_subjects_of_teacher()\n  },[])\n  return (\n    <>\n      {\n        subjects ? (<>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select A Subject</label>\n              <select className=\"form-select\" aria-label=\"Default select example\" required  onChange={(e) => {load_lectures(e.target.value)}}>\n                <option value=\"\">....</option>\n                {subjects && subjects.map((item,index) => (\n                    <option key={index} value={item.slug}>{item.subject_name}</option>\n                ))}               \n              </select>\n        </div>\n        \n        {\n          FilterLecture ? (\n<CRow>\n            <CCol xs>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <div className='d-flex flex-wrap justify-between'>\n                    <div>\n                      <strong>Subject Attendance History</strong>\n                    </div>\n                    <div>\n                      <div className='d-flex'>\n                        <div>\n                          <input type=\"date\" id=\"validationCustom01\"  required  onChange={(e)=>{search_lecture(e.target.value)}}/>\n                        </div>\n                        <div className='mx-2'>  \n                        </div>\n                      </div>\n                    \n                    \n                    </div>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n\n                  <CTable align=\"middle\" className=\"mb-0 border text-center\" hover responsive>\n                    <CTableHead color=\"light\">\n                      <CTableRow>\n                        <CTableHeaderCell>classroom</CTableHeaderCell>\n                        <CTableHeaderCell>Lecture Type</CTableHeaderCell>\n                        <CTableHeaderCell>Date</CTableHeaderCell>\n                        <CTableHeaderCell>Time</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      {FilterLecture.map((lecture, index) => (\n                        lecture.session.map((session,index)=>(\n                          <CTableRow v-for=\"item in tableItems\" key={index} onClick={(e) => get_session_data(session.session_id)}>\n                          <CTableDataCell style={{fontSize:'0.8rem'}}>\n                            <div>{lecture.classroom}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.8rem'}}>\n                            <div>{lecture.type.charAt(0).toUpperCase() + lecture.type.slice(1)}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.6rem'}}>\n                            <div>{session.day}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.5rem'}}>\n                            <span className='d-block'>{moment(lecture.start_time.slice(0, 5), 'HH:mm').format('h:mm A')} </span>\n                            <span className='d-block'>To</span> \n                            <span className='d-block'>{moment(lecture.end_time.slice(0, 5), 'HH:mm').format('h:mm A')}</span>\n                          </CTableDataCell>\n                        </CTableRow>\n                        ))\n                        \n                      ))}\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          ) : ( lecture ? (<CRow>\n            <CCol xs>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <div className='d-flex flex-wrap justify-between'>\n                    <div>\n                      <strong>Subject Attendance History</strong>\n                    </div>\n                    <div>\n                      <div className='d-flex'>\n                        <div>\n                          <input type=\"date\" id=\"validationCustom01\"  required  onChange={(e)=>{search_lecture(e.target.value)}}/>\n                        </div>\n                        <div className='mx-2'>\n                        \n                        </div>\n                      </div>\n                    \n                    \n                    </div>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                  <CTable align=\"middle\" className=\"mb-0 border text-center\" hover responsive>\n                    <CTableHead color=\"light\">\n                      <CTableRow>\n                        <CTableHeaderCell>Class</CTableHeaderCell>\n                        <CTableHeaderCell>Type</CTableHeaderCell>\n                        <CTableHeaderCell>Date</CTableHeaderCell>\n                        <CTableHeaderCell>Time</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      \n                    { lecture.length > 0  ? (\n                      lecture.map((lecture, index) => (\n                        lecture.session.map((session,index)=>(\n                          <CTableRow v-for=\"item in tableItems\" key={index} onClick={(e) => get_session_data(session.session_id)}>\n                          <CTableDataCell style={{fontSize:'0.8rem'}}>\n                            <div>{lecture.classroom}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.8rem'}}>\n                            <div>{lecture.type.charAt(0).toUpperCase() + lecture.type.slice(1)}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.6rem'}}>\n                            <div>{session.day}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell style={{fontSize:'0.5rem'}}>\n                            <span className='d-block'>{moment(lecture.start_time.slice(0, 5), 'HH:mm').format('h:mm A')} </span>\n                            <span className='d-block'>To</span> \n                            <span className='d-block'>{moment(lecture.end_time.slice(0, 5), 'HH:mm').format('h:mm A')}</span>\n                          </CTableDataCell>\n                        </CTableRow>\n                        )) \n                        \n                        \n                      ))\n                    ) \n                    :(\n                      <CTableRow v-for=\"item in tableItems\">\n                        <CTableDataCell colSpan={4}>\n                          <div className='alert alert-primary w-100 my-2'>\n                            <span className=''>No Lecture Sessions Are There for This Subject</span>\n                          </div>\n                        \n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                    }\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>) : (null)\n          )\n        }\n\n        </>) : (null)\n      }\n       {\n        attendances && <Session_history visible={visible} setVisible={setVisible} attendances={attendances} session_data={session_data}></Session_history>\n       } \n       \n       {\n         !lecture &&<>\n            <div className='d-flex justify-content-center'>\n                <img style={{maxWidth:'70%',height:'auto'}} src='/static/svgs/lecturehistory.svg'></img>\n            </div>\n        </>\n       }\n        \n    </>\n  )\n}\n\nexport default LectureHistory","import React from 'react'\nimport axios from 'axios'\nimport useAPI from 'src/global_function/useApi'\nimport Swal from 'sweetalert'\n\nfunction urlB64ToUint8Array(base64String) {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4)\n  const base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/')\n\n  const rawData = window.atob(base64)\n  const outputArray = new Uint8Array(rawData.length)\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i)\n  }\n  return outputArray\n}\n\nfunction AdditionalFeatures() {  \n  const [StoredTokens, CallAPI] = useAPI()\n\n  const SaveSubscription = async (subscription) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/save_web_push_subscription/',\n      'post',\n      headers,\n      {subscription:subscription},\n      null,\n    )\n    if (response_obj.error === false) {\n        Swal(\"Good job!\", \"You'll be notified about your upcoming lecture sessions\", \"success\")\n    } else {\n      Swal(\"Oops!\", response_obj.errorMessage.message, \"error\")      \n    }\n  }\n\n  const subscribe_for_alerts = async () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/set_web_push_subscription',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      if (response.data.VAPID_PUBLIC_KEY) {        \n        if ('Notification' in window && 'serviceWorker' in navigator && 'PushManager' in window) {\n          navigator.serviceWorker.register('/static/workers/NotificationWorker.js').then((registration) => {\n            navigator.serviceWorker.getRegistrations().then(registered => {\n              Notification.requestPermission().then((permission) => {\n                if (permission === 'granted') {\n                  const applicationServerKey = urlB64ToUint8Array(response.data.VAPID_PUBLIC_KEY)\n                  registration.pushManager\n                    .subscribe({\n                      userVisibleOnly: true,\n                      applicationServerKey,\n                    })\n                    .then((subscription) => {\n                      console.log(subscription);\n                        SaveSubscription(subscription)                    \n                    })\n                    .catch((error) => {\n                      Swal(\"Oops!\", error, \"error\")\n                    })\n                }else{\n                  Swal(\"Oops!\", \"You've denined the notification permission\", \"error\")\n                }            \n            })\n            })\n          })\n        }else{\n          Swal(\"Oops!\", \"Your browser doesn't support push notificaitons!!\", \"error\")\n        }\n      } else {\n        Swal(\"Oops!\", response_obj.errorMessage.message, \"error\")\n      }\n    }\n  }\n  return (\n    <div className='flex justify-center mt-4'>\n      <div className=\"max-w-sm bg-slate-200 p-6  border border-gray-200 rounded-lg shadow dark:border-gray-700\">\n        <svg\n          className=\"w-7 h-7 text-gray-500 dark:text-gray-400 mb-3\"\n          aria-hidden=\"true\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\"\n        >\n          <path d=\"M18 5h-.7c.229-.467.349-.98.351-1.5a3.5 3.5 0 0 0-3.5-3.5c-1.717 0-3.215 1.2-4.331 2.481C8.4.842 6.949 0 5.5 0A3.5 3.5 0 0 0 2 3.5c.003.52.123 1.033.351 1.5H2a2 2 0 0 0-2 2v3a1 1 0 0 0 1 1h18a1 1 0 0 0 1-1V7a2 2 0 0 0-2-2ZM8.058 5H5.5a1.5 1.5 0 0 1 0-3c.9 0 2 .754 3.092 2.122-.219.337-.392.635-.534.878Zm6.1 0h-3.742c.933-1.368 2.371-3 3.739-3a1.5 1.5 0 0 1 0 3h.003ZM11 13H9v7h2v-7Zm-4 0H2v5a2 2 0 0 0 2 2h3v-7Zm6 0v7h3a2 2 0 0 0 2-2v-5h-5Z\" />\n        </svg>\n        <a href=\"#\">\n          <h5 className=\"mb-2 text-2xl font-semibold tracking-tight text-dark\">\n            Lecture Alerts !!\n          </h5>\n        </a>\n        <p className=\"mb-3 font-normal text-gray-500 dark:text-gray-400\">\n          You'll be notified 5 mins before your lecture session !!\n        </p>\n        <a\n          onClick={subscribe_for_alerts}\n          className=\"btn inline-flex font-medium items-center text-blue-600 hover:underline\"\n        >\n          Opt-In\n          <svg\n            className=\"w-3 h-3 ms-2.5 rtl:rotate-[270deg]\"\n            aria-hidden=\"true\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 18 18\"\n          >\n            <path\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M15 11v4.833A1.166 1.166 0 0 1 13.833 17H2.167A1.167 1.167 0 0 1 1 15.833V4.167A1.166 1.166 0 0 1 2.167 3h4.618m4.447-2H17v5.768M9.111 8.889l7.778-7.778\"\n            />\n          </svg>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default AdditionalFeatures\n","import React from 'react'\nimport LectureHistory from './views/teacher/LectureHistory'\nimport AdditionalFeatures from './views/teacher/AdditionalFeatures'\n\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\n\n\n// Base\nconst Timetable = React.lazy(() => import('./views/timetable/Timetable'))\nconst Subject = React.lazy(() => import('./views/subject/Subject'))\nconst Teacherview = React.lazy(() => import('./views/teacher/Teacherview'));\nconst Addstudent = React.lazy(() => import('./views/student_controller/Addstudent'));\nconst AttendanceHistory = React.lazy(() => import('./views/AttendanceHistory/AttendanceHistory'));\nconst StudentDashboard =  React.lazy(() => import('./views/student_controller/StudentDashboard'))\nconst Sessionmanage =  React.lazy(() => import('./views/teacher/Sessionmanage'))\nconst Logout = React.lazy(()=> import('./views/pages/logout/Logout'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\nconst Teacher = React.lazy(()=> import('./views/teacher/Teacher'))\nconst Breadcrumbnav = React.lazy(()=> import('./views/breadcrum/Breadcrumbnav'))\nconst TeacherSidebar = React.lazy(()=> import('./views/teacher/TeacherSidebar'))\n// Buttons\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n  { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n  \n  \n  \n  { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n  \n  \n  { path: '/forms/validation', name: 'Validation', element: Validation },\n  { path: '/manage-teachers',name:'Teacher',element:Teacher},\n  { path: '/breadcrumb',name:'Breadcrumbnav',element:Breadcrumbnav},\n  { path: '/TeacherSidebar',name:'TeacherSidebar',element:TeacherSidebar},\n  { path: '/logout',name:'Logout',element:Logout},\n  { path: '/timetable',name:'Timetable',element:Timetable},\n  { path: '/subject',name:'Subject',element:Subject},\n  { path: '/addstudent',name:'AddStudent',element:Addstudent},\n  { path: '/attendance-history',name:'attendance-history',element:AttendanceHistory},\n  { path: '/teacher/dashboard',name:'Teacherview',element:Teacherview},\n  { path: '/studentdashboard',name:'StudentDashboard',element:StudentDashboard}  ,\n  { path: '/teacher/session',name:'Sessionmanage',element:Sessionmanage}  ,\n  { path: '/teacher/lectures/history',name:'LectureHistory',element:LectureHistory},\n  { path: '/teacher/lectures/additional-features',name:'LectureHistory',element:AdditionalFeatures}  \n]\n\n export default routes;","import React, { Suspense, useEffect, useState } from 'react'\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport axios from 'axios'\nimport {base_url} from 'src/base_url'\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\n\nimport expireToken from 'src/global_function/unauthorizedToken'\nimport { APIMiddleware } from 'src/global_function/GlobalFunctions'\n\n// routes config\nimport routes from '../routes'\nimport { cilFace } from '@coreui/icons'\n\nconst AppContent = () => {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken, refreshToken, batches, accessTokenActive, profileDetails } = state\n  const navigate = useNavigate();\n\n  const loadBatches = async () => {\n    const header = {\n      \"Content-Type\": \"application/json\",\n      'ngrok-skip-browser-warning': true\n    }\n    const axiosInstance = axios.create()\n    let endpoint = `/manage/get_batches`; let method = 'get'; let headers = header;\n    let response_obj = await APIMiddleware(axiosInstance, endpoint, method, headers)\n    if (response_obj.error == false) {\n      let response = response_obj.response\n      ctxDispatch({ type: 'GET_BATCHES', payload: response.data.data });\n      response.data.data.map((item) => {\n        if (item.active) {\n          ctxDispatch({ type: 'CURRENT_BATCH_SLUG', payload: item });\n        }\n      })\n    } else {\n      \n    }\n  }\n\n  useEffect(() => {\n    if (accessToken) {\n      if (profileDetails.obj.profile.role === \"admin\") {\n        // loadBatches()\n      }\n    }\n  }, []);\n  return (\n    <>\n    \n      <CContainer lg>\n        <Suspense fallback={<CSpinner color=\"primary\" />}>\n          <Routes>\n            {routes.map((route, idx) => {\n              return (\n                route.element && (\n                  <Route\n                    key={idx}\n                    path={route.path}\n                    exact={route.exact}\n                    name={route.name}\n                    element={<route.element />}\n                  />\n                )\n              )\n            })}\n            \n            {\n              (() => {\n                if (profileDetails.obj.profile.role === \"admin\") {\n                  return <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />;\n                } else if (profileDetails.obj.profile.role === \"teacher\") {\n                  return <Route path=\"/\" element={<Navigate to=\"teacher/dashboard\" replace />} />;\n                }\n                else if (profileDetails.obj.profile.role === \"student\") {\n  \n                  return <Route path=\"/\" element={<Navigate to=\"studentdashboard\" replace />} />;\n                }\n              })()\n            }\n  \n  \n  \n          </Routes>\n        </Suspense>\n      </CContainer>\n    </>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useEffect, useContext , useState} from 'react'\nimport { Store } from 'src/views/forms/validation/store'\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { profileDetails } = state\n  const [adminEmail, setadminEmail] = useState(\"\");\n  \n  useEffect(() => {\n    if(profileDetails){\n      setadminEmail(profileDetails.obj.profile.email)\n    }\n  }, [profileDetails]);\n  const logoutAdmin = () => {\n        \n        localStorage.clear()\n        navigate(\"/login\")\n  }\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n      <div className=\"text-medium-emphasis\">{adminEmail}</div>\n      </CDropdownToggle>              \n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect, useContext , useState} from 'react'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMenu } from '@coreui/icons'\nimport { Store } from 'src/views/forms/validation/store'\n\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { profileDetails } = state\n  const [adminEmail, setadminEmail] = useState(\"\");\n  \n  useEffect(() => {\n    if(profileDetails){\n      setadminEmail(profileDetails.email)\n    }\n  }, [profileDetails]);\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-2\">\n      <CContainer fluid className='d-flex flex-wrap'>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>      \n      \n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\nimport { CSidebar, CSidebarBrand, CSidebarNav } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\nimport smartrollicon from '../smartroll_logo.png'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken, refreshToken, profileDetails } = state\n\n\n\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      palcement=\"end\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <img className=\"p-3\" src={smartrollicon}></img>\n      <CSidebarNav>\n        <SimpleBar>\n          {profileDetails.obj.profile.role === \"admin\" && (\n            <AppSidebarNav\n              items={navigation.admin_role}\n            />\n          )}\n          {profileDetails.obj.profile.role === \"teacher\" && (\n            <AppSidebarNav\n              items={navigation.teacher_role}\n            />\n          )}\n          {profileDetails.obj.profile.role === \"student\" && (\n            <AppSidebarNav\n              items={navigation.student_role}\n            />\n          )}\n        </SimpleBar>\n      </CSidebarNav>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React, { useEffect, useState } from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport { useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { Store } from 'src/views/forms/validation/store';\nimport axios from 'axios';\nimport {base_url} from 'src/base_url';\nimport { jwtDecode } from \"jwt-decode\";\nimport expireToken from 'src/global_function/unauthorizedToken';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst DefaultLayout = () => {  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken , refreshToken, loader_state} = state\n  const [serverAvaibility,setServerAvaibility] = useState(false)\n  const [_404,set404] = useState(true)\n  const [accessTokenValid,setAccessTokenValid] = useState(false)\n  const [progress,setProgress] = useState(0);  \n  const navigate = useNavigate();  \n  if (typeof window !== 'undefined') {\n    window.setProgress = setProgress;\n  }\n\n  const expireToken = async (refreshToken)=>{\n    const header = {\n        'ngrok-skip-browser-warning':true\n      }\n    axios.post(`${base_url}/auth/api/token/refresh/`,{\n        \"refresh\":refreshToken\n    },{headers:header})\n    .then((response)=>{\n        ctxDispatch({ type: 'ACCESS_TOKEN', payload: response.data.access});\n        ctxDispatch({ type: 'REFRESH_TOKEN', payload: response.data.refresh });\n        localStorage.setItem('accessToken',response.data.access)\n        localStorage.setItem('refreshToken',response.data.refresh)        \n        const decoded = jwtDecode(response.data.access); \n        ctxDispatch({ type: 'SET_PROFILE', payload: decoded});\n        setAccessTokenValid(true)\n    })\n    .catch((error)=>{        \n        localStorage.removeItem('accessToken')\n        localStorage.removeItem('refreshToken')\n        navigate('/login')\n    })\n}\n\nconst checkAccessTokenAuthenticity = async (accessToken) => {    \n  const headers = {\n    \"Content-Type\":\"application/json\",      \n    'ngrok-skip-browser-warning':true,\n    'Authorization': `Bearer ${accessToken}`\n  }\n\n  axios.get(`${base_url}/check_token_authenticity/`,{headers:headers})\n  .then((response)=>{\n    if(response.data.data === true){\n      const decoded = jwtDecode(accessToken); \n      ctxDispatch({ type: 'SET_PROFILE', payload: decoded});\n      setAccessTokenValid(true)\n    }    \n  })\n  .catch((error)=>{        \n    if(refreshToken){\n      expireToken(refreshToken)\n    }else{\n      navigate('/login')\n    }\n  })    \n}\nconst checkServerAvaibility = async ()=> {\n  \n  const headers = {\n       \"Content-Type\":\"application/json\",      \n       'ngrok-skip-browser-warning':true,\n       \n  }\n  axios.get(`${base_url}/check_server_avaibility/`,{headers:headers})\n  .then((response)=>{\n    setServerAvaibility(true)\n    if(accessToken){\n      checkAccessTokenAuthenticity(accessToken)\n    }else{\n      navigate('/login')\n    }\n  })\n  .catch((error)=>{    \n      navigate(\"/404\")\n  })    \n}\n\n  const decodeToken= () => {\n    const decoded = jwtDecode(accessToken);              \n    // if (typeof window !== 'undefined') {      \n        window.user_profile = decoded.profile;\n    // }\n    ctxDispatch({ type: 'SET_PROFILE', payload: decoded});    \n  }\n  \n  useEffect(() => {    \n    checkServerAvaibility()   \n},[])  \n  if(accessToken && accessTokenValid){\n    return (    \n      <div>\n  {/* <LoadingBar color={'#1f6feb'} progress={progress}\n      onLoaderFinished={() => setProgress(0)} /> */}      \n      <div  className={!loader_state ? 'd-none' : ''} style={{backdropFilter: 'blur(5px)',height: '100vh', width: '100%', position: 'absolute',zIndex: 9999,top: 0, justifyContent: 'center', display: 'flex', alignItems: 'center', left: 0 }}>\n        <img className=\"animated-container\" style={{height:'10vh'}} src='/static/svgs/loader.svg'></img>\n      </div>\n        <AppSidebar />\n        <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n          <AppHeader />\n          <div className=\"body flex-grow-1 px-3\">\n            <AppContent />\n          </div>\n      \n        </div>\n      </div>    \n  )\n  }else{\n    return null\n  }\n}\n\nexport default DefaultLayout\n","import React from 'react'\nimport { useState , useContext,useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Store } from 'src/views/forms/validation/store'\nimport axios from 'axios'\nimport {base_url} from 'src/base_url'\nimport expireToken from 'src/global_function/unauthorizedToken'\nimport { APIMiddleware } from 'src/global_function/GlobalFunctions'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableDataCell,\n  CFormSelect\n} from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport { showAlert } from 'src/global_function/GlobalFunctions'\nimport useAPI from 'src/global_function/useApi'\n\nconst Subject = () => {\n\n    const [subjects, set_Subjects] = useState(null)\n    const [semester,set_semester] = useState(null)\n    //costom hook to call the API\n    const [term,set_term] = useState(null)\n    \n    const [StoredTokens,CallAPI] = useAPI()\n    const [current_semester, set_current_semester] = useState(null)\n\n    const load_subject = async()=>{\n        const header = {\n            \"Content-Type\":\"application/json\",      \n            'ngrok-skip-browser-warning':true\n          }\n          const axiosInstance = axios.create()\n          let endpoint = `/manage/get_subject`;let method='get';let headers = header;\n          let response_obj = await CallAPI(StoredTokens,axiosInstance,endpoint,method,headers,null,null)\n          if(response_obj.error == false){\n          let response = response_obj.response          \n          set_Subjects(response.data.data)\n        }else{            \n        }   \n    }\n    const load_semester = async(current_term)=>{\n      \n      const headers = {\n        \"Content-Type\":\"application/json\",\n        'ngrok-skip-browser-warning':true\n      }\n      const axiosInstance = axios.create()\n      const response_obje = await CallAPI(StoredTokens,axios,\"/manage/get_semesters\",\"get\",headers,null,{\"term_slug\":current_term})\n      if(response_obje.error == false){\n        const response = response_obje.response        \n        set_semester(response.data.data)\n      }\n      else{        \n      }\n    }\n\n\n\n    const load_term = async()=>{\n      const header = {\n        \"Content-Type\":\"application/json\",\n        'ngrok-skip-browser-warning':true\n      }\n      const axiosInstance = axios.create\n      let endpoint = `/manage/get_terms`;let method='get';let headers = header;\n      let response_obj = await CallAPI(StoredTokens,axiosInstance,endpoint,method,headers)    \n      if(response_obj.error == false){\n      let response = response_obj.response\n          set_term(response.data.data)\n    }else{  \n      alert(response_obj.errorMessage.message)\n    }  \n    }\n\n    const [validated, setValidated] = useState(false)\n    const [subject_name, set_subject_name] = useState(\"\")\n    const [subject_code, set_subject_code] = useState(\"\")\n    const [subject_credit, set_subject_credit] = useState(\"\")\n    const [currentSelectSemester,setcurrentSelectSemester] = useState(\"\")\n    const { state, dispatch: ctxDispatch } = useContext(Store);\n    const { accessToken,refreshToken } = state\n    const navigate = useNavigate()\n    const add_batch = async (body) => {\n      \n      const header = {\n        \"Content-Type\":\"application/json\",      \n        'ngrok-skip-browser-warning':true\n      }\n      const axiosInstance = axios.create()\n      let endpoint = `/manage/add_subject/`;let method='post';let headers = header;\n      let response_obj = await APIMiddleware(axiosInstance,endpoint,method,headers,body,null)\n      if(response_obj.error == false){\n          let response = response_obj.response\n          set_Subjects(prevArray => [...prevArray, response.data.data])\n          showAlert(\"success\",\"Subject Added successfully...!\")\n        }else{            \n          alert(response_obj.errorMessage.message)\n        }    \n    }\n    \n    const handleSubmit = (event) => {\n      \n      const form = event.currentTarget\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n        alert(\"Please Enter Valid Subject Information\")\n        return\n      }\n      setValidated(true)\n      const body = {\n        \"code\": subject_code,\n        \"subject_name\": subject_name,\n        \"credit\": subject_credit,\n        \"semester_slug\":current_semester,\n      }\n      event.preventDefault()\n      add_batch(body)\n      \n    }\n\n    useEffect(() => {\n        load_term()\n        load_subject()\n       \n    }, [])\n    \n  return (\n    <>\n    <>\n    <CRow>\n    <CCol>\n        {term && (\n            <>\n              <CCard className={`mb-3`}>\n                <CCardHeader>select term</CCardHeader>\n                <CCardBody>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    onChange={(e) => {\n                      // console.log(e.target.value)\n                      load_semester(e.target.value)\n                    }}\n                  >\n                    <option value=\"\">Select Term</option>\n                    {term.map((item, index) => (\n                      <option key={index} value={item.slug}>\n                        Term : {item.start_year} - {item.end_year}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </CCardBody>\n              </CCard>\n            </>\n          )}\n          {semester && (\n            <>\n              <CCard className={`mb-3`}>\n                <CCardHeader>Semester</CCardHeader>\n                <CCardBody>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    onChange={(e) => {\n                     set_current_semester(e.target.value)\n                    }}\n                  >\n                    <option value=\"\">Select Semester</option>\n                    {semester.map((item, index) => (\n                      <option key={index} value={item.slug}>\n                        Semester - {item.no}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </CCardBody>\n              </CCard>\n            </>\n          )}\n        </CCol>\n      </CRow>\n      {\n        current_semester ? (\n          <CRow>\n            <CCol xs={12}>\n          <CCard className=\"mb-3\">\n            <CCardHeader>\n              <strong>Subjects</strong>\n            </CCardHeader>\n            <CCardBody>\n                <CForm\n            className=\"row g-3 needs-validation\"\n            noValidate\n            validated={validated}\n            onSubmit={handleSubmit}\n          >\n            <CCol md={12}>\n              <CFormLabel htmlFor=\"validationCustom01\">Subject Name</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom01\" onChange={e => set_subject_name(e.target.value)} required />\n              <CFormFeedback valid>Looks good!</CFormFeedback>\n            </CCol>\n            \n            \n            <CCol md={6}>\n              <CFormLabel htmlFor=\"validationCustom01\">Subject Code</CFormLabel>\n              <CFormInput type=\"number\" id=\"validationCustom01\" onChange={e => set_subject_code(e.target.value)} required />\n              <CFormFeedback valid>Looks good!</CFormFeedback>\n            </CCol>\n            <CCol md={6}>\n              <CFormLabel htmlFor=\"validationCustom01\">Subject Credit</CFormLabel>\n              <CFormInput type=\"number\" id=\"validationCustom01\" onChange={e => set_subject_credit(e.target.value)} required />\n              <CFormFeedback valid>Looks good!</CFormFeedback>\n            </CCol>\n            <CCol xs={12}>\n              <button className='btn btn-outline-dark form-control' type=\"submit\">\n                Submit form\n              </button>\n            </CCol>\n                </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n        ) : (null)\n      }\n      \n      <CRow>\n        {\n          subjects ? (\n            <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Subject History</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell>Subject Name</CTableHeaderCell>\n                    <CTableHeaderCell>Subject Code</CTableHeaderCell>\n                    <CTableHeaderCell>Semester</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>                \n                <CTableBody>\n                  {subjects.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell>\n                        <div>{item.subject_name.charAt(0).toUpperCase() + item.subject_name.slice(1)}</div>\n                      </CTableDataCell>\n                      \n                      <CTableDataCell>\n                        <div>{item.code}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                      <div>{item.semester.no}</div>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n          ) : (null)\n        }\n        \n      </CRow>\n    </>\n    </>\n  )\n}\n\nexport default Subject","import React, { useState, useEffect, useRef } from 'react'\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\nimport moment from 'moment';\nimport {\n  COffcanvas,\n  COffcanvasBody,\n  CAlert,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CRow,\n  CCol,\n  CFormCheck\n} from '@coreui/react'\nimport axios from 'axios';\nimport useAPI from 'src/global_function/useApi'\nconst Session_history = ({ visible, setVisible, attendances, session_data }) => {\n  const tableRef = useRef(null);\n  const [isRefReady, setIsRefReady] = useState(false);\n  const [StoredTokens, CallAPI] = useAPI()\n  useEffect(() => {\n    if (tableRef.current) {\n      setIsRefReady(true);\n    }\n  }, [tableRef.current])\n  const mark_student_attendance = async (event, attendance_Slug) => {\n    event.preventDefault()\n    try {\n      if(!confirm(\"Are you sure you want to mark the attendance manually?\"))return;\n      // console.log(attendance_Slug)\n      event.target.checked = \"checked\"\n      event.target.disabled = true\n      const axiosInstance = axios.create()\n      const headers = {\n        'Content-Type': \"application/json\",\n        'ngrok-skip-browser-warning': true\n      }\n      const body = {\n        \"attendance_slug\":attendance_Slug\n      }\n      const response_obj = await CallAPI(\n        StoredTokens,\n        axiosInstance,\n        `/manage/session/mark_attendance_for_absent_student/`,\n        'post',\n        headers,\n        body,\n        null,\n      )\n      if (response_obj.error === false) {\n        \n        const response = response_obj.response\n        const div_element = event.target.parentElement\n        const children = div_element.children\n        children[1].innerText = \"P\"\n        div_element.removeChild(children[0])\n        var svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        svgElement.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n        svgElement.setAttribute(\"width\", \"16\");\n        svgElement.setAttribute(\"height\", \"16\");\n        svgElement.setAttribute(\"fill\", \"currentColor\");\n        svgElement.setAttribute(\"class\", \"mx-auto bi bi-patch-check\");\n        svgElement.setAttribute(\"viewBox\", \"0 0 16 16\");\n\n        var path1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path1.setAttribute(\"fill-rule\", \"evenodd\");\n        path1.setAttribute(\"d\", \"M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0\");\n\n        var path2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path2.setAttribute(\"d\", \"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911z\");\n\n        svgElement.appendChild(path1);\n        svgElement.appendChild(path2);\n        div_element.prepend(svgElement)\n      }\n      else{\n        alert(response_obj.errorMessage.message)\n      }\n    }\n    catch (error) {\n      alert(error.message)\n    }\n\n  }\n  return (\n    <>\n      <COffcanvas\n        className=\"card w-100\"\n        placement=\"end\"\n        visible={visible}\n        onHide={() => setVisible(false)}\n        data-coreui-backdrop=\"static\"\n      >\n        <CAlert\n          color=\"success\"\n          visible={true}\n          className=\"justify-content-between align-items-center d-flex\"\n        >\n          <svg\n            onClick={() => setVisible(false)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            className=\"bi bi-x-lg\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z\" />\n          </svg>\n        </CAlert>\n        <COffcanvasBody>\n          <div className='w-100'>\n            {tableRef.current ? (<DownloadTableExcel\n\n              filename={`${session_data.lecture.subject.subject_name} - ${new Date(session_data.day).toLocaleString()}`}\n              sheet=\"attendance\"\n              currentTableRef={tableRef.current}\n            >\n\n              <button className='my-2 w-100 btn btn btn-outline-primary'> Export excel </button>\n\n            </DownloadTableExcel>) : null}\n          </div>\n          <CRow className=\"w-100 flex-col\">\n            <CCol className=\"col-12\">\n              <div className='table-responsive'>\n                <table align=\"middle\" className=\"table align-middle table-hover text-center mb-0 border hover responsive\" ref={tableRef}>\n                  <CTableHead color=\"light\">\n                    <CTableRow aria-colspan={5}>\n                      <CTableHeaderCell colSpan={5}>L.D COLLEGE OF ENGINEERING</CTableHeaderCell>\n                    </CTableRow>\n                    <CTableRow aria-colspan={5}>\n                      <CTableHeaderCell colSpan={5}>Subject: {session_data.lecture.subject.subject_name} | DATE: {session_data.day} | TIME: {moment(session_data.lecture.start_time.slice(0, 5), 'HH:mm').format('h:mm A')} to {moment(session_data.lecture.end_time.slice(0, 5), 'HH:mm').format('h:mm A')}</CTableHeaderCell>\n                    </CTableRow>\n                    <CTableRow>\n                      {/* <CTableHeaderCell>SR. NO</CTableHeaderCell> */}\n                      <CTableHeaderCell>Enrollment No</CTableHeaderCell>\n                      <CTableHeaderCell>Student Name</CTableHeaderCell>\n                      {/* <CTableHeaderCell>IP Addr</CTableHeaderCell> */}\n                      <CTableHeaderCell>Batch</CTableHeaderCell>\n                      <CTableHeaderCell>Status</CTableHeaderCell>\n                    </CTableRow>\n                  </CTableHead>\n                  <CTableBody>\n                    {attendances &&\n                      attendances.map((item, index) => (\n                        \n                        <CTableRow v-for={`alert alert-primary item in tableItems`} style={item.manual ? {border:\"2px solid darkorange\"} : null} key={index}>\n                          {/* <CTableDataCell>\n                                        <div>{item.student.sr_no}</div>   \n                                </CTableDataCell> */}\n                          <CTableDataCell>\n                            <div>{item.student.enrollment ? item.student.enrollment : \"-\"}</div>\n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{item.student.profile.name ? item.student.profile.name : '-'}</div>\n                          </CTableDataCell>\n                          {/* <CTableDataCell>\n                            <div>{item.marking_ip ? item.marking_ip : '-'}</div>\n                          </CTableDataCell> */}\n                          <CTableDataCell>\n                            <div>\n                              {item.batches\n                                ? item.batches.map((batch, index) => (\n                                  <span key={index}>{batch.batch_name.toUpperCase()}</span>\n                                ))\n                                : '-'}\n                            </div>\n\n                          </CTableDataCell>\n                          {item.is_present ? (<CTableDataCell>\n                            <div className=\"text-success d-flex justify-content-center align-items-center\">\n                              <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                width=\"16\"\n                                height=\"16\"\n                                fill=\"currentColor\"\n                                className=\"mx-auto bi bi-patch-check\"\n                                viewBox=\"0 0 16 16\"\n                              >\n                                <path\n                                  fillRule=\"evenodd\"\n                                  d=\"M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0\"\n                                />\n                                <path d=\"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911z\" />\n                              </svg>\n                              <p style={{ visibility: 'hidden' }}>P</p>\n                            </div>\n                          </CTableDataCell>) : (<CTableDataCell>\n                            <div className=\"text-success d-flex justify-content-center align-items-center\">\n                              {/* <CFormCheck onClick={(e) => { mark_student_attendanc(e, item.slug) }}>Mark Attendance</CFormCheck> */}\n                              <input type=\"checkbox\" onClick={(e)=>{ mark_student_attendance(e,item.slug)}}></input>\n                              <p style={{ visibility: 'hidden' }}>A</p>\n                            </div>\n                          </CTableDataCell>)}\n                        </CTableRow>\n                      ))}\n                  </CTableBody>\n                </table>\n              </div>\n            </CCol>\n          </CRow>\n        </COffcanvasBody>\n      </COffcanvas>\n    </>\n  )\n}\n\nexport default Session_history"],"names":["admin_role","component","CNavTitle","name","CNavItem","to","icon","_jsx","CIcon","cilLibraryBuilding","customClassName","cilNotes","cilSchool","cilPeople","cilCalendar","cilAccountLogout","teacher_role","cilClock","student_role","base_url","websocket","AppSidebarNav","_ref","items","location","useLocation","navLink","badge","_jsxs","_Fragment","children","CBadge","color","className","text","navItem","item","index","rest","Component","_createElement","NavLink","key","navGroup","_item$items","idx","String","toggler","visible","pathname","startsWith","map","React","APIMiddleware","async","reqInstance","endpoint","method","headers","body","arguments","length","undefined","params","access","localStorage","getItem","refresh","response_obj","concat","window","setProgress","get","error","response","status","result","expireToken","setItem","post","axios","refreshToken","then","data","catch","showAlert","title","Swal","button","makeRequest","Error","useAPI","navigate","useNavigate","state","dispatch","ctxDispatch","useContext","Store","accessToken","loader_state","StoredTokens","CallAPI","tokens","type","payload","errorMessage","token_data","action","removeItem","LectureHistory","subjects","SetSubjects","useState","lecture","setLecture","FilterLecture","setFilterLecture","attendances","setAttendances","setVisible","session_data","setSessionData","search_lecture","day","filteredData","filter","session","some","get_session_data","axiosInstance","create","session_id","marked_attendances","alert","message","useEffect","load_subjects_of_teacher","required","onChange","e","subject_slug","load_lectures","target","value","slug","subject_name","CRow","CCol","xs","CCard","CCardHeader","id","CCardBody","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","onClick","CTableDataCell","style","fontSize","classroom","charAt","toUpperCase","slice","moment","start_time","format","end_time","colSpan","Session_history","maxWidth","height","src","xmlns","fill","viewBox","d","href","VAPID_PUBLIC_KEY","navigator","serviceWorker","register","registration","getRegistrations","registered","Notification","requestPermission","permission","applicationServerKey","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt","urlB64ToUint8Array","pushManager","subscribe","userVisibleOnly","subscription","console","log","SaveSubscription","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Dashboard","Timetable","Subject","Teacherview","Addstudent","AttendanceHistory","StudentDashboard","Sessionmanage","Logout","FormControl","path","exact","element","AdditionalFeatures","AppContent","batches","accessTokenActive","profileDetails","obj","profile","role","CContainer","lg","Suspense","fallback","CSpinner","Routes","routes","route","Route","Navigate","AppHeaderDropdown","adminEmail","setadminEmail","email","CDropdown","variant","CDropdownToggle","placement","caret","AppHeader","useDispatch","sidebarShow","useSelector","CHeader","position","fluid","CHeaderToggler","cilMenu","size","CHeaderNav","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","palcement","onVisibleChange","smartrollicon","CSidebarNav","SimpleBar","navigation","DefaultLayout","serverAvaibility","setServerAvaibility","_404","set404","accessTokenValid","setAccessTokenValid","progress","checkAccessTokenAuthenticity","decoded","jwtDecode","checkServerAvaibility","backdropFilter","width","zIndex","top","justifyContent","display","alignItems","left","set_Subjects","semester","set_semester","term","set_term","current_semester","set_current_semester","validated","setValidated","set_subject_name","subject_code","set_subject_code","subject_credit","set_subject_credit","currentSelectSemester","setcurrentSelectSemester","load_term","load_subject","CFormSelect","response_obje","current_term","load_semester","start_year","end_year","no","CForm","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","prevArray","add_batch","md","CFormLabel","htmlFor","CFormInput","CFormFeedback","valid","code","tableRef","useRef","isRefReady","setIsRefReady","current","COffcanvas","onHide","CAlert","COffcanvasBody","DownloadTableExcel","filename","subject","Date","toLocaleString","sheet","currentTableRef","ref","manual","border","student","enrollment","batch","batch_name","is_present","fillRule","visibility","attendance_Slug","confirm","checked","disabled","div_element","parentElement","innerText","removeChild","svgElement","document","createElementNS","setAttribute","path1","path2","appendChild","prepend","mark_student_attendance"],"sourceRoot":""}