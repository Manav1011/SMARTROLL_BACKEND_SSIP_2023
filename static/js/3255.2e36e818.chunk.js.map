{"version":3,"file":"static/js/3255.2e36e818.chunk.js","mappings":"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","sources":["views/forms/form-control/FormControl.js"],"sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\nimport { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport { Store } from '../validation/store'\nimport base_url from 'src/base_url'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CFormSelect,\n  CTableDataCell\n} from '@coreui/react'\nimport expireToken from 'src/global_function/unauthorizedToken'\nimport { APIMiddleware } from 'src/global_function/GlobalFunctions'\nimport { useNavigate } from 'react-router-dom'\n\nconst CustomStyles = (Semesters, setSemesters, batchSlug) => {\n  const [validated, setValidated] = useState(false)\n\n  const [Snumber, setSnumber] = useState(\"\");\n  const [Sstatus, setSstatus] = useState(\"\");\n  const [Ssdate, setSsdate] = useState(\"\");\n  const [Sedate, setSedate] = useState(\"\");\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken,refreshToken, semesters , objectCount } = state\n  const [semCount, setsemCount] = useState(objectCount);\n  const navigate = useNavigate()\n\n\n\n\n  const add_sem = async (body) => {\n    const header = {\n      \"Content-Type\":\"application/json\",      \n      'ngrok-skip-browser-warning':true\n    }\n    const axiosInstance = axios.create()\n    let endpoint = `/manage/add_semester`;let method='post';let headers = header;\n    let response_obj = await APIMiddleware(axiosInstance,endpoint,method,headers,body,null)\n    if(response_obj.error == false){\n      let response = response_obj.response\n      let changeCount = {...objectCount}\n      changeCount.semesters += 1\n      console.log(changeCount);\n      ctxDispatch({ type: 'GET_OBJECTS', payload: changeCount });\n      if(response.data.data.status)\n      {\n        setSemesters(prevArray => [...prevArray, response.data.data])\n      }\n    }else{  \n      console.log(response_obj.error)\n    }    \n  }\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    event.preventDefault()\n    setValidated(true)\n    const body = {\n      batch_slug: batchSlug,\n      semester_number: Snumber,\n      start_date: Ssdate,\n      end_date: Sedate\n    }\n    add_sem(body);\n  }\n  return (\n    <CForm\n      className=\"row g-3 needs-validation\"\n      noValidate\n      validated={validated}\n      onSubmit={handleSubmit}\n    >\n      <CCol md={12}>\n        <CFormLabel htmlFor=\"validationCustom01\">Semester Number</CFormLabel>\n        <CFormInput type=\"number\" id=\"validationCustom01\" onChange={e => setSnumber(e.target.value)} required />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor=\"validationCustom02\">Term Start Date</CFormLabel>\n        <CFormInput type=\"date\" id=\"validationCustom02\" onChange={e => setSsdate(e.target.value)} required />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor=\"validationCustom02\">Term End Date</CFormLabel>\n        <CFormInput type=\"date\" id=\"validationCustom02\" onChange={e => setSedate(e.target.value)} required />\n        <CFormFeedback valid>Looks good!</CFormFeedback>\n      </CCol>\n      <CCol xs={12}>\n        <button className='btn btn-outline-dark form-control' type=\"submit\">\n          Submit form\n        </button>\n      </CCol>\n    </CForm>\n  )\n}\n\nconst FormControl = (props) => {\n  const { batchSlug ,chageSteps , setsemSlug } = props\n  const [Semesters, setSemesters] = useState([]);\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken,refreshToken, semesters } = state\n  const navigate = useNavigate()\n  const load_sem = async () => {    \n    const header = {\n      \"Content-Type\":\"application/json\",        \n      'ngrok-skip-browser-warning':true\n    }\n    const axiosInstance = axios.create()\n    let endpoint = `/manage/get_semesters`;let method='get';let headers = header;\n    let response_obj = await APIMiddleware(axiosInstance,endpoint,method,headers,null,{batch_slug: batchSlug })\n    if(response_obj.error == false){\n      let response = response_obj.response      \n        setSemesters(response.data.data)\n        console.log(response.data.data);\n        console.log(Semesters);\n    }else{  \n      console.log(response_obj.error)\n    }\n  }\n\n  useEffect(() => {\n    load_sem()\n  }, []);\n\n\n  return (\n    <>\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-3\">\n            <CCardHeader>\n              <strong>Semesters</strong>\n            </CCardHeader>\n            <CCardBody>{CustomStyles(Semesters, setSemesters, batchSlug)}</CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Semester History</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow onClick={() => {chageSteps('subject');}}>\n                    <CTableHeaderCell>Semester</CTableHeaderCell>\n                    <CTableHeaderCell>Term Start Date</CTableHeaderCell>\n                    <CTableHeaderCell>Term End Date</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {Semesters.map((item, index) => (\n                    item.status ? (\n                      <CTableRow key={index} onClick={() => {chageSteps('subject'); setsemSlug(item.slug);}}>\n                        <CTableDataCell>\n                          <div>{item.no}</div>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <div>{item.start_date}</div>\n                        </CTableDataCell>\n                        <CTableDataCell>\n                          <div>{item.end_date}</div>\n                        </CTableDataCell>\n                      </CTableRow>\n                    ) : null\n                  ))}\n                </CTableBody>\n\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nFormControl.propTypes = {\n  chageSteps:PropTypes.func.isRequired,\n  setsemSlug:PropTypes.func.isRequired,\n  batchSlug: PropTypes.string\n}\nexport default FormControl\n"],"names":["CustomStyles","Semesters","setSemesters","batchSlug","validated","setValidated","useState","Snumber","setSnumber","Sstatus","setSstatus","Ssdate","setSsdate","Sedate","setSedate","state","dispatch","ctxDispatch","useContext","Store","accessToken","refreshToken","semesters","objectCount","semCount","setsemCount","useNavigate","_jsxs","CForm","className","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","async","axiosInstance","axios","create","headers","response_obj","APIMiddleware","body","error","response","changeCount","console","log","type","payload","data","status","prevArray","add_sem","batch_slug","semester_number","start_date","end_date","children","CCol","md","_jsx","CFormLabel","htmlFor","CFormInput","id","onChange","e","target","value","required","CFormFeedback","valid","xs","props","chageSteps","setsemSlug","useEffect","load_sem","_Fragment","CRow","CCard","CCardHeader","CCardBody","CTable","align","hover","responsive","CTableHead","color","CTableRow","onClick","CTableHeaderCell","CTableBody","map","item","index","slug","CTableDataCell","no"],"sourceRoot":""}