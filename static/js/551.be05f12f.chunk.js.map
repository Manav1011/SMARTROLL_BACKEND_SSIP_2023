{"version":3,"file":"static/js/551.be05f12f.chunk.js","mappings":"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","sources":["views/student_controller/StudentDashboard.js"],"sourcesContent":["import React from 'react'\n\nimport { useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CToast,\n  CToastHeader,\n  CToastBody,\n  CAlert,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nimport useAPI from 'src/global_function/useApi'\nimport moment from 'moment'\nimport { BarController } from 'chart.js'\n\nconst StudentDashboard = () => {\n  const [StoredTokens, CallAPI] = useAPI()\n  const [TimeTables, setTimeTables] = useState(null)\n  const [permission_state, set_permission_state]  = useState(false)\n\n  const load_teacher_timetable = async () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/get_timetable_for_student',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      setTimeTables(response.data.data)\n    }\n  }\n\n  const get_location_permission = ()=>{\n    if(!permission_state){\n      if(navigator.geolocation){\n        navigator.geolocation.getCurrentPosition((position)=>{\n          set_permission_state(true)\n        })\n      }\n    }\n  }\n  const mark_attendance = async (btn, lecture_slug) => {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by this browser.')\n      return\n    }\n    try {\n      navigator.geolocation.getCurrentPosition(\n        async (positions) => {\n          const latitude = positions.coords.latitude\n          const longitude = positions.coords.longitude\n          const headers = {\n            'Content-Type': 'application/json',\n            'ngrok-skip-browser-warning': true,\n          }\n          const axiosInstance = axios.create()\n          const response_obj = await CallAPI(\n            StoredTokens,\n            axiosInstance,\n            '/manage/session/mark_attendance_for_student/',\n            'post',\n            headers,\n            { lecture_slug: lecture_slug, latitude: latitude, longitude: longitude },\n            null,\n          )\n          if (response_obj.error === false) {\n            const response = response_obj.response\n            if (response.data.data === true) {\n              btn.disabled = true; btn.classList.add('btn-outline-secondary')\n              alert('your Attendance Marked successfully')\n            }\n          } else {\n            if (response_obj.errorMessage.code == 100) {\n              btn.disabled = true\n              btn.classList.add('btn-outline-secondary')\n            }\n            alert(response_obj.errorMessage.message)\n          }\n        },\n        (error) => {\n          alert(error.message)\n          return\n        },\n        { enableHighAccuracy: true, maximumAge: 0 },\n      )\n    } catch (error) {\n      alert('Location services are not available, Please enable it from you browser')\n      return\n    }\n  }\n\n  useEffect(() => {\n    get_location_permission()\n    load_teacher_timetable()\n  }, [permission_state])\n\n  return (\n    <>\n      {\n        permission_state ? (<CRow className=\"mb-3\">\n        <CCol>\n          {\n            TimeTables && TimeTables.map((branch, index) => {\n              return branch.timetables.map((timetable, index) => {\n                \n                return (\n                  <div key={index}>\n                    <CAlert\n                      className=\"m-0 rounded-0 w-100 p-2 d-flex justify-content-between align-items-center mb-2\"\n                      color=\"primary\"\n                      visible={true}\n                    >\n                      {branch.branch_name}\n                    </CAlert>\n                    {\n                      timetable.schedule ? (timetable.schedule.lectures.length > 0 ? (\n                        timetable.schedule.lectures.map((lecture, index) => {\n                          return (\n                            <div key={index}>\n                            <CRow className=\"flex-column\" style={{ padding: '0' }}>\n                              <CCol className=\"d-flex align-items-center flex-column\" key={index}>\n                                <div className=\"w-100 rounded-0 border-0\">\n                                  <div className=\"\" style={{ paddingBottom: \"0px\" }}>\n                                    <div className=\"justify-content-center w-100\">\n                                      <CToast\n                                        key={index}\n                                        autohide={false}\n                                        visible={true}\n                                        className={`mb-3 mt-3 w-100 ${lecture.is_proxy ? \"border-red-700\" : \"\"}`}\n                                      >\n                                        <CToastHeader className=\"d-flex flex-wrap justify-content-sm-between justify-content-center mx-2\">\n                                          \n                                            <div className={`w-100 fw-bold text-center text-sm-start text-md-start text-lg-start`}>\n                                              <div>\n                                                \n                                                <small className='mx-2 my-2'>\n\n                                                  Semester: {timetable.division.semester.no} | Division : {timetable.division.division_name}\n                                                </small>\n                                              </div>\n                                              <div>\n                                                {\n                                                  lecture.is_proxy  ? (\n                                                    <small className='mx-2 my-2'>\n                                                  {lecture.is_proxy ? \"Proxied from \" : \"\"}\n                                                  {lecture.link ? lecture.link.from_lecture.subject.subject_name : \"\"}\n                                                </small>\n                                                  ) : (null)\n                                                }\n                                                \n                                              </div>\n\n                                              <hr className='w-100 my-2'></hr>\n\n                                            </div>\n                                          <div className=\"fw-bold mx-2\">\n                                            {lecture.subject.subject_name.charAt(0).toUpperCase() + lecture.subject.subject_name.slice(1)}\n                                          </div>\n                                          <small className='mx-2 my-2'>\n                                            {lecture.type.toUpperCase()}\n                                          </small>\n                                          <small className='mx-2 my-2'>\n                                            {moment(lecture.start_time.slice(0, 5), 'HH:mm').format('h:mm A')} |{' '}\n                                            {moment(lecture.end_time.slice(0, 5), 'HH:mm').format('h:mm A')}\n                                          </small>\n                                        </CToastHeader>\n                                        <CToastBody className=\"d-flex flex-row flex-wrap justify-content-center\">\n                                          <CRow className='w-100 align-items-center'>\n                                            <CCol className='text-sm-start text-center col-12 col-sm-4 col-lg-4 col-md-4'>\n                                              Prof - {lecture.teacher.charAt(0).toUpperCase() + lecture.teacher.slice(1)}\n                                            </CCol>\n                                            <CCol className=' text-sm-end col-12 col-sm-4 col-lg-4 col-md-4'>\n                                              <div className='w-100 text-center'>\n                                                {' '}\n                                                {lecture.batches.map((batch, index) => (\n                                                  <span key={index}>\n                                                    {batch.batch_name.toUpperCase()}\n                                                    {index < lecture.batches.length - 1 &&\n                                                      ', '}\n                                                  </span>\n                                                ))}{' '}\n                                              </div>\n                                            </CCol>\n                                            <CCol className='text-sm-end text-center col-12 col-sm-4 col-lg-4 col-md-4'>\n                                              {lecture.classroom.class_name.charAt(0).toUpperCase() + lecture.classroom.class_name.slice(1)}\n                                              {' '}\n                                            </CCol>\n                                          </CRow>\n\n                                          <div className='d-flex w-100'>\n                                            <div className='w-100'>\n                                              {(lecture.session.active === 'pre' ||\n                                                lecture.session.active ===\n                                                'ongoing') && (\n                                                  <button\n                                                    className={`btn ${lecture.session.attendances\n                                                      .is_present\n                                                      ? 'btn-outline-secondary'\n                                                      : 'btn-outline-primary'\n                                                      } w-100 mt-3`}\n                                                    value={lecture.slug}\n                                                    onClick={(e) =>\n                                                      !lecture.session.attendances\n                                                        .is_present &&\n                                                      mark_attendance(\n                                                        e.target,\n                                                        e.target.value,\n                                                      )\n                                                    }\n                                                    disabled={\n                                                      lecture.session.attendances\n                                                        .is_present\n                                                    }\n                                                  >\n                                                    Mark Your Attendance\n                                                  </button>\n                                                )}\n                                              {lecture.session.active === 'post' && (\n                                                <button\n                                                  className=\"btn btn-outline-secondary w-100 mt-3\"\n                                                  disabled={true}\n                                                >\n                                                  Session Ended\n                                                </button>\n                                              )}\n                                            </div>\n                                          </div>\n                                          <div>\n                                          </div>\n                                        </CToastBody>\n                                      </CToast>\n                                    </div>\n                                  </div>\n                                </div>\n                              </CCol>\n                            </CRow>\n                          </div>\n                          )\n                          \n                        })\n                      ) : (<div className='d-flex w-100 justify-content-center'>\n                      <div className='alert alert-warning w-75 my-2 text-center '>\n                <span className=''>No lecture sessions are there for this branch</span>\n              </div>\n                  </div>)) : (<div className='d-flex justify-content-center w-full my-3'><CToast className='w-100' animation={false} autohide={false} visible={true}>\n                      <CToastBody className='text-center w-full'>There is no lecture today....</CToastBody>\n                    </CToast></div>)\n                      \n\n                    }\n                  </div>\n\n                )\n              })\n            })\n          }\n        </CCol>\n      </CRow>) : (<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/ERhEIsEXG50?si=i9ez0hxneFCuAe6E\" title=\"YouTube video player\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>)\n      }\n\n      \n    </>\n  )\n}\n\nexport default StudentDashboard\n"],"names":["StudentDashboard","StoredTokens","CallAPI","useAPI","TimeTables","setTimeTables","useState","permission_state","set_permission_state","useEffect","navigator","geolocation","getCurrentPosition","position","async","axiosInstance","axios","create","response_obj","error","response","data","load_teacher_timetable","_jsx","_Fragment","children","CRow","className","CCol","map","branch","index","timetables","timetable","_jsxs","CAlert","color","visible","branch_name","schedule","lectures","length","lecture","style","padding","paddingBottom","CToast","autohide","concat","is_proxy","CToastHeader","division","semester","no","division_name","link","from_lecture","subject","subject_name","charAt","toUpperCase","slice","type","moment","start_time","format","end_time","CToastBody","teacher","batches","batch","batch_name","classroom","class_name","session","active","attendances","is_present","value","slug","onClick","e","btn","lecture_slug","latitude","positions","coords","longitude","disabled","classList","add","alert","errorMessage","code","message","enableHighAccuracy","maximumAge","mark_attendance","target","animation","width","height","src","title","frameBorder","allow","allowFullScreen"],"sourceRoot":""}