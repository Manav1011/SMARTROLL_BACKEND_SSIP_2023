{"version":3,"file":"static/js/149.25a48a7c.chunk.js","mappings":"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","sources":["_nav.js","base_url.js","components/AppSidebarNav.js","global_function/GlobalFunctions.js","global_function/useApi.js","views/teacher/Session_history.js","views/teacher/LectureHistory.js","routes.js","components/AppContent.js","components/header/AppHeaderDropdown.js","components/AppHeader.js","components/AppSidebar.js","layout/DefaultLayout.js","views/subject/Subject.js"],"sourcesContent":["import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilDrop,\n  cilPencil,\n  cilAccountLogout,\n  cilCalendar,\n  cilNotes,\n  cilPeople,\n  cilLibraryBuilding,\n  cilSchool,\n  cilClock\n  //cilSpeedometer,\n} from '@coreui/icons'\nimport { CNavItem, CNavTitle } from '@coreui/react'\nimport { useContext } from 'react'\n\n\n\n\n\n\nconst _nav = {\n  admin_role:[\n    {\n      component: CNavTitle,\n      name: 'ADMNISTRATION',\n    },\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Subject',\n      to: '/subject',    \n      icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Teachers',\n      to: '/manage-teachers',\n      icon: <CIcon icon={cilSchool} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Add Student',\n      to: '/addstudent',\n      icon: <CIcon icon={cilPeople} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Timetable',\n      to: '/timetable',\n      icon: <CIcon icon={cilCalendar} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },  \n      \n  ],\n  teacher_role:[\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/teacher/dashboard',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'LectureHistory',\n      to: '/teacher/lectures/history',    \n      icon: <CIcon icon={cilClock} customClassName=\"nav-icon\" />,\n    },\n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n  ],\n  student_role:[\n    {\n      component: CNavItem,\n      name: 'Dashboard',\n      to: '/studentdashboard',\n      icon: <CIcon icon={cilLibraryBuilding} customClassName=\"nav-icon\" />,\n    }, \n    {\n      component: CNavItem,\n      name: 'Logout',\n      to: '/logout',    \n      icon: <CIcon icon={cilAccountLogout} customClassName=\"nav-icon\" />,\n    },\n  ]\n}\n\nexport default _nav\n","// export const base_url= `http://${window.location.host}`;\n// export const websocket = `ws://${window.location.host}`;\nexport const base_url= `https://smartroll.ldce.mnv-dev.live`;\nexport const websocket = `wss://smartroll.ldce.mnv-dev.live`;\n\n// const token = localStorage.getItem('accessToken')\n// const header = {\n//     \"Content-Type\":\"application/json\",\n//     \"Authorization\": `Bearer ${token}`,\n//     'ngrok-skip-browser-warning':true\n//   }\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import axios from 'axios'\nimport {base_url} from 'src/base_url'\n\nimport Swal from 'sweetalert';\n\n// Used for handling expired tokens\nconst APIMiddleware = async (reqInstance, endpoint, method, headers, body = null, params = null) => {\n    // Get the access and refresh tokens\n    const access = localStorage.getItem('accessToken');\n    const refresh = localStorage.getItem('refreshToken');\n    headers['Authorization'] = `Bearer ${access}`;\n\n    let response_obj;\n    window.setProgress(100)\n    if (method === 'get') {\n        try {\n            const response = await reqInstance.get(`${base_url}${endpoint}`, { headers, params });\n            response_obj = { 'error': false, 'response': response };\n        } catch (error) {\n            if (error.response && error.response.status === 401) {                \n                const result = await expireToken(refresh);\n                localStorage.setItem('accessToken', result.access);\n                localStorage.setItem('refreshToken', result.refresh);                                \n                response_obj = await APIMiddleware(reqInstance, endpoint, method, headers, body, params);                \n            } else {\n                response_obj = { 'error': true, 'error': error };\n            }\n        }\n    } else if (method === 'post') {\n        try {\n            const response = await reqInstance.post(`${base_url}${endpoint}`, body, { headers });\n            response_obj = { 'error': false, 'response': response };\n        } catch (error) {\n            if (error.response && error.response.status === 401) {\n                const result = await expireToken(refresh);\n                localStorage.setItem('accessToken', result.access);\n                localStorage.setItem('refreshToken', result.refresh);\n                response_obj = await APIMiddleware(reqInstance, endpoint, method, headers, body, params);                \n            } else {\n                response_obj = { 'error': true, 'error': error };\n            }\n        }\n    }    \n    return response_obj;\n};\n\nconst expireToken = async (refreshToken) => {\n    const header = {\n        'ngrok-skip-browser-warning': true\n    };\n\n    return axios.post(`${base_url}/auth/api/token/refresh/`, { \"refresh\": refreshToken }, { headers: header })\n        .then((response) => response.data)\n        .catch((error) => { throw error; });\n};\n\nconst showAlert = (title,text) => {\n    \n    Swal({\n        title: title,\n        text: text,\n        icon: 'success',\n        button: 'OK',\n      });\n  \n  };\n\nexport {APIMiddleware , showAlert}","import axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { Store } from \"src/views/forms/validation/store\";\nimport {base_url} from \"src/base_url\";\n\n\nconst useAPI = () => {  \n  const navigate = useNavigate()\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken , refreshToken , profileDetails, objectCount } = state\n\n  const StoredTokens = {\n    accessToken,\n    refreshToken\n  }\n  const CallAPI = async (tokens=StoredTokens,reqInstance, endpoint, method, headers, body = null, params = null) => {    \n    headers['Authorization'] = `Bearer ${tokens.accessToken}`;    \n    try {\n      const response = await makeRequest(reqInstance, endpoint, method, headers, body, params);\n      return { error: false, response };\n    } catch (error) {            \n        if (error.response && error.response.status === 401) {\n          const result = await expireToken(tokens.refreshToken);          \n          if(result.access && result.refresh){\n            const token_data = {\n              \"accessToken\" : result.access,\n              \"refreshToken\": result.refresh\n            }\n            localStorage.setItem('accessToken',result.access)\n            localStorage.setItem('refreshToken',result.refresh)\n            ctxDispatch({ type: 'ACCESS_TOKEN', payload: result.access});\n            ctxDispatch({ type: 'REFRESH_TOKEN', payload: result.refresh });\n            return CallAPI(token_data, reqInstance, endpoint, method, headers, body, params);\n          }\n          if(result.action == 'tokenExpired' && result.status === 401){\n            localStorage.removeItem('accessToken')\n            localStorage.removeItem('refreshToken')\n            navigate('/auth/sign-in/')\n            return { error: true, result };\n          }\n        } else {\n          return { error: true, errorMessage: error.response.data || 'Unknown error' };\n        }      \n    }\n  }\n  return [StoredTokens,CallAPI]\n};\n\nconst makeRequest = async (reqInstance, endpoint, method, headers, body, params) => {\n  if (method === 'get') {\n    return await axios.get(`${base_url}${endpoint}`, { headers, params });\n  } else if (method === 'post') {\n    return await axios.post(`${base_url}${endpoint}`, body, { headers });\n  } else {\n    throw new Error('Invalid HTTP method');\n  }\n};\n\nconst expireToken = async (refreshToken) => {\n  const header = {\n    'ngrok-skip-browser-warning': true,\n  };  \n  try {\n    const response = await axios.post(`${base_url}/auth/api/token/refresh/, { refresh: ${refreshToken} }, { headers: header }`);\n    return response.data;\n  } catch (error) {\n    if(error.response.status === 401){       \n      return {'action':'tokenExpired','status':error.response.status};\n    }\n  }\n};\n\nexport default useAPI;","import React, { useState, useEffect, useRef } from 'react'\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\nimport {\n    COffcanvas,  \n    COffcanvasBody,  \n    CAlert,\n    CTable,\n    CTableHead,\n    CTableRow,\n    CTableHeaderCell,\n    CTableBody,\n    CTableDataCell,\n    CRow,\n    CCol\n  } from '@coreui/react'\nconst Session_history = ({visible,setVisible,attendances,session_data}) => {\n  const tableRef = useRef(null);\n  const [isRefReady, setIsRefReady] = useState(false);\n  useEffect(() => {\n    if (tableRef.current) {\n      setIsRefReady(true);\n    }\n  },[tableRef.current])\n  return (\n   <>\n   <COffcanvas\n        className=\"card w-100\"\n        placement=\"end\"\n        visible={visible}\n        onHide={() => setVisible(false)}\n        data-coreui-backdrop=\"static\"\n      >\n        <CAlert\n          color=\"success\"\n          visible={true}\n          className=\"justify-content-between align-items-center d-flex\"\n        >\n          <svg\n            onClick={() => setVisible(false)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            className=\"bi bi-x-lg\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z\" />\n          </svg>\n        </CAlert>\n        <COffcanvasBody>\n            <div className='w-100'>\n            {tableRef.current ? (<DownloadTableExcel\n                        filename={`${session_data.lecture.subject.subject_name} - ${new Date(session_data.day).toLocaleString()}`}\n                        sheet=\"attendance\"\n                        currentTableRef={tableRef.current}\n                    >\n\n                      <button className='my-2 w-100 btn btn btn-outline-primary'> Export excel </button>\n\n                  </DownloadTableExcel>) :null}\n            </div>\n        <CRow className=\"w-100 flex-col\">\n                    <CCol className=\"col-12\">\n                    <div className='table-responsive'>\n                      <table align=\"middle\" className=\"table align-middle table-hover text-center mb-0 border hover responsive\" ref={tableRef}>\n                        <CTableHead color=\"light\">\n                        <CTableRow aria-colspan={5}>\n                            <CTableHeaderCell colSpan={5}>L.D COLLEGE OF ENGINEERING</CTableHeaderCell>\n                          </CTableRow>\n                          <CTableRow aria-colspan={5}>\n                            <CTableHeaderCell colSpan={5}>Subject: {session_data.lecture.subject.subject_name} | DATE: {session_data.day}</CTableHeaderCell>\n                          </CTableRow>\n                          <CTableRow>\n                            {/* <CTableHeaderCell>SR. NO</CTableHeaderCell> */}\n                            <CTableHeaderCell>Enrollment No</CTableHeaderCell>\n                            <CTableHeaderCell>Student Name</CTableHeaderCell>\n                            <CTableHeaderCell>IP Addr</CTableHeaderCell>\n                            <CTableHeaderCell>Batch</CTableHeaderCell>\n                            <CTableHeaderCell>Status</CTableHeaderCell>\n                          </CTableRow>\n                        </CTableHead>\n                        <CTableBody>\n                          {attendances &&\n                            attendances.map((item, index) => (\n                              <CTableRow v-for=\"alert alert-primary item in tableItems\" key={index}>\n                                {/* <CTableDataCell>\n                                        <div>{item.student.sr_no}</div>   \n                                </CTableDataCell> */}\n                                <CTableDataCell>\n                                  <div>{item.student.enrollment ? item.student.enrollment: \"-\"}</div>\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div>{item.student.profile.name ? item.student.profile.name: '-'}</div>\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                  <div>{item.marking_ip ? item.marking_ip : '-'}</div>\n                                </CTableDataCell>\n                                <CTableDataCell>\n                                <div>\n                                  {item.batches\n                                    ? item.batches.map((batch, index) => (\n                                        <span key={index}>{batch.batch_name.toUpperCase()}</span>\n                                      ))\n                                    : '-'}\n                                </div>\n\n                                </CTableDataCell>\n                                {item.is_present ? (<CTableDataCell>\n                                  <div className=\"text-success\">\n                                    <svg\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                      width=\"16\"\n                                      height=\"16\"\n                                      fill=\"currentColor\"\n                                      className=\"mx-auto bi bi-patch-check\"\n                                      viewBox=\"0 0 16 16\"\n                                    >\n                                      <path\n                                        fillRule=\"evenodd\"\n                                        d=\"M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0\"\n                                      />\n                                      <path d=\"m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911z\" />\n                                    </svg>\n                                    <p style={{visibility:'hidden'}}>P</p>\n                                  </div>\n                                </CTableDataCell>): (<CTableDataCell>\n                                  <div className=\"text-danger\">\n                                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-octagon\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M4.54.146A.5.5 0 0 1 4.893 0h6.214a.5.5 0 0 1 .353.146l4.394 4.394a.5.5 0 0 1 .146.353v6.214a.5.5 0 0 1-.146.353l-4.394 4.394a.5.5 0 0 1-.353.146H4.893a.5.5 0 0 1-.353-.146L.146 11.46A.5.5 0 0 1 0 11.107V4.893a.5.5 0 0 1 .146-.353zM5.1 1 1 5.1v5.8L5.1 15h5.8l4.1-4.1V5.1L10.9 1z\"/>\n                                    <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708\"/>\n                                  </svg>\n                                    <p style={{visibility:'hidden'}}>F</p>\n                                  </div>\n                                </CTableDataCell>)}\n                              </CTableRow>\n                            ))}\n                        </CTableBody>\n                      </table>\n                      </div>\n                    </CCol>\n                  </CRow>\n        </COffcanvasBody>\n      </COffcanvas>\n   </>\n  )\n}\n\nexport default Session_history","import React, { useEffect, useState } from 'react'\nimport { \n    CRow,\n    CCol,\n    CCardHeader,\n    CCard,\n    CCardBody,\n    CTable,\n    CTableHead,\n    CTableRow,\n    CTableHeaderCell,\n    CTableBody,\n    CTableDataCell,\n    CFormInput\n} from '@coreui/react'\nimport useAPI from 'src/global_function/useApi'\nimport axios from 'axios'\nimport '../../css/tailwind.css'\nimport Subject from '../subject/Subject'\nimport Session_history from './Session_history'\n\nconst LectureHistory = () => {\nconst [StoredTokens, CallAPI] = useAPI()\nconst [subjects,SetSubjects] = useState(null)\nconst [lecture,setLecture] = useState(null)\nconst [FilterLecture,setFilterLecture] = useState(null)\nconst [attendances, setAttendances] = useState(null)\nconst [visible , setVisible] = useState(false)\nconst [session_data, setSessionData] = useState(null)\nconst load_subjects_of_teacher = async () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/get_subjects_of_teacher',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      SetSubjects(response.data.data)  \n       \n    }\n    else{\n      alert(response_obj.errorMessage.message)\n    }\n  }\n  const load_lectures = async (subject_slug) => {\n    const headers = {\n        'Content-Type': 'application/json',\n        'ngrok-skip-browser-warning': true,\n      }\n      const axiosInstance = axios.create()\n      const response_obj = await CallAPI(\n        StoredTokens,\n        axiosInstance,\n        '/manage/get_lecture_sessions_for_teacher',\n        'get',\n        headers,\n        null,\n        {subject_slug:subject_slug},\n      )\n      if (response_obj.error === false) {\n        const response = response_obj.response        \n        setLecture(response.data.data)     \n      }\n      else{\n        alert(response_obj.errorMessage.message)\n      }\n  }\n\n  const search_lecture = (day)=>{\n    console.log(day);\n    const filteredData = lecture.filter(item => item.session.some(session => session.day === day));\n    \n    if(filteredData.length > 0) {\n      setFilterLecture(filteredData)\n    }\n    else{\n      setFilterLecture(null)\n    }\n    \n  }\n\n\n  const get_session_data = async(session_id)=>{\n    const headers = {\n      'Content-Type':\"application/json\",\n      'ngrok-skip-browser-warning':true\n    }\n\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      `/manage/session/get_session_data_for_export/${session_id}`,\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      setAttendances(response.data.data.marked_attendances)\n      setSessionData(response.data.data)\n      setVisible(true)\n    }\n    else{\n      alert(response_obj.errorMessage.message)\n    }\n  }\n  useEffect(() => {\n    load_subjects_of_teacher()\n  },[])\n  return (\n    <>\n      {\n        subjects ? (<>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Select A Subject</label>\n              <select className=\"form-select\" aria-label=\"Default select example\" required  onChange={(e) => {load_lectures(e.target.value)}}>\n                <option value=\"\">....</option>\n                {subjects && subjects.map((item,index) => (\n                    <option key={index} value={item.slug}>{item.subject_name}</option>\n                ))}               \n              </select>\n        </div>\n        \n        {\n          FilterLecture ? (\n<CRow>\n            <CCol xs>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <div className='d-flex flex-wrap justify-between'>\n                    <div>\n                      <strong>Subject Attendance History</strong>\n                    </div>\n                    <div>\n                      <div className='d-flex'>\n                        <div>\n                          <CFormInput type=\"date\" id=\"validationCustom01\"  required  onChange={(e)=>{search_lecture(e.target.value)}}/>\n                        </div>\n                        <div className='mx-2'>  \n                        </div>\n                      </div>\n                    \n                    \n                    </div>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n\n                  <CTable align=\"middle\" className=\"mb-0 border text-center\" hover responsive>\n                    <CTableHead color=\"light\">\n                      <CTableRow>\n                        <CTableHeaderCell>classroom</CTableHeaderCell>\n                        <CTableHeaderCell>Lecture Type</CTableHeaderCell>\n                        <CTableHeaderCell>Day</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      {FilterLecture.map((lecture, index) => (\n                        lecture.session.map((session,index)=>(\n                          <CTableRow v-for=\"item in tableItems\" key={index} onClick={(e) => get_session_data(session.session_id)}>\n                          <CTableDataCell>\n                            <div>{lecture.classroom}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{lecture.type.charAt(0).toUpperCase() + lecture.type.slice(1)}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{session.day}</div>   \n                          </CTableDataCell>\n                        </CTableRow>\n                        ))\n                        \n                      ))}\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>\n          ) : ( lecture ? (<CRow>\n            <CCol xs>\n              <CCard className=\"mb-4\">\n                <CCardHeader>\n                  <div className='d-flex flex-wrap justify-between'>\n                    <div>\n                      <strong>Subject Attendance History</strong>\n                    </div>\n                    <div>\n                      <div className='d-flex'>\n                        <div>\n                          <CFormInput type=\"date\" id=\"validationCustom01\"  required  onChange={(e)=>{search_lecture(e.target.value)}}/>\n                        </div>\n                        <div className='mx-2'>\n                        \n                        </div>\n                      </div>\n                    \n                    \n                    </div>\n                  </div>\n                </CCardHeader>\n                <CCardBody>\n                  <CTable align=\"middle\" className=\"mb-0 border text-center\" hover responsive>\n                    <CTableHead color=\"light\">\n                      <CTableRow>\n                        <CTableHeaderCell>classroom</CTableHeaderCell>\n                        <CTableHeaderCell>Lecture Type</CTableHeaderCell>\n                        <CTableHeaderCell>Day</CTableHeaderCell>\n                      </CTableRow>\n                    </CTableHead>\n                    <CTableBody>\n                      \n                    { lecture.length > 0  ? (\n                      lecture.map((lecture, index) => (\n                        lecture.session.map((session,index)=>(\n                          <CTableRow v-for=\"item in tableItems\" key={index} onClick={(e) => get_session_data(session.session_id)}>\n                          <CTableDataCell>\n                            <div>{lecture.classroom}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{lecture.type.charAt(0).toUpperCase() + lecture.type.slice(1)}</div>   \n                          </CTableDataCell>\n                          <CTableDataCell>\n                            <div>{session.day}</div>   \n                          </CTableDataCell>\n                        </CTableRow>\n                        )) \n                        \n                        \n                      ))\n                    ) \n                    :(\n                      <CTableRow v-for=\"item in tableItems\">\n                        <CTableDataCell colSpan={3}>\n                          <div className='alert alert-primary w-100 my-2'>\n                            <span className=''>No Lecture Sessions Are There for This Subject</span>\n                          </div>\n                        \n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                    }\n                    </CTableBody>\n                  </CTable>\n                </CCardBody>\n              </CCard>\n            </CCol>\n          </CRow>) : (null)\n          )\n        }\n\n        </>) : (null)\n      }\n       {\n        attendances && <Session_history visible={visible} setVisible={setVisible} attendances={attendances} session_data={session_data}></Session_history>\n       } \n       \n       {\n         !lecture && <div role=\"status\" className=\"p-4 border border-gray-200 rounded shadow animate-pulse md:p-6 dark:border-gray-700\">\n         <div className=\"h-2.5 bg-gray-200 rounded-full dark:bg-gray-700 w-32 mb-2.5\"></div>\n         <div className=\"w-48 h-2 mb-10 bg-gray-200 rounded-full dark:bg-gray-700\"></div>\n         <div className=\"flex items-baseline mt-4\">\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-72 dark:bg-gray-300\"></div>\n             <div className=\"w-full h-56 ms-6 bg-gray-200 rounded-t-lg dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-72 ms-6 dark:bg-gray-300\"></div>\n             <div className=\"w-full h-64 ms-6 bg-gray-200 rounded-t-lg dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-80 ms-6 dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-72 ms-6 dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-80 ms-6 dark:bg-gray-300\"></div>\n             <div className=\"w-full bg-gray-200 rounded-t-lg h-80 ms-6 dark:bg-gray-300\"></div>\n         </div>\n     </div>\n       }\n        \n    </>\n  )\n}\n\nexport default LectureHistory","import React from 'react'\nimport LectureHistory from './views/teacher/LectureHistory'\n\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\n\n\n// Base\nconst Timetable = React.lazy(() => import('./views/timetable/Timetable'))\nconst Subject = React.lazy(() => import('./views/subject/Subject'))\nconst Teacherview = React.lazy(() => import('./views/teacher/Teacherview'));\nconst Addstudent = React.lazy(() => import('./views/student_controller/Addstudent'));\nconst StudentDashboard =  React.lazy(() => import('./views/student_controller/StudentDashboard'))\nconst Sessionmanage =  React.lazy(() => import('./views/teacher/Sessionmanage'))\nconst Logout = React.lazy(()=> import('./views/pages/logout/Logout'))\nconst FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))\nconst InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))\nconst Validation = React.lazy(() => import('./views/forms/validation/Validation'))\nconst Teacher = React.lazy(()=> import('./views/teacher/Teacher'))\nconst Breadcrumbnav = React.lazy(()=> import('./views/breadcrum/Breadcrumbnav'))\nconst TeacherSidebar = React.lazy(()=> import('./views/teacher/TeacherSidebar'))\n// Buttons\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  { path: '/forms', name: 'Forms', element: FormControl, exact: true },\n  { path: '/forms/form-control', name: 'Form Control', element: FormControl },\n  \n  \n  \n  { path: '/forms/input-group', name: 'Input Group', element: InputGroup },\n  \n  \n  { path: '/forms/validation', name: 'Validation', element: Validation },\n  { path: '/manage-teachers',name:'Teacher',element:Teacher},\n  { path: '/breadcrumb',name:'Breadcrumbnav',element:Breadcrumbnav},\n  { path: '/TeacherSidebar',name:'TeacherSidebar',element:TeacherSidebar},\n  { path: '/logout',name:'Logout',element:Logout},\n  { path: '/timetable',name:'Timetable',element:Timetable},\n  { path: '/subject',name:'Subject',element:Subject},\n  { path: '/addstudent',name:'AddStudent',element:Addstudent},\n  { path: '/teacher/dashboard',name:'Teacherview',element:Teacherview},\n  { path: '/studentdashboard',name:'StudentDashboard',element:StudentDashboard}  ,\n  { path: '/teacher/session',name:'Sessionmanage',element:Sessionmanage}  ,\n  { path: '/teacher/lectures/history',name:'LectureHistory',element:LectureHistory}  \n]\n\n export default routes;","import React, { Suspense, useEffect } from 'react'\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\nimport axios from 'axios'\nimport {base_url} from 'src/base_url'\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\n\nimport expireToken from 'src/global_function/unauthorizedToken'\nimport { APIMiddleware } from 'src/global_function/GlobalFunctions'\n\n// routes config\nimport routes from '../routes'\nimport { cilFace } from '@coreui/icons'\n\nconst AppContent = () => {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken, refreshToken, batches, accessTokenActive, profileDetails } = state\n  const navigate = useNavigate();\n\n\n  const loadBatches = async () => {\n    const header = {\n      \"Content-Type\": \"application/json\",\n      'ngrok-skip-browser-warning': true\n    }\n    const axiosInstance = axios.create()\n    let endpoint = `/manage/get_batches`; let method = 'get'; let headers = header;\n    let response_obj = await APIMiddleware(axiosInstance, endpoint, method, headers)\n    if (response_obj.error == false) {\n      let response = response_obj.response\n      ctxDispatch({ type: 'GET_BATCHES', payload: response.data.data });\n      response.data.data.map((item) => {\n        if (item.active) {\n          ctxDispatch({ type: 'CURRENT_BATCH_SLUG', payload: item });\n        }\n      })\n    } else {\n      \n    }\n  }\n\n  useEffect(() => {\n    if (accessToken) {\n      if (profileDetails.obj.profile.role === \"admin\") {\n        // loadBatches()\n      }\n    }\n  }, []);\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          \n          {\n            (() => {\n              if (profileDetails.obj.profile.role === \"admin\") {\n                return <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />;\n              } else if (profileDetails.obj.profile.role === \"teacher\") {\n                return <Route path=\"/\" element={<Navigate to=\"teacher/dashboard\" replace />} />;\n              }\n              else if (profileDetails.obj.profile.role === \"student\") {\n                return <Route path=\"/\" element={<Navigate to=\"studentdashboard\" replace />} />;\n              }\n            })()\n          }\n\n\n\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport {\n  CAvatar,\n  CBadge,\n  CDropdown,\n  CDropdownDivider,\n  CDropdownHeader,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n} from '@coreui/react'\nimport {\n  cilBell,\n  cilCreditCard,\n  cilCommentSquare,\n  cilEnvelopeOpen,\n  cilFile,\n  cilLockLocked,\n  cilSettings,\n  cilTask,\n  cilUser,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport { useEffect, useContext , useState} from 'react'\nimport { Store } from 'src/views/forms/validation/store'\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\nconst AppHeaderDropdown = () => {\n  const navigate = useNavigate()  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { profileDetails } = state\n  const [adminEmail, setadminEmail] = useState(\"\");\n  \n  useEffect(() => {\n    if(profileDetails){\n      setadminEmail(profileDetails.obj.profile.email)\n    }\n  }, [profileDetails]);\n  const logoutAdmin = () => {\n        \n        localStorage.clear()\n        navigate(\"/login\")\n  }\n  return (\n    <CDropdown variant=\"nav-item\">\n      <CDropdownToggle placement=\"bottom-end\" className=\"py-0\" caret={false}>\n      <div className=\"text-medium-emphasis\">{adminEmail}</div>\n      </CDropdownToggle>              \n    </CDropdown>\n  )\n}\n\nexport default AppHeaderDropdown\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useEffect, useContext , useState} from 'react'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMenu } from '@coreui/icons'\nimport { Store } from 'src/views/forms/validation/store'\n\nimport { AppHeaderDropdown } from './header/index'\nimport { logo } from 'src/assets/brand/logo'\n\nconst AppHeader = () => {\n  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { profileDetails } = state\n  const [adminEmail, setadminEmail] = useState(\"\");\n  \n  useEffect(() => {\n    if(profileDetails){\n      setadminEmail(profileDetails.email)\n    }\n  }, [profileDetails]);\n\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-2\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>      \n      \n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useContext } from 'react'\nimport { Store } from 'src/views/forms/validation/store'\nimport { CSidebar, CSidebarBrand, CSidebarNav } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\nimport smartrollicon from '../smartroll_logo.png'\n\n// sidebar nav config\nimport navigation from '../_nav'\n\nconst AppSidebar = () => {\n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken, refreshToken, profileDetails } = state\n\n\n\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      palcement=\"end\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <img className=\"p-3\" src={smartrollicon}></img>\n      <CSidebarNav>\n        <SimpleBar>\n          {profileDetails.obj.profile.role === \"admin\" && (\n            <AppSidebarNav\n              items={navigation.admin_role}\n            />\n          )}\n          {profileDetails.obj.profile.role === \"teacher\" && (\n            <AppSidebarNav\n              items={navigation.teacher_role}\n            />\n          )}\n          {profileDetails.obj.profile.role === \"student\" && (\n            <AppSidebarNav\n              items={navigation.student_role}\n            />\n          )}\n        </SimpleBar>\n      </CSidebarNav>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React, { useEffect, useState } from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\nimport { useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { Store } from 'src/views/forms/validation/store';\nimport axios from 'axios';\nimport {base_url} from 'src/base_url';\nimport { jwtDecode } from \"jwt-decode\";\nimport expireToken from 'src/global_function/unauthorizedToken';\nimport LoadingBar from 'react-top-loading-bar';\n\nconst DefaultLayout = () => {  \n  const { state, dispatch: ctxDispatch } = useContext(Store);\n  const { accessToken , refreshToken} = state\n  const [serverAvaibility,setServerAvaibility] = useState(false)\n  const [_404,set404] = useState(true)\n  const [accessTokenValid,setAccessTokenValid] = useState(false)\n  const [progress,setProgress] = useState(0);  \n  const navigate = useNavigate();  \n  if (typeof window !== 'undefined') {\n    window.setProgress = setProgress;\n  }\n\n  const expireToken = async (refreshToken)=>{\n    const header = {\n        'ngrok-skip-browser-warning':true\n      }\n    axios.post(`${base_url}/auth/api/token/refresh/`,{\n        \"refresh\":refreshToken\n    },{headers:header})\n    .then((response)=>{        \n        localStorage.setItem('accessToken',response.data.access)\n        localStorage.setItem('refreshToken',response.data.refresh)        \n        const decoded = jwtDecode(response.data.access); \n        ctxDispatch({ type: 'SET_PROFILE', payload: decoded});\n        setAccessTokenValid(true)\n    })\n    .catch((error)=>{\n        alert(error.response.data.detail)\n        localStorage.removeItem('accessToken')\n        localStorage.removeItem('refreshToken')\n        navigate('/auth/login')\n    })\n}\n\nconst checkAccessTokenAuthenticity = async (accessToken) => {    \n  const headers = {\n    \"Content-Type\":\"application/json\",      \n    'ngrok-skip-browser-warning':true,\n    'Authorization': `Bearer ${accessToken}`\n  }\n\n  axios.get(`${base_url}/check_token_authenticity/`,{headers:headers})\n  .then((response)=>{\n    if(response.data.data === true){\n      setAccessTokenValid(true)\n    }\n    else{\n      if(refreshToken){\n        expireToken(refreshToken)\n      }else{\n        navigate('/login')\n      }\n    }\n  })\n  .catch((error)=>{        \n    localStorage.removeItem('accessToken')\n    localStorage.removeItem('refreshToken')\n    navigate('/login')\n  })    \n}\nconst checkServerAvaibility = async ()=> {\n  \n  const headers = {\n       \"Content-Type\":\"application/json\",      \n       'ngrok-skip-browser-warning':true,\n       \n  }\n  axios.get(`${base_url}/check_server_avaibility/`,{headers:headers})\n  .then((response)=>{\n    setServerAvaibility(true)\n    if(accessToken){\n      const decoded = jwtDecode(accessToken); \n      ctxDispatch({ type: 'SET_PROFILE', payload: decoded});\n      checkAccessTokenAuthenticity(accessToken)\n    }else{\n      navigate('/login')\n    }\n  })\n  .catch((error)=>{    \n      navigate(\"/404\")\n  })    \n}\n\n  const decodeToken= () => {\n    const decoded = jwtDecode(accessToken);              \n    // if (typeof window !== 'undefined') {      \n        window.user_profile = decoded.profile;\n    // }\n    ctxDispatch({ type: 'SET_PROFILE', payload: decoded});    \n  }\n  \n  useEffect(() => {    \n    checkServerAvaibility()   \n},[])  \n  if(accessToken && accessTokenValid){\n    return (    \n      <div>\n  <LoadingBar color={'#1f6feb'} progress={progress}\n      onLoaderFinished={() => setProgress(0)} />\n        <AppSidebar />\n        <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n          <AppHeader />\n          <div className=\"body flex-grow-1 px-3\">\n            <AppContent />\n          </div>\n      \n        </div>\n      </div>    \n  )\n  }else{\n    return null\n  }\n}\n\nexport default DefaultLayout\n","import React from 'react'\nimport { useState , useContext,useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { Store } from 'src/views/forms/validation/store'\nimport axios from 'axios'\nimport {base_url} from 'src/base_url'\nimport expireToken from 'src/global_function/unauthorizedToken'\nimport { APIMiddleware } from 'src/global_function/GlobalFunctions'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CTableDataCell,\n  CFormSelect\n} from '@coreui/react'\nimport { useNavigate } from 'react-router-dom'\nimport { showAlert } from 'src/global_function/GlobalFunctions'\nimport useAPI from 'src/global_function/useApi'\n\nconst Subject = () => {\n\n    const [subjects, set_Subjects] = useState(null)\n    const [semester,set_semester] = useState(null)\n    //costom hook to call the API\n    const [term,set_term] = useState(null)\n    \n    const [StoredTokens,CallAPI] = useAPI()\n    const [current_semester, set_current_semester] = useState(null)\n\n    const load_subject = async()=>{\n        const header = {\n            \"Content-Type\":\"application/json\",      \n            'ngrok-skip-browser-warning':true\n          }\n          const axiosInstance = axios.create()\n          let endpoint = `/manage/get_subject`;let method='get';let headers = header;\n          let response_obj = await CallAPI(StoredTokens,axiosInstance,endpoint,method,headers,null,null)\n          if(response_obj.error == false){\n          let response = response_obj.response          \n          set_Subjects(response.data.data)\n        }else{            \n        }   \n    }\n    const load_semester = async(current_term)=>{\n      \n      const headers = {\n        \"Content-Type\":\"application/json\",\n        'ngrok-skip-browser-warning':true\n      }\n      const axiosInstance = axios.create()\n      const response_obje = await CallAPI(StoredTokens,axios,\"/manage/get_semesters\",\"get\",headers,null,{\"term_slug\":current_term})\n      if(response_obje.error == false){\n        const response = response_obje.response        \n        set_semester(response.data.data)\n      }\n      else{        \n      }\n    }\n\n\n\n    const load_term = async()=>{\n      const header = {\n        \"Content-Type\":\"application/json\",\n        'ngrok-skip-browser-warning':true\n      }\n      const axiosInstance = axios.create\n      let endpoint = `/manage/get_terms`;let method='get';let headers = header;\n      let response_obj = await CallAPI(StoredTokens,axiosInstance,endpoint,method,headers)    \n      if(response_obj.error == false){\n      let response = response_obj.response\n          set_term(response.data.data)\n    }else{  \n      alert(response_obj.errorMessage.message)\n    }  \n    }\n\n    const [validated, setValidated] = useState(false)\n    const [subject_name, set_subject_name] = useState(\"\")\n    const [subject_code, set_subject_code] = useState(\"\")\n    const [subject_credit, set_subject_credit] = useState(\"\")\n    const [currentSelectSemester,setcurrentSelectSemester] = useState(\"\")\n    const { state, dispatch: ctxDispatch } = useContext(Store);\n    const { accessToken,refreshToken } = state\n    const navigate = useNavigate()\n    const add_batch = async (body) => {\n      \n      const header = {\n        \"Content-Type\":\"application/json\",      \n        'ngrok-skip-browser-warning':true\n      }\n      const axiosInstance = axios.create()\n      let endpoint = `/manage/add_subject/`;let method='post';let headers = header;\n      let response_obj = await APIMiddleware(axiosInstance,endpoint,method,headers,body,null)\n      if(response_obj.error == false){\n          let response = response_obj.response\n          set_Subjects(prevArray => [...prevArray, response.data.data])\n          showAlert(\"success\",\"Subject Added successfully...!\")\n        }else{            \n          alert(response_obj.errorMessage.message)\n        }    \n    }\n    \n    const handleSubmit = (event) => {\n      \n      const form = event.currentTarget\n      if (form.checkValidity() === false) {\n        event.preventDefault()\n        event.stopPropagation()\n        alert(\"Please Enter Valid Subject Information\")\n        return\n      }\n      setValidated(true)\n      const body = {\n        \"code\": subject_code,\n        \"subject_name\": subject_name,\n        \"credit\": subject_credit,\n        \"semester_slug\":current_semester,\n      }\n      event.preventDefault()\n      add_batch(body)\n      \n    }\n\n    useEffect(() => {\n        load_term()\n        load_subject()\n       \n    }, [])\n    \n  return (\n    <>\n    <>\n    <CRow>\n    <CCol>\n        {term && (\n            <>\n              <CCard className={`mb-3`}>\n                <CCardHeader>select term</CCardHeader>\n                <CCardBody>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    onChange={(e) => {\n                      console.log(e.target.value)\n                      load_semester(e.target.value)\n                    }}\n                  >\n                    <option value=\"\">Select Term</option>\n                    {term.map((item, index) => (\n                      <option key={index} value={item.slug}>\n                        Term : {item.start_year} - {item.end_year}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </CCardBody>\n              </CCard>\n            </>\n          )}\n          {semester && (\n            <>\n              <CCard className={`mb-3`}>\n                <CCardHeader>Semester</CCardHeader>\n                <CCardBody>\n                  <CFormSelect\n                    aria-label=\"Default select example\"\n                    onChange={(e) => {\n                     set_current_semester(e.target.value)\n                    }}\n                  >\n                    <option value=\"\">Select Semester</option>\n                    {semester.map((item, index) => (\n                      <option key={index} value={item.slug}>\n                        Semester - {item.no}\n                      </option>\n                    ))}\n                  </CFormSelect>\n                </CCardBody>\n              </CCard>\n            </>\n          )}\n        </CCol>\n      </CRow>\n      {\n        current_semester ? (\n          <CRow>\n            <CCol xs={12}>\n          <CCard className=\"mb-3\">\n            <CCardHeader>\n              <strong>Subjects</strong>\n            </CCardHeader>\n            <CCardBody>\n                <CForm\n            className=\"row g-3 needs-validation\"\n            noValidate\n            validated={validated}\n            onSubmit={handleSubmit}\n          >\n            <CCol md={12}>\n              <CFormLabel htmlFor=\"validationCustom01\">Subject Name</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom01\" onChange={e => set_subject_name(e.target.value)} required />\n              <CFormFeedback valid>Looks good!</CFormFeedback>\n            </CCol>\n            \n            \n            <CCol md={6}>\n              <CFormLabel htmlFor=\"validationCustom01\">Subject Code</CFormLabel>\n              <CFormInput type=\"number\" id=\"validationCustom01\" onChange={e => set_subject_code(e.target.value)} required />\n              <CFormFeedback valid>Looks good!</CFormFeedback>\n            </CCol>\n            <CCol md={6}>\n              <CFormLabel htmlFor=\"validationCustom01\">Subject Credit</CFormLabel>\n              <CFormInput type=\"number\" id=\"validationCustom01\" onChange={e => set_subject_credit(e.target.value)} required />\n              <CFormFeedback valid>Looks good!</CFormFeedback>\n            </CCol>\n            <CCol xs={12}>\n              <button className='btn btn-outline-dark form-control' type=\"submit\">\n                Submit form\n              </button>\n            </CCol>\n                </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n        ) : (null)\n      }\n      \n      <CRow>\n        {\n          subjects ? (\n            <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>Subject History</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell>Subject Name</CTableHeaderCell>\n                    <CTableHeaderCell>Subject Code</CTableHeaderCell>\n                    <CTableHeaderCell>Subject Credit</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>                \n                <CTableBody>\n                  {subjects.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell>\n                        <div>{item.subject_name.charAt(0).toUpperCase() + item.subject_name.slice(1)}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.code}</div>\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.credit}</div>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n          ) : (null)\n        }\n        \n      </CRow>\n    </>\n    </>\n  )\n}\n\nexport default Subject"],"names":["admin_role","component","CNavTitle","name","CNavItem","to","icon","_jsx","CIcon","cilLibraryBuilding","customClassName","cilNotes","cilSchool","cilPeople","cilCalendar","cilAccountLogout","teacher_role","cilClock","student_role","base_url","websocket","AppSidebarNav","_ref","items","location","useLocation","navLink","badge","_jsxs","_Fragment","children","CBadge","color","className","text","navItem","item","index","rest","Component","_createElement","NavLink","key","navGroup","_item$items","idx","String","toggler","visible","pathname","startsWith","map","React","APIMiddleware","async","reqInstance","endpoint","method","headers","body","arguments","length","undefined","params","access","localStorage","getItem","refresh","response_obj","concat","window","setProgress","get","error","response","status","result","expireToken","setItem","post","axios","refreshToken","then","data","catch","showAlert","title","Swal","button","makeRequest","Error","useAPI","navigate","useNavigate","state","dispatch","ctxDispatch","useContext","Store","accessToken","profileDetails","objectCount","StoredTokens","CallAPI","tokens","errorMessage","token_data","type","payload","action","removeItem","setVisible","attendances","session_data","tableRef","useRef","isRefReady","setIsRefReady","useState","useEffect","current","COffcanvas","placement","onHide","CAlert","onClick","xmlns","width","height","fill","viewBox","d","COffcanvasBody","DownloadTableExcel","filename","lecture","subject","subject_name","Date","day","toLocaleString","sheet","currentTableRef","CRow","CCol","align","ref","CTableHead","CTableRow","CTableHeaderCell","colSpan","CTableBody","CTableDataCell","student","enrollment","profile","marking_ip","batches","batch","batch_name","toUpperCase","is_present","fillRule","style","visibility","LectureHistory","subjects","SetSubjects","setLecture","FilterLecture","setFilterLecture","setAttendances","setSessionData","search_lecture","console","log","filteredData","filter","session","some","get_session_data","axiosInstance","create","session_id","marked_attendances","alert","message","load_subjects_of_teacher","required","onChange","e","subject_slug","load_lectures","target","value","slug","xs","CCard","CCardHeader","CFormInput","id","CCardBody","CTable","hover","responsive","classroom","charAt","slice","Session_history","role","Dashboard","Timetable","Subject","Teacherview","Addstudent","StudentDashboard","Sessionmanage","Logout","FormControl","path","exact","element","AppContent","accessTokenActive","obj","CContainer","lg","Suspense","fallback","CSpinner","Routes","routes","route","Route","Navigate","replace","AppHeaderDropdown","adminEmail","setadminEmail","email","CDropdown","variant","CDropdownToggle","caret","AppHeader","useDispatch","sidebarShow","useSelector","CHeader","position","fluid","CHeaderToggler","cilMenu","size","CHeaderNav","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","palcement","onVisibleChange","src","smartrollicon","CSidebarNav","SimpleBar","navigation","DefaultLayout","serverAvaibility","setServerAvaibility","_404","set404","accessTokenValid","setAccessTokenValid","progress","checkAccessTokenAuthenticity","decoded","jwtDecode","detail","checkServerAvaibility","LoadingBar","onLoaderFinished","set_Subjects","semester","set_semester","term","set_term","current_semester","set_current_semester","validated","setValidated","set_subject_name","subject_code","set_subject_code","subject_credit","set_subject_credit","currentSelectSemester","setcurrentSelectSemester","load_term","load_subject","CFormSelect","response_obje","current_term","load_semester","start_year","end_year","no","CForm","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","prevArray","add_batch","md","CFormLabel","htmlFor","CFormFeedback","valid","code","credit"],"sourceRoot":""}