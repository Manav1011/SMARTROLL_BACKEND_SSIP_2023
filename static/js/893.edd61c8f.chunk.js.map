{"version":3,"file":"static/js/893.edd61c8f.chunk.js","mappings":"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","sources":["views/teacher/results/UploadResult.js"],"sourcesContent":["import React, { useEffect, useState,useRef } from 'react'\nimport useAPI from 'src/global_function/useApi'\nimport axios from 'axios'\n\nfunction UploadResult() {\n  const [StoredTokens, CallAPI] = useAPI()\n  const [subjects, SetSubjects] = useState([])\n  const [fileInput,setFileInput] = useState(null)\n  const [selectedSubject, setSelectedSubject] = useState('')\n  const [remarks, setRemarks] = useState('')\n  const [marksOutOf,setMarksOutOf] = useState(null)  \n  \n\n  const headers = {\n    'Content-Type': 'application/json',\n    'ngrok-skip-browser-warning': true,\n  }\n  const axiosInstance = axios.create()\n\n  const get_subjects = async () => {\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/get_subjects_of_teacher',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      SetSubjects(response.data.data)\n    } else {\n      alert(response_obj.errorMessage.message)\n    }\n  }\n  useEffect(() => {\n    get_subjects()\n  }, [])\n\n  const submit_results = async () => {\n    if(!fileInput){\n        alert(\"Please select a valid file!!\")\n        return;\n    }\n    if(selectedSubject == ''){\n        alert(\"Please select a subject!!\")\n        return;\n    }\n    if(remarks == '') {\n        alert(\"Please add some remarks!!\")\n        return;\n    }\n    if(marksOutOf == null || marksOutOf == '') {\n        alert(\"Please add total marks!!\")\n        return;\n    }\n        const headers = {\n            'Content-Type': 'multipart/form-data'\n        }\n        const formData = new FormData();\n        formData.append('subject_slug', selectedSubject);        \n        formData.append('remarks', remarks);        \n        formData.append('total_marks', marksOutOf);\n        formData.append('result_csv', fileInput); \n        CallAPI(\n            StoredTokens,\n            axiosInstance,\n            '/manage/notifications/upload_results/',\n            'post',\n            headers,\n            formData,\n            null,\n          ).then(res => {\n            if (res.error === false) {\n                alert(res.response.data.message)\n            }\n          })    \n  }  \n  \n\n  return (\n    <div>\n      {subjects.length > 0 && (\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Select A Subject</label>\n          <select\n            className=\"form-select\"\n            aria-label=\"Default select example\"\n            required\n            onChange={(e) => {\n              setSelectedSubject(e.target.value)\n            }}\n          >\n            <option value=\"\">....</option>\n            {subjects &&\n              subjects.map((item, index) => (\n                <option key={index} value={item.slug}>\n                  {item.subject_name}\n                </option>\n              ))}\n          </select>\n        </div>\n      )}\n      <div className=\"mb-3\">\n          <label className=\"form-label\">Total marks</label>\n          <input type='number' min={0} className='form-control' onChange={(e) => {setMarksOutOf(e.target.value)}} />\n        </div>\n      <div className=\"mb-3\">\n          <label className=\"form-label\">Remarks</label>\n          <textarea className='form-control' onChange={(e) => {setRemarks(e.target.value)}}></textarea>\n        </div>\n      <div className=\"flex-1 items-center w-full mx-auto space-y-4 sm:flex sm:space-y-0\">\n        <div className=\"relative w-full\">\n          <div className=\"items-center justify-center mx-auto z-20 w-full\">\n            <label\n              className=\"flex justify-center w-full h-32 px-4 transition bg-white border-2 border-gray-300 border-dashed rounded-none appearance-none cursor-pointer hover:border-gray-400 focus:outline-none\"\n              id=\"drop\"\n            >\n              <span className=\"flex items-center justify-center flex-col\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"w-6 h-6 text-gray-600\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  stroke=\"currentColor\"\n                  strokeWidth={2}\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                  />\n                </svg>\n                <span className=\"font-medium text-gray-600\">\n                  Drop files to Attach, or\n                  <span className=\"text-blue-600 underline ml-[4px]\">browse</span>\n                </span>\n                <span className=\"font-medium text-gray-600\">{fileInput ? fileInput.name : 'No File Selected'}</span>\n              </span>\n              <input\n                type=\"file\"                \n                className=\"absolute opacity-0 h-full w-full  cursor-pointer\"\n                accept=\".csv\"\n                id=\"input\"\n                onChange={(e) => {setFileInput(e.target.files[0])}}\n              />\n            </label>\n          </div>\n        </div>\n      </div>\n            <button  className='w-full btn btn-success rounded-none' onClick={() => {submit_results()}}>Submit</button>\n    </div>\n  )\n}\n\nexport default UploadResult\n"],"names":["StoredTokens","CallAPI","useAPI","subjects","SetSubjects","useState","fileInput","setFileInput","selectedSubject","setSelectedSubject","remarks","setRemarks","marksOutOf","setMarksOutOf","headers","axiosInstance","axios","create","useEffect","async","response_obj","error","response","data","alert","errorMessage","message","get_subjects","_jsxs","children","length","className","_jsx","required","onChange","e","target","value","map","item","index","slug","subject_name","type","min","id","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","name","accept","files","onClick","formData","FormData","append","then","res","submit_results"],"sourceRoot":""}