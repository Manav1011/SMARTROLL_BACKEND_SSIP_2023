{"version":3,"file":"static/js/597.670ffc1a.chunk.js","mappings":"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","sources":["views/student_controller/StudentDashboard.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { useForm } from 'react-hook-form'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CToast,\n  CToastHeader,\n  CToastBody,\n  CAlert,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nimport useAPI from 'src/global_function/useApi'\nimport moment from 'moment'\n\nconst StudentDashboard = () => {\n  const [StoredTokens, CallAPI] = useAPI()\n  const [TimeTables, setTimeTables] = useState(null)\n  const [permission_state, set_permission_state] = useState(false)\n  const [attendSurveyDropdown, setAttendSurveyDropdown] = useState(true)\n  const [markedSurveys, setMarkedSurveys] = useState([])\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm()\n\n  const onSurveySubmit = async (data) => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/session/submit_survey/',\n      'post',\n      headers,\n      data,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n    } else {\n      setMarkedSurveys((markedSurveys) => [...markedSurveys, data.survey_slug])\n      alert(response_obj.errorMessage.message)\n    }\n  }\n\n  const load_teacher_timetable = async () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/get_timetable_for_student',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      setTimeTables(response.data.data)\n    }\n  }\n\n  const get_location_permission = () => {\n    // if(!permission_state){\n    navigator.permissions.query({ name: 'geolocation' }).then((result) => {\n      if (result.state === 'granted') {\n        set_permission_state(true)\n      } else if (result.state === 'prompt') {\n        navigator.geolocation.getCurrentPosition((position) => {\n          set_permission_state(true)\n        })\n      } else if (result.state === 'denied') {\n        navigator.geolocation.getCurrentPosition((position) => {\n          set_permission_state(true)\n        })\n      }\n      result.addEventListener('change', () => {\n        if (result.state === 'granted') {\n          set_permission_state(true)\n        } else if (result.state === 'prompt') {\n          set_permission_state(false)\n        } else if (result.state === 'denied') {\n          set_permission_state(false)\n        }\n      })\n    })\n    // }\n  }\n  const mark_attendance = async (btn, lecture_slug) => {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by this browser.')\n      return\n    }\n    try {\n      navigator.geolocation.getCurrentPosition(\n        async (positions) => {\n          const latitude = positions.coords.latitude\n          const longitude = positions.coords.longitude\n          const headers = {\n            'Content-Type': 'application/json',\n            'ngrok-skip-browser-warning': true,\n          }\n          const axiosInstance = axios.create()\n          const response_obj = await CallAPI(\n            StoredTokens,\n            axiosInstance,\n            '/manage/session/mark_attendance_for_student/',\n            'post',\n            headers,\n            { lecture_slug: lecture_slug, latitude: latitude, longitude: longitude },\n            null,\n          )\n          if (response_obj.error === false) {\n            const response = response_obj.response\n            if (response.data.data === true) {\n              btn.disabled = true\n              btn.classList.add('btn-outline-secondary')\n              alert('your Attendance Marked successfully')\n            }\n          } else {\n            if (response_obj.errorMessage.code == 100) {\n              btn.disabled = true\n              btn.classList.add('btn-outline-secondary')\n            }\n            alert(response_obj.errorMessage.message)\n          }\n        },\n        (error) => {\n          alert(error.message)\n          return\n        },\n        { enableHighAccuracy: true, maximumAge: 0 },\n      )\n    } catch (error) {\n      alert('Location services are not available, Please enable it from you browser')\n      return\n    }\n  }\n\n  useEffect(() => {\n    load_teacher_timetable()\n  }, [])\n  useEffect(() => {\n    get_location_permission()\n  }, [permission_state])\n\n  return (\n    <>\n      {permission_state ? (\n        <CRow className=\"mb-3\">\n          <CCol>\n            {TimeTables &&\n              TimeTables.map((branch, index) => {\n                return branch.timetables.map((timetable, index) => {\n                  return (\n                    <div key={index}>\n                      <CAlert\n                        className=\"m-0 rounded-0 w-100 p-2 d-flex justify-content-between align-items-center mb-2\"\n                        color=\"primary\"\n                        visible={true}\n                      >\n                        {branch.branch_name}\n                      </CAlert>\n                      {timetable.schedule ? (\n                        timetable.schedule.lectures.length > 0 ? (\n                          timetable.schedule.lectures.map((lecture, index) => {\n                            return (\n                              <div key={index}>\n                                <CRow className=\"flex-column\" style={{ padding: '0' }}>\n                                  <CCol\n                                    className=\"d-flex align-items-center flex-column\"\n                                    key={index}\n                                  >\n                                    <div className=\"w-100 rounded-0 border-0\">\n                                      <div className=\"\" style={{ paddingBottom: '0px' }}>\n                                        <div className=\"justify-content-center w-100\">\n                                          <CToast\n                                            key={index}\n                                            autohide={false}\n                                            visible={true}\n                                            className={`mb-3 mt-3 w-100 ${\n                                              lecture.is_proxy ? 'border-red-700' : ''\n                                            }`}\n                                          >\n                                            <CToastHeader className=\"d-flex flex-wrap justify-content-sm-between justify-content-center mx-2\">\n                                              <div\n                                                className={`w-100 fw-bold text-center text-sm-start text-md-start text-lg-start`}\n                                              >\n                                                <div>\n                                                  <small className=\"mx-2 my-2\">\n                                                    Semester: {timetable.division.semester.no} |\n                                                    Division : {timetable.division.division_name}\n                                                  </small>\n                                                </div>\n                                                <div>\n                                                  {lecture.is_proxy ? (\n                                                    <small className=\"mx-2 my-2\">\n                                                      {lecture.is_proxy ? 'Proxied from ' : ''}\n                                                      {lecture.link\n                                                        ? lecture.link.from_lecture.subject\n                                                            .subject_name\n                                                        : ''}\n                                                    </small>\n                                                  ) : null}\n                                                </div>\n\n                                                <hr className=\"w-100 my-2\"></hr>\n                                              </div>\n                                              <div className=\"fw-bold mx-2\">\n                                                {lecture.subject.subject_name\n                                                  .charAt(0)\n                                                  .toUpperCase() +\n                                                  lecture.subject.subject_name.slice(1)}\n                                              </div>\n                                              <small className=\"mx-2 my-2\">\n                                                {lecture.type.toUpperCase()}\n                                              </small>\n                                              <small className=\"mx-2 my-2\">\n                                                {moment(\n                                                  lecture.start_time.slice(0, 5),\n                                                  'HH:mm',\n                                                ).format('h:mm A')}{' '}\n                                                |{' '}\n                                                {moment(\n                                                  lecture.end_time.slice(0, 5),\n                                                  'HH:mm',\n                                                ).format('h:mm A')}\n                                              </small>\n                                            </CToastHeader>\n                                            <CToastBody className=\"d-flex flex-row flex-wrap justify-content-center\">\n                                              <CRow className=\"w-100 align-items-center\">\n                                                <CCol className=\"text-sm-start text-center col-12 col-sm-4 col-lg-4 col-md-4\">\n                                                  Prof -{' '}\n                                                  {lecture.teacher.charAt(0).toUpperCase() +\n                                                    lecture.teacher.slice(1)}\n                                                </CCol>\n                                                <CCol className=\" text-sm-end col-12 col-sm-4 col-lg-4 col-md-4\">\n                                                  <div className=\"w-100 text-center\">\n                                                    {' '}\n                                                    {lecture.batches.map((batch, index) => (\n                                                      <span key={index}>\n                                                        {batch.batch_name.toUpperCase()}\n                                                        {index < lecture.batches.length - 1 && ', '}\n                                                      </span>\n                                                    ))}{' '}\n                                                  </div>\n                                                </CCol>\n                                                <CCol className=\"text-sm-end text-center col-12 col-sm-4 col-lg-4 col-md-4\">\n                                                  {lecture.classroom.class_name\n                                                    .charAt(0)\n                                                    .toUpperCase() +\n                                                    lecture.classroom.class_name.slice(1)}{' '}\n                                                </CCol>\n                                              </CRow>\n\n                                              <div className=\"d-flex w-100\">\n                                                <div className=\"w-100\">\n                                                  {(lecture.session.active === 'pre' ||\n                                                    lecture.session.active === 'ongoing') && (\n                                                    <button\n                                                      className={`btn ${\n                                                        lecture.session.attendances.is_present\n                                                          ? 'btn-outline-secondary'\n                                                          : 'btn-outline-primary'\n                                                      } w-100 mt-3`}\n                                                      value={lecture.slug}\n                                                      onClick={(e) =>\n                                                        !lecture.session.attendances.is_present &&\n                                                        mark_attendance(e.target, e.target.value)\n                                                      }\n                                                      disabled={\n                                                        lecture.session.attendances.is_present\n                                                      }\n                                                    >\n                                                      Mark Your Attendance\n                                                    </button>\n                                                  )}\n                                                  {lecture.session.active === 'post' && (\n                                                    <button\n                                                      className=\"btn btn-outline-secondary w-100 mt-3\"\n                                                      disabled={true}\n                                                    >\n                                                      Session Ended\n                                                    </button>\n                                                  )}\n                                                </div>\n                                              </div>\n                                              {lecture.survey &&\n                                              !markedSurveys.includes(lecture.survey.slug) ? (\n                                                <form\n                                                  className=\"w-100\"\n                                                  onSubmit={handleSubmit(onSurveySubmit)}\n                                                >\n                                                  <div className=\"d-flex w-full\">\n                                                    <input\n                                                      type=\"hidden\"\n                                                      value={lecture.survey.slug}\n                                                      {...register('survey_slug')}\n                                                    />\n                                                    <div className=\"w-100\">\n                                                      <button\n                                                        type=\"button\"\n                                                        className=\" w-full bg-blue-700 p-2 mt-3 text-white\"\n                                                        onClick={() =>\n                                                          setAttendSurveyDropdown(\n                                                            !attendSurveyDropdown,\n                                                          )\n                                                        }\n                                                      >\n                                                        Attend Survey\n                                                      </button>\n                                                      <CToastBody\n                                                        className={`flex-row flex-wrap justify-content-center bg-slate-200 ${\n                                                          attendSurveyDropdown ? 'hidden' : 'flex'\n                                                        }`}\n                                                      >\n                                                        <div\n                                                          className={`w-100 fw-bold text-center text-sm-start text-md-start text-lg-start`}\n                                                        >\n                                                          <div>\n                                                            <small className=\"mx-2 my-2 text-lg block\">\n                                                              {lecture.survey.title}\n                                                            </small>\n                                                            <small className=\"mx-2 my-2 text-xs flex items-center gap-2 text-blue-800\">\n                                                              <svg\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                                width={16}\n                                                                height={16}\n                                                                fill=\"currentColor\"\n                                                                className=\"bi bi-check2-circle\"\n                                                                viewBox=\"0 0 16 16\"\n                                                              >\n                                                                <path d=\"M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0\" />\n                                                                <path d=\"M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0z\" />\n                                                              </svg>\n                                                              {lecture.survey.allowd_choices ==\n                                                              'single'\n                                                                ? 'Choose One'\n                                                                : 'Choose Many'}\n                                                            </small>\n                                                          </div>\n                                                          <hr className=\"w-100 my-2\"></hr>\n                                                        </div>\n                                                        {lecture.survey.options.map(\n                                                          (option, index) => (\n                                                            <div\n                                                              className={`w-100 fw-bold text-center text-sm-start text-md-start text-lg-start`}\n                                                              key={index}\n                                                            >\n                                                              <div>\n                                                                <small className=\"mx-2 my-2 text-[1rem] text-black flex items-center gap-2\">\n                                                                  <input\n                                                                    id=\"default-radio-1\"\n                                                                    type=\"radio\"\n                                                                    value={option.slug}\n                                                                    name=\"default-radio\"\n                                                                    className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                                                                    {...register(\n                                                                      'marked_option_slug',\n                                                                    )}\n                                                                  />\n                                                                  {option.option}\n                                                                </small>\n                                                                <div className=\"w-full bg-gray-200  rounded-full h-2 dark:bg-gray-700\">\n                                                                  <div\n                                                                    className=\"bg-green-600 h-2 rounded-full\"\n                                                                    style={{\n                                                                      width: `${option.submission_percentage}%`,\n                                                                    }}\n                                                                  />\n                                                                </div>\n                                                              </div>\n                                                              <hr className=\"w-100 my-2\"></hr>\n                                                            </div>\n                                                          ),\n                                                        )}\n                                                        <div className=\"flex-initial py-3 w-full\">\n                                                          <button\n                                                            className=\"w-full justify-center flex items-center px-5 py-2.5 font-medium tracking-wide text-white capitalize   bg-slate-800 rounded-md hover:bg-gray-800  focus:outline-none focus:bg-gray-900  transition duration-300 transform active:scale-95 ease-in-out\"\n                                                            type=\"submit\"\n                                                          >\n                                                            <svg\n                                                              xmlns=\"http://www.w3.org/2000/svg\"\n                                                              height=\"24px\"\n                                                              viewBox=\"0 0 24 24\"\n                                                              width=\"24px\"\n                                                              fill=\"#FFFFFF\"\n                                                            >\n                                                              <path\n                                                                d=\"M0 0h24v24H0V0z\"\n                                                                fill=\"none\"\n                                                              />\n                                                              <path\n                                                                d=\"M5 5v14h14V7.83L16.17 5H5zm7 13c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-8H6V6h9v4z\"\n                                                                opacity=\".3\"\n                                                              />\n                                                              <path d=\"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm2 16H5V5h11.17L19 7.83V19zm-7-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zM6 6h9v4H6z\" />\n                                                            </svg>\n                                                            <span className=\"pl-2 mx-1\">\n                                                              Submit\n                                                            </span>\n                                                          </button>\n                                                        </div>\n                                                      </CToastBody>\n                                                    </div>\n                                                  </div>\n                                                </form>\n                                              ) : null}\n                                              <div></div>\n                                            </CToastBody>\n                                          </CToast>\n                                        </div>\n                                      </div>\n                                    </div>\n                                  </CCol>\n                                </CRow>\n                              </div>\n                            )\n                          })\n                        ) : (\n                          <div className=\"d-flex w-100 justify-content-center\">\n                            <div className=\"alert alert-warning w-75 my-2 text-center \">\n                              <span className=\"\">\n                                No lecture sessions are there for this branch\n                              </span>\n                            </div>\n                          </div>\n                        )\n                      ) : (\n                        <div className=\"d-flex justify-content-center w-full my-3\">\n                          <CToast\n                            className=\"w-100\"\n                            animation={false}\n                            autohide={false}\n                            visible={true}\n                          >\n                            <CToastBody className=\"text-center w-full\">\n                              There is no lecture today....\n                            </CToastBody>\n                          </CToast>\n                        </div>\n                      )}\n                    </div>\n                  )\n                })\n              })}\n          </CCol>\n        </CRow>\n      ) : (\n        <iframe\n          width=\"100%\"\n          height=\"315\"\n          src=\"https://www.youtube.com/embed/ERhEIsEXG50?si=i9ez0hxneFCuAe6E\"\n          title=\"YouTube video player\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n          allowFullScreen\n        ></iframe>\n      )}\n    </>\n  )\n}\n\nexport default StudentDashboard\n"],"names":["StudentDashboard","StoredTokens","CallAPI","useAPI","TimeTables","setTimeTables","useState","permission_state","set_permission_state","attendSurveyDropdown","setAttendSurveyDropdown","markedSurveys","setMarkedSurveys","register","handleSubmit","watch","formState","errors","useForm","onSurveySubmit","async","axiosInstance","axios","create","response_obj","data","error","response","survey_slug","alert","errorMessage","message","useEffect","load_teacher_timetable","navigator","permissions","query","name","then","result","state","geolocation","getCurrentPosition","position","addEventListener","_jsx","_Fragment","children","CRow","className","CCol","map","branch","index","timetables","timetable","_jsxs","CAlert","color","visible","branch_name","schedule","lectures","length","lecture","style","padding","paddingBottom","CToast","autohide","concat","is_proxy","CToastHeader","division","semester","no","division_name","link","from_lecture","subject","subject_name","charAt","toUpperCase","slice","type","moment","start_time","format","end_time","CToastBody","teacher","batches","batch","batch_name","classroom","class_name","session","active","attendances","is_present","value","slug","onClick","e","btn","lecture_slug","latitude","positions","coords","longitude","disabled","classList","add","code","enableHighAccuracy","maximumAge","mark_attendance","target","survey","includes","onSubmit","title","xmlns","width","height","fill","viewBox","d","allowd_choices","options","option","id","submission_percentage","opacity","animation","src","frameBorder","allow","allowFullScreen"],"sourceRoot":""}