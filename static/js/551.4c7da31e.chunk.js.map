{"version":3,"file":"static/js/551.4c7da31e.chunk.js","mappings":"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","sources":["views/student_controller/StudentDashboard.js"],"sourcesContent":["import React from 'react'\n\nimport { useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CToast,\n  CToastHeader,\n  CToastBody,\n  CAlert,\n} from '@coreui/react'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nimport useAPI from 'src/global_function/useApi'\nimport moment from 'moment'\n\nconst StudentDashboard = () => {\n  const [StoredTokens, CallAPI] = useAPI()\n  const [TimeTables, setTimeTables] = useState(null)\n  const load_teacher_timetable = async () => {\n    const headers = {\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': true,\n    }\n    const axiosInstance = axios.create()\n    const response_obj = await CallAPI(\n      StoredTokens,\n      axiosInstance,\n      '/manage/get_timetable_for_student',\n      'get',\n      headers,\n      null,\n      null,\n    )\n    if (response_obj.error === false) {\n      const response = response_obj.response\n      console.log(response.data.data)\n      setTimeTables(response.data.data)\n    }\n  }\n\n  const mark_attendance = async (btn, lecture_slug) => {\n    if (!navigator.geolocation) {\n      alert('Geolocation is not supported by this browser.')\n      return\n    }\n    try {\n      navigator.geolocation.getCurrentPosition(\n        async (positions) => {   \n          const latitude = positions.coords.latitude\n          const longitude = positions.coords.longitude\n          console.log(positions.coords);       \n          const headers = {\n            'Content-Type': 'application/json',\n            'ngrok-skip-browser-warning': true,\n          }\n          const axiosInstance = axios.create()\n          const response_obj = await CallAPI(\n            StoredTokens,\n            axiosInstance,\n            '/manage/session/mark_attendance_for_student/',\n            'post',\n            headers,\n            { lecture_slug: lecture_slug,latitude:latitude,longitude:longitude},\n            null,\n          )\n          if (response_obj.error === false) {\n            const response = response_obj.response\n            if (response.data.data === true)\n            {\n              btn.disabled = true;btn.classList.add('btn-outline-secondary')\n              alert('your Attendance Marked successfully')\n            }\n          } else {\n            if (response_obj.errorMessage.code == 100) {\n              btn.disabled = true\n              btn.classList.add('btn-outline-secondary')\n            }\n            alert(response_obj.errorMessage.message)\n          }\n        },\n        (error) => {\n          alert(error.message)\n          return\n        },\n        { enableHighAccuracy: true, maximumAge: 0 },\n      )\n    } catch (error) {\n      alert('Location services are not available, Please enable it from you browser')\n      return\n    }\n  }\n\n  useEffect(() => {\n    load_teacher_timetable()\n  }, [])\n\n  return (\n    <>\n      <CRow className=\"mb-3\">\n        <CCol>\n          {TimeTables ? (\n            TimeTables.map((timetable, index) => (\n              <CRow key={index} className=\"text-center mb-5 justify-content-center\">\n                <CCol className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                  <CCard className=\"\">\n                    <CCardHeader className=\"d-flex justify-content-center justify-content-sm-between flex-wrap\">\n                      <span className=\"mx-2\">Semester - {timetable.division.semester.no}</span>\n                      <span className=\"mx-2\">Division - {timetable.division.division_name}</span>\n                    </CCardHeader>\n                    <CCardBody>\n                      <>\n                        <CRow className=\"text-center justify-content-center\">\n                          <CCol className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"\">\n                              <div>\n                                <CRow className=\"flex-column\" style={{ padding: '0' }}>\n                                  {timetable && timetable.schedules.length > 0 ? (\n                                    timetable.schedules.map((item, index) => (\n                                      <>\n                                        <CCol\n                                          className=\"d-flex align-items-center flex-column\"\n                                          key={index}\n                                        >\n                                          <CAlert\n                                            className=\"m-0 rounded-0 w-100 p-2 d-flex justify-content-between align-items-center\"\n                                            color=\"primary\"\n                                            visible={true}\n                                          >\n                                            {item.day.toUpperCase()}\n                                          </CAlert>\n                                          <div className=\"w-100  rounded-0 border-0\">\n                                            <div className=\"\" style={{ paddingBottom: '0px' }}>\n                                              <div className=\"justify-content-center w-100\">\n                                                {item.lectures.length > 0 ? (\n                                                  item.lectures.map((lecture, index) => (\n                                                    <CToast\n                                                      key={index}\n                                                      autohide={false}\n                                                      visible={true}\n                                                      className={`mb-3 mt-3 w-100 ${\n                                                        lecture.is_proxy ? 'border-red-700' : ''\n                                                      }`}\n                                                    >\n                                                      <CToastHeader className=\"d-flex flex-wrap justify-content-sm-between justify-content-center\">\n                                                        {lecture.is_proxy ? (\n                                                          <div className={`w-100 fw-bold`}>\n                                                            <small className=\"mx-2 my-2\">\n                                                              {lecture.is_proxy\n                                                                ? 'Proxied from '\n                                                                : ''}\n                                                              {lecture.link\n                                                                ? lecture.link.from_lecture.subject\n                                                                    .subject_name\n                                                                : ''}\n                                                            </small>\n                                                            <hr className=\"w-100 my-2\"></hr>\n                                                          </div>\n                                                        ) : null}\n                                                        <div className=\"fw-bold mx-2 my-2\">\n                                                          {lecture.subject.subject_name\n                                                            .charAt(0)\n                                                            .toUpperCase() +\n                                                            lecture.subject.subject_name.slice(1)}\n                                                        </div>\n                                                        <small className=\"mx-2 my-2\">\n                                                          {lecture.type.toUpperCase()}\n                                                        </small>\n                                                        <small className=\"mx-2 my-2\">\n                                                          {moment(\n                                                            lecture.start_time.slice(0, 5),\n                                                            'HH:mm',\n                                                          ).format('h:mm A')}{' '}\n                                                          |{' '}\n                                                          {moment(\n                                                            lecture.end_time.slice(0, 5),\n                                                            'HH:mm',\n                                                          ).format('h:mm A')}\n                                                        </small>\n                                                      </CToastHeader>\n                                                      <CToastBody className=\"d-flex flex-row flex-wrap justify-content-center justify-content-md-between\">\n                                                        <CRow className=\"w-100 align-items-center\">\n                                                          <CCol className=\"text-sm-start col-12 col-sm-4 col-lg-4 col-md-4\">\n                                                            Prof -{' '}\n                                                            {lecture.teacher\n                                                              .charAt(0)\n                                                              .toUpperCase() +\n                                                              lecture.teacher.slice(1)}{' '}\n                                                          </CCol>\n                                                          <CCol className=\" text-sm-end col-12 col-sm-4 col-lg-4 col-md-4\">\n                                                            <div className=\"w-100 text-center\">\n                                                              {' '}\n                                                              {lecture.batches.map(\n                                                                (batch, index) => (\n                                                                  <span key={index}>\n                                                                    {batch.batch_name.toUpperCase()}\n                                                                    {index <\n                                                                      lecture.batches.length - 1 &&\n                                                                      ', '}\n                                                                  </span>\n                                                                ),\n                                                              )}{' '}\n                                                            </div>\n                                                          </CCol>\n                                                          <CCol className=\"text-sm-end col-12 col-sm-4 col-lg-4 col-md-4\">\n                                                            {lecture.classroom.class_name\n                                                              .charAt(0)\n                                                              .toUpperCase() +\n                                                              lecture.classroom.class_name.slice(\n                                                                1,\n                                                              )}{' '}\n                                                          </CCol>\n                                                        </CRow>\n                                                        <div className=\"d-flex flex-wrap w-100\">\n                                                          <div className=\"w-100 mt-3\">\n                                                            {(lecture.session.active === 'pre' ||\n                                                              lecture.session.active ===\n                                                                'ongoing') && (\n                                                              <button\n                                                                className={`btn ${\n                                                                  lecture.session.attendances\n                                                                    .is_present\n                                                                    ? 'btn-outline-secondary'\n                                                                    : 'btn-outline-primary'\n                                                                } w-100 mt-3`}\n                                                                value={lecture.slug}\n                                                                onClick={(e) =>\n                                                                  !lecture.session.attendances\n                                                                    .is_present &&\n                                                                  mark_attendance(\n                                                                    e.target,\n                                                                    e.target.value,\n                                                                  )\n                                                                }\n                                                                disabled={\n                                                                  lecture.session.attendances\n                                                                    .is_present\n                                                                }\n                                                              >\n                                                                Mark Your Attendance\n                                                              </button>\n                                                            )}\n                                                            {lecture.session.active === 'post' && (\n                                                              <button\n                                                                className=\"btn btn-outline-secondary w-100 mt-3\"\n                                                                disabled={true}\n                                                              >\n                                                                Session Ended\n                                                              </button>\n                                                            )}\n                                                          </div>\n                                                        </div>\n\n                                                        <div>\n                                                          <hr></hr>\n                                                        </div>\n                                                      </CToastBody>\n                                                    </CToast>\n                                                  ))\n                                                ) : (\n                                                  <CToast\n                                                    className=\"w-100 d-flex justify-content-center mt-3\"\n                                                    autohide={false}\n                                                    visible={true}\n                                                  >\n                                                    <CToastBody>No Lectures Today</CToastBody>\n                                                  </CToast>\n                                                )}\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </CCol>\n                                      </>\n                                    ))\n                                  ) : (\n                                    <CToast\n                                      className=\"w-100 d-flex justify-content-center mt-3\"\n                                      autohide={false}\n                                      visible={true}\n                                    >\n                                      <CToastBody>No Lectures Today</CToastBody>\n                                    </CToast>\n                                  )}\n                                </CRow>\n                              </div>\n                            </div>\n                          </CCol>\n                        </CRow>\n                      </>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            ))\n          ) : (\n            <CToast animation={false} autohide={false} visible={true} className=\"mx-auto w-100\">\n              <CToastHeader className=\"bg-dark d-flex justify-content-center\">\n                <img\n                  src=\"/static/media/smartroll_logo.a3c3e21d0b4a56919e74.png\"\n                  width={100}\n                  alt=\"SmartRoll Logo\"\n                />\n              </CToastHeader>\n              <CToastBody>\n                <p>No Timetable Found</p>\n              </CToastBody>\n            </CToast>\n          )}\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default StudentDashboard\n"],"names":["StudentDashboard","StoredTokens","CallAPI","useAPI","TimeTables","setTimeTables","useState","useEffect","async","axiosInstance","axios","create","response_obj","error","response","console","log","data","load_teacher_timetable","_jsx","_Fragment","children","CRow","className","CCol","map","timetable","index","_jsxs","CCard","CCardHeader","division","semester","no","division_name","CCardBody","style","padding","schedules","length","item","CAlert","color","visible","day","toUpperCase","paddingBottom","lectures","lecture","CToast","autohide","concat","is_proxy","CToastHeader","link","from_lecture","subject","subject_name","charAt","slice","type","moment","start_time","format","end_time","CToastBody","teacher","batches","batch","batch_name","classroom","class_name","session","active","attendances","is_present","value","slug","onClick","e","btn","lecture_slug","navigator","geolocation","getCurrentPosition","latitude","positions","coords","longitude","disabled","classList","add","alert","errorMessage","code","message","enableHighAccuracy","maximumAge","mark_attendance","target","animation","src","width","alt"],"sourceRoot":""}