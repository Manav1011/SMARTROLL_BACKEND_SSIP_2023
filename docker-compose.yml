version: '3'

services:
  web:
    image: smartroll:latest
    container_name: smartroll
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SETTINGS_MODULE=SMARTROLL.settings
      - SECRET=django-insecure-%2%pce8*3&4x-plp)vyxlk^lfuwcq=%88=pzxx8dwsnv%y+_9j
      - DB_NAME=smartroll
      - DB_USER=manav1011
      - DB_PASS=Manav@1011
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis      
      - NGROK_PROXY=https://86e4-2405-201-2024-b862-d802-ad7e-8279-635b.ngrok-free.app
    command: >
      bash -c "
        apt-get update && apt-get install -y cron &&
        pip install -r requirements.txt &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py flush --noinput &&
        python manage.py loaddata dumpdata.json &&
        python manage.py collectstatic --noinput &&
        python manage.py crontab remove &&
        python manage.py crontab remove &&
        python manage.py crontab add && 
        python manage.py crontab show && 
        openssl ecparam -name prime256v1 -genkey -noout -out vapid_private.pem &&
        openssl ec -in ./vapid_private.pem -outform DER|tail -c +8|head -c 32|base64|tr -d '=' |tr '/+' '_-' >> private_key.txt &&
        openssl ec -in ./vapid_private.pem -pubout -outform DER|tail -c 65|base64|tr -d '=' |tr '/+' '_-' >> public_key.txt &&
        daphne -b 0.0.0.0 -p 8000 SMARTROLL.asgi:application
      "

  postgres:
    image: postgres:latest
    container_name: docker_test_postgres
    environment:
      POSTGRES_DB: smartroll
      POSTGRES_USER: manav1011
      POSTGRES_PASSWORD: Manav@1011
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U manav1011 -d smartroll"]  # Adjusted to use the correct database name
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    container_name: smartroll_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 5